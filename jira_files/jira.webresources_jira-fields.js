;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/field-templates.soy' */
// This file was automatically generated from field-templates.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace JIRA.Templates.Fields.
 */

if (typeof JIRA == 'undefined') { var JIRA = {}; }
if (typeof JIRA.Templates == 'undefined') { JIRA.Templates = {}; }
if (typeof JIRA.Templates.Fields == 'undefined') { JIRA.Templates.Fields = {}; }


JIRA.Templates.Fields.username = function(opt_data, opt_ignored) {
  return '' + ((opt_data.escape) ? soy.$$escapeHtml(opt_data.displayName) : soy.$$filterNoAutoescape(opt_data.displayName));
};
if (goog.DEBUG) {
  JIRA.Templates.Fields.username.soyTemplateName = 'JIRA.Templates.Fields.username';
}


JIRA.Templates.Fields.recipientUsername = function(opt_data, opt_ignored) {
  return '<li data-username="' + soy.$$escapeHtml(opt_data.username) + '" title=' + soy.$$escapeHtml(opt_data.username) + '><span><span class="user-hover" rel="' + soy.$$escapeHtml(opt_data.username) + '"><img alt="" src="' + soy.$$escapeHtml(opt_data.icon) + '" title="' + JIRA.Templates.Fields.username(opt_data) + '"><span title="' + JIRA.Templates.Fields.username(opt_data) + '">' + JIRA.Templates.Fields.username(opt_data) + '</span></span>' + ((! opt_data.readOnly) ? '<button type="button" class="remove-recipient item-delete"><span class="icon-default aui-icon aui-icon-small aui-iconfont-delete">' + soy.$$escapeHtml(AJS.format("Remove watcher: {0}",opt_data.username)) + '</span></button>' : '') + '</span></li>';
};
if (goog.DEBUG) {
  JIRA.Templates.Fields.recipientUsername.soyTemplateName = 'JIRA.Templates.Fields.recipientUsername';
}


JIRA.Templates.Fields.recipientEmail = function(opt_data, opt_ignored) {
  return '<li data-email="' + soy.$$escapeHtml(opt_data.email) + '" title=' + soy.$$escapeHtml(opt_data.email) + '><span><img src="' + soy.$$escapeHtml(opt_data.icon) + '" title="' + soy.$$escapeHtml(opt_data.email) + '"><span title="' + soy.$$escapeHtml(opt_data.email) + '">' + soy.$$escapeHtml(opt_data.email) + '</span><span class="remove-recipient item-delete"><span class="icon-default aui-icon aui-icon-small aui-iconfont-delete"></span></span></span></li>';
};
if (goog.DEBUG) {
  JIRA.Templates.Fields.recipientEmail.soyTemplateName = 'JIRA.Templates.Fields.recipientEmail';
}
;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/LabelPicker.js' */
define("jira/field/label-picker",["jira/util/formatter","jira/ajs/select/multi-select","jira/ajs/list/group-descriptor","jira/ajs/list/item-descriptor","wrm/context-path","jquery"],function(formatter,MultiSelect,GroupDescriptor,ItemDescriptor,wrmContextPath,jQuery){var contextPath=wrmContextPath();return MultiSelect.extend({_getDefaultOptions:function(){return jQuery.extend(true,this._super(),{ajaxOptions:{url:contextPath+"/includes/js/ajs/layer/labeldata.js",query:true,formatResponse:this._formatResponse},removeDuplicates:true,removeOnUnSelect:true,userEnteredOptionsMsg:"New Label"})},isValidItem:function(itemValue){return !/\s/.test(itemValue)},_handleServerSuggestions:function(data){if(data&&data.token){if(jQuery.trim(this.$field.val())!==data.token){return }}this._super(data)},_handleSpace:function(){if(jQuery.trim(this.$field.val())!==""){if(this.handleFreeInput()){this.hideSuggestions()}}},keys:{"Spacebar":function(event){this._handleSpace();event.preventDefault()}},_formatResponse:function(data){var optgroup=new GroupDescriptor({label:"Suggestions",type:"optgroup",styleClass:"labels-suggested"});if(data&&data.suggestions){jQuery.each(data.suggestions,function(){optgroup.addItem(new ItemDescriptor({value:this.label,label:this.label,html:this.html,highlighted:true}))})}return[optgroup]},handleFreeInput:function(){var values=jQuery.trim(this.$field.val()).match(/\S+/g);if(values){for(var value,i=0;value=values[i];i++){this.addItem({value:value,label:value})}this.model.$element.trigger("change")}this.$field.val("")}})});AJS.namespace("AJS.LabelPicker",null,require("jira/field/label-picker"));AJS.namespace("JIRA.LabelPicker",null,require("jira/field/label-picker"));;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/LabelPickerFactory.js' */
define("jira/field/label-picker-factory",["jira/field/label-picker","jira/data/parse-options-from-fieldset","jquery","exports"],function(LabelPicker,parseOptionsFromFieldset,$,exports){exports.createPicker=function($fieldset,context){var opts=parseOptionsFromFieldset($fieldset),$select=$("#"+opts.id,context),issueId=opts.issueId,data={};if(/customfield_\d/.test(opts.id)){data.customFieldId=parseInt(opts.id.replace("customfield_",""),10)}new LabelPicker({element:$select,ajaxOptions:{url:contextPath+"/rest/api/1.0/labels"+(issueId?"/"+issueId:"")+"/suggest",data:data}})}});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/MultiUserListPicker.Item.js' */
define("jira/field/multi-user-list-picker/item",["jira/util/data/meta","jira/ajs/control","jquery"],function(Meta,Control,jQuery){return Control.extend({init:function(options){this._setOptions(options);this.$lozenge=this._render("item");this.$removeButton=this.$lozenge.find(".remove-recipient");this._assignEvents("instance",this);this._assignEvents("lozenge",this.$lozenge);this._assignEvents("removeButton",this.$removeButton);this.$lozenge.prependTo(this.options.container)},_getDefaultOptions:function(){return{label:null,title:null,container:null,focusClass:"focused"}},_renders:{"item":function(){var descriptor=this.options.descriptor;var data;if(descriptor.noExactMatch()!==true){data={escape:false,username:descriptor.value(),icon:descriptor.icon(),displayName:AJS.escapeHtml(descriptor.label())};return jQuery(JIRA.Templates.Fields.recipientUsername(data))}else{data={email:descriptor.value(),icon:Meta.get("default-avatar-url")};return jQuery(JIRA.Templates.Fields.recipientEmail(data))}}},_events:{"instance":{"remove":function(){this.$lozenge.remove()}},"removeButton":{"click":function(e){e.stopPropagation();this.trigger("remove")}}}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/MultiUserListPicker.js' */
define("jira/field/multi-user-list-picker",["jira/util/formatter","jira/field/multi-user-list-picker/item","jira/ajs/select/suggestions/user-list-suggest-handler","jira/ajs/select/multi-select","jira/ajs/list/item-descriptor","jira/ajs/list/group-descriptor","jira/ajs/group","jquery"],function(formatter,MultiUserListPickerItem,UserListSuggestHandler,MultiSelect,ItemDescriptor,GroupDescriptor,Group,jQuery){return MultiSelect.extend({init:function(options){var restPath="/rest/api/1.0/users/picker";function formatResponse(response){var ret=[];jQuery(response).each(function(i,suggestions){var groupDescriptor=new GroupDescriptor({weight:i,label:suggestions.footer});jQuery(suggestions.users).each(function(){groupDescriptor.addItem(new ItemDescriptor({value:this.name,label:this.displayName,html:this.html,icon:this.avatarUrl,allowDuplicate:false,highlighted:true}))});ret.push(groupDescriptor)});return ret}jQuery.extend(options,{itemAttrDisplayed:"label",userEnteredOptionsMsg:"Email address",showDropdownButton:false,removeOnUnSelect:true,ajaxOptions:{url:contextPath+restPath,query:true,data:{showAvatar:true},formatResponse:formatResponse},suggestionsHandler:UserListSuggestHandler,itemGroup:new Group(),itemBuilder:function(descriptor){return new MultiUserListPickerItem({descriptor:descriptor,container:this.$selectedItemsContainer})}});this._super(options)},_createFurniture:function(disabled){this._super(disabled);if(this.options.description){this._render("description",this.options.description).insertAfter(this.$field)}},updateItemsIndent:jQuery.noop,_renders:{selectedItemsWrapper:function(){return jQuery('<div class="recipients"></div>')},selectedItemsContainer:function(){return jQuery("<ol />")},description:function(description){return jQuery("<div />").addClass("description").text(description)}}})});AJS.namespace("JIRA.MultiUserListPicker",null,require("jira/field/multi-user-list-picker"));AJS.namespace("JIRA.MultiUserListPicker.Item",null,require("jira/field/multi-user-list-picker/item"));;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initCascadingSelects.js' */
define("jira/field/init-cascading-selects",["jquery","jira/util/events/reasons","jira/util/events/types","jira/util/events"],function(jQuery,Reasons,Types,Events){function initCascadingSelect(el){jQuery(el||document.body).find("div.aui-field-cascadingselect").add("tr.aui-field-cascadingselect").add("td.aui-field-cascadingselect").each(function(){var $container=jQuery(this),parent=$container.find(".cascadingselect-parent"),parentOptions=parent.find("option"),oldClass="",child=$container.find(".cascadingselect-child"),childOptions=child.find("option"),selectedChild=child.find(":selected");function update(){var placeholder,currentClass=parent.find("option:selected").attr("class");if(currentClass!==oldClass){placeholder=jQuery("<span />").insertAfter(child);child.detach();child.find("option").each(function(i,elem){elem.parentNode.removeChild(this)});child.insertAfter(placeholder);placeholder.remove();childOptions.filter("."+parent.find("option:selected").attr("class")).appendTo(child);if(selectedChild.hasClass(parent.find("option:selected").attr("class"))){child.val(selectedChild.val())}else{child.val(child.find("option:first").val())}oldClass=currentClass}}parent.bind("cascadingSelectChanged",update).change(function(){jQuery(this).trigger("cascadingSelectChanged")}).trigger("cascadingSelectChanged")})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){initCascadingSelect(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/ComponentPicker.js' */
define("jira/field/component-picker",["jira/util/formatter","jira/util/events","jira/ajs/select/suggestions/only-new-items-suggest-handler","jira/ajs/select/multi-select","underscore","jquery"],function(formatter,Events,OnlyNewItemsSuggestHandler,MultiSelect,_,jQuery){return MultiSelect.extend({init:function(options){this._super(options);this.suggestionsHandler=new OnlyNewItemsSuggestHandler(this.options,this.model)},_getDefaultOptions:function(opts){var canCreate=false;if(opts&&opts.element){canCreate=jQuery(opts.element).data("create-permission")}if(canCreate){return jQuery.extend(true,this._super(),{userEnteredOptionsMsg:"New Component"})}else{return this._super(opts)}},_selectionHandler:function(selected,e){var allExistingDescriptors=this.model.getDisplayableSelectedDescriptors().concat(this.model.getDisplayableUnSelectedDescriptors());var selectedDescriptor=selected.data("descriptor");var existingDescriptor=_.find(allExistingDescriptors,function(descriptor){return descriptor.label()===selectedDescriptor.label()});if(!existingDescriptor){selectedDescriptor.properties.value="nv_"+selectedDescriptor.value();Events.trigger("Issue.Component.new.selected",[selectedDescriptor.value()])}this._super(selected,e)}})});AJS.namespace("JIRA.ComponentPicker",null,require("jira/field/component-picker"));;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initComponentPickers.js' */
define("jira/field/init-component-pickers",["jira/field/component-picker","jira/util/formatter","jira/util/events","jira/util/events/types","jira/util/events/reasons","jquery"],function(ComponentPicker,formatter,Events,Types,Reasons,jQuery){function createPicker($selectField){new ComponentPicker({element:$selectField,itemAttrDisplayed:"label",errorMessage:"{0} is not a valid component.",maxInlineResultsDisplayed:15,expandAllResults:true})}function locateSelect(parent){var $parent=jQuery(parent),$selectField;if($parent.is("select")){$selectField=$parent}else{$selectField=$parent.find("select")}return $selectField}var DEFAULT_SELECTORS=["div.aui-field-componentspicker.frother-control-renderer","td.aui-field-componentspicker.frother-control-renderer","tr.aui-field-componentspicker.frother-control-renderer"];function findComponentSelectAndConvertToPicker(context,selector){selector=selector||DEFAULT_SELECTORS.join(", ");jQuery(selector,context).each(function(){var $selectField=locateSelect(this);if($selectField.length){createPicker($selectField)}})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){findComponentSelectAndConvertToPicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initMultiselectPickers.js' */
define("jira/field/init-multi-select-pickers",["jquery","jira/ajs/select/multi-select","jira/util/events/reasons","jira/util/events/types","jira/util/events","jira/util/formatter"],function(jQuery,MultiSelect,Reasons,Types,Events,formatter){function createPicker($selectField){new MultiSelect({element:$selectField,itemAttrDisplayed:"label",errorMessage:"{0} is not a valid value.",maxInlineResultsDisplayed:15,submitInputVal:true,expandAllResults:true})}function locateSelect(parent){var $parent=jQuery(parent),$selectField;if($parent.is("select")){$selectField=$parent}else{$selectField=$parent.find("select")}return $selectField}var DEFAULT_SELECTORS=["div.aui-field-multiselectpicker.frother-control-renderer"];function findComponentSelectAndConvertToPicker(context,selector){selector=selector||DEFAULT_SELECTORS.join(", ");jQuery(selector,context).each(function(){var $selectField=locateSelect(this);if($selectField.length){createPicker($selectField)}})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){findComponentSelectAndConvertToPicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initDatePickers.js' */
define("jira/field/init-date-pickers",["jquery","jira/data/parse-options-from-fieldset","jira/util/events/reasons","jira/util/events/types","jira/util/events"],function(jQuery,parseOptionsFromFieldset,Reasons,Types,Events){function initDatePicker(el){jQuery(el||document.body).find("div.aui-field-datepicker").add("tr.aui-field-datepicker").add("td.aui-field-datepicker").each(function(){var $container=jQuery(this),field=$container.find("input:text"),defaultCheckbox=$container.find("#useCurrentDate"),params=parseOptionsFromFieldset($container.find("fieldset.datepicker-params"));params.context=el;Calendar.setup(params);function toggleField(){field.prop("disabled",defaultCheckbox.is(":checked"))}if(defaultCheckbox.length){toggleField();defaultCheckbox.click(toggleField)}})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){initDatePicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initLegacyGroupPickers.js' */
define("jira/field/init-legacy-group-pickers",["jquery","jira/util/events/reasons","jira/util/events/types","jira/util/events"],function(jQuery,Reasons,Types,Events){function initLegacyGroupPicker(el){jQuery(el||document.body).find("div.aui-field-grouppicker").add("tr.aui-field-grouppicker").add("td.aui-field-grouppicker").each(function(){var $container=jQuery(this),trigger=$container.find("a.grouppicker-trigger"),url=trigger.attr("href");function openGroupPickerWindow(e){e.preventDefault();window.open(url,"GroupPicker","status=yes,resizable=yes,top=100,left=100,width=800,height=750,scrollbars=yes")}trigger.click(openGroupPickerWindow)})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){initLegacyGroupPicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initIssuePickers.js' */
define("jira/field/init-issue-pickers",["jira/field/issue-picker","jira/util/events","jira/util/events/types","jira/util/events/reasons","jquery","jira/util/formatter"],function(IssuePicker,Events,Types,Reasons,jQuery,formatter){function initIssuePicker(el){jQuery(el||document.body).find(".aui-field-issuepicker").each(function(){new IssuePicker({element:jQuery(this),userEnteredOptionsMsg:"Enter issue key",uppercaseUserEnteredOnSelect:true})})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){initIssuePicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initLabelPickers.js' */
define("jira/field/init-label-pickers",["jira/field/label-picker-factory","jira/util/events","jira/util/events/types","jira/util/events/reasons","jquery"],function(LabelPickerFactory,Events,Types,Reasons,jQuery){var FIELDSET_SELECTOR="fieldset.labelpicker-params";function locateFieldset(parent){var $parent=jQuery(parent),$fieldset;if($parent.is(FIELDSET_SELECTOR)){$fieldset=$parent}else{$fieldset=$parent.find(FIELDSET_SELECTOR)}return $fieldset}function findLabelsFieldsetAndConvertToPicker(context,selector){selector=selector||".aui-field-labelpicker";jQuery(selector,context).each(function(){var $fieldset=locateFieldset(this);if($fieldset.length>0){LabelPickerFactory.createPicker($fieldset,context)}})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){findLabelsFieldsetAndConvertToPicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/VersionPicker.js' */
define("jira/field/version-picker",["jira/util/formatter","jira/util/events","jira/ajs/select/suggestions/only-new-items-suggest-handler","jira/ajs/select/multi-select","underscore","jquery"],function(formatter,Events,OnlyNewItemsSuggestHandler,MultiSelect,_,jQuery){return MultiSelect.extend({init:function(options){this._super(options);this.suggestionsHandler=new OnlyNewItemsSuggestHandler(this.options,this.model)},_getDefaultOptions:function(opts){var canCreate=false;if(opts&&opts.element){canCreate=jQuery(opts.element).data("create-permission")}if(canCreate){return jQuery.extend(true,this._super(),{userEnteredOptionsMsg:"New Version"})}else{return this._super(opts)}},_selectionHandler:function(selected,e){var allExistingVersionDescriptors=this.model.getDisplayableSelectedDescriptors().concat(this.model.getDisplayableUnSelectedDescriptors());var selectedDescriptor=selected.data("descriptor");var existingVersion=_.find(allExistingVersionDescriptors,function(descriptor){return descriptor.label()===selectedDescriptor.label()});if(!existingVersion){selectedDescriptor.properties.value="nv_"+selectedDescriptor.value();Events.trigger("Issue.Version.new.selected",[selectedDescriptor.value()])}this._super(selected,e)}})});AJS.namespace("JIRA.VersionPicker",null,require("jira/field/version-picker"));;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initVersionPickers.js' */
define("jira/field/init-version-pickers",["jira/field/version-picker","jira/util/formatter","jira/util/events","jira/util/events/types","jira/util/events/reasons","jquery"],function(VersionPicker,formatter,Events,Types,Reasons,jQuery){function createPicker($selectField){new VersionPicker({element:$selectField,itemAttrDisplayed:"label",removeOnUnSelect:false,submitInputVal:true,errorMessage:"{0} is not a valid version.",maxInlineResultsDisplayed:15,expandAllResults:true})}function locateSelect(parent){var $parent=jQuery(parent),$selectField;if($parent.is("select")){$selectField=$parent}else{$selectField=$parent.find("select")}return $selectField}function findVersionSelectAndConvertToPicker(context,selector){selector=selector||".aui-field-versionspicker.frother-control-renderer";jQuery(selector,context).each(function(){var $selectField=locateSelect(this);if($selectField.length){createPicker($selectField)}})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){findVersionSelectAndConvertToPicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initCommentControls.js' */
define("jira/field/init-comment-controls",["jira/skate","jira/ajs/select/security-level-select","jira/wikipreview/wiki-preview"],function(skate,SecurityLevelSelect,wikiPreview){skate("jira-wikifield",{type:skate.type.CLASSNAME,created:function(el){var prefs={fieldId:el.getAttribute("field-id"),trigger:el.querySelector(".wiki-preview").id,issueKey:el.getAttribute("issue-key"),rendererType:el.getAttribute("renderer-type")};wikiPreview(prefs,el).init()}});skate("security-level",{type:skate.type.CLASSNAME,created:function(el){var commentLevel=el.querySelector("#commentLevel");if(commentLevel){new SecurityLevelSelect(commentLevel)}}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initLogWorkControls.js' */
define("jira/field/init-log-work-controls",["jira/util/events","jira/util/events/types","jira/util/events/reasons","jquery"],function(Events,Types,Reasons,jQuery){function toggleTimeTrackingContainer(context,activate){var $logWorkContainer=jQuery(context).find("#worklog-logworkcontainer"),$timeTrackingContainer=jQuery(context).find("#worklog-timetrackingcontainer"),$logWorkCheckbox=jQuery(context).find("#log-work-activate");if(activate){$logWorkContainer.removeClass("hidden");$timeTrackingContainer.addClass("hidden");$logWorkCheckbox.prop("checked",true)}else{$logWorkContainer.addClass("hidden");$timeTrackingContainer.removeClass("hidden");$logWorkCheckbox.prop("checked",false)}}function applyLogworkControls(context){jQuery("#log-work-adjust-estimate-new-value, #log-work-adjust-estimate-manual-value",context).attr("disabled","disabled");jQuery("#log-work-adjust-estimate-"+jQuery("input[name=worklog_adjustEstimate]:checked,input[name=adjustEstimate]:checked",context).val()+"-value",context).removeAttr("disabled");jQuery("input[name=worklog_adjustEstimate],input[name=adjustEstimate]",context).change(function(){jQuery("#log-work-adjust-estimate-new-value,#log-work-adjust-estimate-manual-value",context).attr("disabled","disabled");jQuery("#log-work-adjust-estimate-"+jQuery(this).val()+"-value",context).removeAttr("disabled")});jQuery("#delete-log-work-adjust-estimate-new-value").change(function(){jQuery("#delete-log-work-adjust-estimate-new").prop("checked",true)});jQuery("#delete-log-work-adjust-estimate-manual-value").change(function(){jQuery("#delete-log-work-adjust-estimate-manual").prop("checked",true)});jQuery(context).find("#log-work-activate").change(function(){toggleTimeTrackingContainer(context,jQuery(this).is(":checked"))})}Events.bind(Types.VALIDATE_TIMETRACKING,function(e,context){toggleTimeTrackingContainer(context,true)});Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){applyLogworkControls(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initPriorityPickers.js' */
define("jira/field/init-priority-pickers",["jira/ajs/select/single-select","jira/util/events/reasons","jira/util/events/types","jira/util/events"],function(SingleSelect,Reasons,Types,Events){function createPriorityPicker(context){context.find("select#priority").each(function(i,el){new SingleSelect({element:el,revertOnInvalid:true})})}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){createPriorityPicker(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initInlineAttach.js' */
define("jira/field/init-inline-attach",["jquery","jira/util/events","jira/util/events/types","jira/util/events/reasons","jira/jquery/plugins/attachment/inline-attach"],function(jQuery,Events,Types,Reasons,jQuery){function createInlineAttach(context){context.find("input[type=file]:not('.ignore-inline-attach')").inlineAttach()}Events.bind(Types.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==Reasons.panelRefreshed){createInlineAttach(context)}})});;
;
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/init/init-jira-fields-webresource.js' */
require("jira/field/init-cascading-selects");require("jira/field/init-component-pickers");require("jira/field/init-multi-select-pickers");require("jira/field/init-date-pickers");require("jira/field/init-legacy-group-pickers");require("jira/field/init-issue-pickers");require("jira/field/init-label-pickers");require("jira/field/init-version-pickers");require("jira/field/init-comment-controls");require("jira/field/init-log-work-controls");require("jira/field/init-priority-pickers");require("jira/field/init-inline-attach");;