Ext.data.JsonP['Alloy_Controllers_Sample']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Alloy Controllers Sample</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n\t\t<div id=\"banner\" class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n\t\t\t<p>You can now find Appcelerator documentation at <a href=\"https://docs.axway.com/\" target=\"_blank\">https://docs.axway.com/</a>. This site will be taken down in the near future.</p>\n\t\t</div>\n        <div class=\"header\"/>\n\n        <div id=\"src-46255935\" class=\"content\">\n                        <h1>Alloy Controllers Sample</h1>\n    <p>This document provides a sample of how to use an Alloy Controller.    <span style=\"color: #2b4771;\">\n     </span>\n    </p>\n    <div class=\"section section-2 \" id=\"src-46255935_AlloyControllersSample-index.js\">\n        <h2 class=\"heading \"><span>index.js</span></h2>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">index.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"index.js\">\n<div class=\"line\"><code class=\"comments\">// These &quot;builtin&quot; requires will be detected by the alloy compile process.</code></div>\n<div class=\"line\"><code class=\"comments\">// You do not need to manually copy them to their project location.</code></div>\n<div class=\"line\"><code class=\"comments\">// When the alloy compile finds these require calls, it will include them</code></div>\n<div class=\"line\"><code class=\"comments\">// in your Titanium project as &quot;Resources/alloy/animation.js&quot; and</code></div>\n<div class=\"line\"><code class=\"comments\">// &quot;Resources/alloy/string.js&quot; automatically.</code></div>\n<div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> animation = require(</code><code class=\"string\">&apos;alloy/animation&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">\tstring = require(</code><code class=\"string\">&apos;alloy/string&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> shake(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">    animation.shake($.mover, 0, </code><code class=\"keyword\">function</code><code class=\"plain\"> (){</code></div>\n<div class=\"line\"><code class=\"plain\">    \talert(</code><code class=\"string\">&quot;Shake ended.&quot;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">    });</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> flash(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">    animation.flash($.mover);</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"keyword\">function</code><code class=\"plain\"> trim(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t$.label.text = string.trim($.label.text);</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (OS_IOS) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t</code><code class=\"keyword\">function</code><code class=\"plain\"> flip(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t</code><code class=\"keyword\">var</code><code class=\"plain\"> front, back;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\te.bubbleParent = </code><code class=\"keyword\">false</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t</code><code class=\"keyword\">if</code><code class=\"plain\"> (e.source === $.back) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tfront = $.back;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tback = $.front;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t} </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tfront = $.front;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tback = $.back;</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t}</code></div>\n<div class=\"line\"><code class=\"plain\">\t\tanimation.flipHorizontal(front, back, 500, </code><code class=\"keyword\">function</code><code class=\"plain\">(e) {</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t\tTi.API.info(</code><code class=\"string\">&apos;flipped&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">\t\t});</code></div>\n<div class=\"line\"><code class=\"plain\">\t}</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">$.index.open();</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"comments\">// runtime unit tests</code></div>\n<div class=\"line\"><code class=\"keyword\">if</code><code class=\"plain\"> (!ENV_PROD) {</code></div>\n<div class=\"line\"><code class=\"plain\">\trequire(</code><code class=\"string\">&apos;specs/index&apos;</code><code class=\"plain\">)($);</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n    </div>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=46255935\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"Alloy Controllers Sample"});