Ext.data.JsonP['Build_Configuration_File_(alloy.jmk)']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Build Configuration File (alloy.jmk)</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n\t\t<div id=\"banner\" class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n\t\t\t<p>You can now find Appcelerator documentation at <a href=\"https://docs.axway.com/\" target=\"_blank\">https://docs.axway.com/</a>. This site will be taken down in the near future.</p></div>\n        <div class=\"header\"/>\n\n        <div id=\"src-35620079\" class=\"content\">\n                        <h1>Build Configuration File (alloy.jmk)</h1>\n    <p>Alloy provides hooks to customize the compilation process using a special JavaScript file called a JS Makefile (JMK). The file needs to be named <tt class=\" \">alloy.jmk</tt> and located in the project&apos;s <tt class=\" \">app</tt> directory. This file can be used for common administration tasks or to fine tune the build process. It will be loaded automatically by the Alloy command line during compilation.    </p>\n    <p>Example of a JMK file:    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">alloy.jmk</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"alloy.jmk\">\n<div class=\"line\"><code class=\"plain\">task(</code><code class=\"string\">&quot;pre:compile&quot;</code><code class=\"plain\">,function(event,logger){</code></div>\n<div class=\"line\"><code class=\"plain\">    logger.showTimestamp = </code><code class=\"keyword\">true</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">    logger.info(</code><code class=\"string\">&apos;building project at &apos;</code><code class=\"plain\">+ event.dir.project);</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">task(</code><code class=\"string\">&quot;post:compile&quot;</code><code class=\"plain\">,function(event,logger){</code></div>\n<div class=\"line\"><code class=\"plain\">    logger.info(</code><code class=\"string\">&apos;compile finished!&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n</div>\n    </div>\n    <p>To customize the build process, call the task function with the event name and provide a function callback, which will be called when the event is triggered by the compiler.    </p>\n    <p>These are the event names (or compiler tasks):    </p>\n<ul class=\" \"><li class=\" \">    <p><tt class=\" \">pre:load:</tt> called after the project is cleaned and before copying any assets to the <tt class=\" \">Resources</tt> folder.    </p>\n</li><li class=\" \">    <p><tt class=\" \">pre:compile</tt>: called before the compiler starts.    </p>\n</li><li class=\" \">    <p><tt class=\" \">post:compile</tt>: called after the compiler finishes but before it exits.    </p>\n</li><li class=\" \">    <p><tt class=\" \">compile:app.js</tt>: called just after the compilation of the main <tt class=\" \">app.js</tt> file but before the code is written to disk.    </p>\n</li></ul>    <p>The function callback provides two arguments: <tt class=\" \">event</tt> and <tt class=\" \">logger</tt>.    </p>\n    <p>The <tt class=\" \">event</tt> object provides a set of objects and values which may be useful for building tasks:    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>Object/Value    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>Description    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>adapters<br>(Array)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>List of adapters.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>alloyConfig<br>(Object)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>Contains Alloy compiler configuration information.    </p>\n<ul class=\" \"><li class=\" \">    <p><strong class=\" \">platform</strong> : either <tt class=\" \">android</tt>, <tt class=\" \">ios</tt>, <tt class=\" \">mobileweb</tt> or <tt class=\" \">windows</tt>.<strong class=\" \"><br/></strong>    </p>\n</li><li class=\" \">    <p><strong class=\" \">file</strong>: file to target for selective compilation.    </p>\n</li><li class=\" \">    <p><strong class=\" \">deploytype</strong> : compilation environment type: either development, test or production.    </p>\n</li><li class=\" \">    <p><strong class=\" \">beautify</strong> : if set to <tt class=\" \">true</tt>, the output from UglifyJS will be beautified.    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>autoStyle<br>(Boolean)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>If set to <tt class=\" \">true</tt>, autostyle is enabled for the entire project.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>dependencies<br>(Object)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>Value of the <tt class=\" \">dependencies</tt> key in the <tt class=\" \">config.json</tt> file.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>dir<br>(Object)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>Contains directory paths to various resources.    </p>\n<ul class=\" \"><li class=\" \">    <p><strong class=\" \">home</strong> : absolute path to the Alloy project&apos;s <tt class=\" \">app</tt> directory.    </p>\n</li><li class=\" \">    <p><strong class=\" \">project</strong> : absolute path to the Alloy project&apos;s root directory.    </p>\n</li><li class=\" \">    <p><strong class=\" \">resources</strong> : absolute path to the Alloy project&apos;s <tt class=\" \">Resource</tt> directory.    </p>\n</li><li class=\" \">    <p><strong class=\" \">resourcesAlloy</strong> : absolute path to the Alloy project&apos;s <tt class=\" \">Resource/alloy</tt> directory.    </p>\n</li><li class=\" \">    <p><strong class=\" \">assets</strong> : absolute path to the Alloy project&apos;s assets.    </p>\n</li><li class=\" \">    <p><strong class=\" \">config</strong> : absolute path to the Alloy project&apos;s config.    </p>\n</li><li class=\" \">    <p><strong class=\" \">controllers</strong> : absolute path to the Alloy project&apos;s controllers.    </p>\n</li><li class=\" \">    <p><strong class=\" \">migrations</strong> : absolute path to the Alloy project&apos;s migrations.    </p>\n</li><li class=\" \">    <p><strong class=\" \">models</strong> : absolute path to the Alloy project&apos;s models.    </p>\n</li><li class=\" \">    <p><strong class=\" \">styles</strong> : absolute path to the Alloy project&apos;s styles.    </p>\n</li><li class=\" \">    <p><strong class=\" \">themes</strong> : absolute path to the Alloy project&apos;s themes.    </p>\n</li><li class=\" \">    <p><strong class=\" \">views</strong> : absolute path to the Alloy project&apos;s views.    </p>\n</li><li class=\" \">    <p><strong class=\" \">widgets</strong> : absolute path to the Alloy project&apos;s widgets.    </p>\n</li><li class=\" \">    <p><strong class=\" \">builtins</strong> : absolute path to the Alloy tool builtins.    </p>\n</li><li class=\" \">    <p><strong class=\" \">template</strong> : absolute path to the Alloy tool templates.    </p>\n</li></ul>            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>sourcemap<br>(Boolean)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>If <tt class=\" \">true</tt>, generates the source mapping files for use with the Studio debugger and other functions.<br>These files maps the generated Titanium files in the <tt class=\" \">Resources</tt> directory to the ones in the <tt class=\" \">app</tt> directory.    </br></p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>theme<br>(String)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>Name of the theme being used.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>code<br>(String)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p><strong class=\" \">Only present for the <tt class=\" \">compile:app.js</tt> task.</strong> Contains the contents of the <tt class=\" \">app.js</tt> file.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>appJSFile<br>(String)    </br></p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p><strong class=\" \">Only present for the <tt class=\" \">compile:app.js</tt> task.</strong> Contains the the absolute path to the <tt class=\" \">app.js</tt> file.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>    </p>\n    <p>The <tt class=\" \">logger</tt> object provides a reference to the logger, which defines the following methods and properties:    </p>\n    <div class=\"section section-2 \" id=\"src-35620079_safe-id-QnVpbGRDb25maWd1cmF0aW9uRmlsZShhbGxveS5qbWspLVByb3BlcnRpZXM\">\n        <h2 class=\"heading \"><span>Properties</span></h2>\n    <p><strong class=\" \">DEBUG</strong>: Number READONLY<br>Output all log messages.    </br></p>\n    <p><strong class=\" \">INFO</strong>: Number READONLY<br>Output all log messages except debug messages.    </br></p>\n    <p><strong class=\" \">WARN</strong>: Number READONLY<br>Output only warning and error log messages.    </br></p>\n    <p><strong class=\" \">ERROR</strong>: Number READONLY<br>Output only error log messages.    </br></p>\n    <p><strong class=\" \">NONE</strong>: Number READONLY<br>Disable log messages.    </br></p>\n    <p><strong class=\" \">logLevel</strong>: Number<br>Sets which log messages to output.    </br></p>\n    <p><strong class=\" \">showTimestamp</strong>: Boolean<br>If true, outputs timestamp with the log messages.    </br></p>\n    <p><strong class=\" \">stripColors</strong>: Boolean<br>If true, suppresses color output.    </br></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-35620079_safe-id-QnVpbGRDb25maWd1cmF0aW9uRmlsZShhbGxveS5qbWspLU1ldGhvZHM\">\n        <h2 class=\"heading \"><span>Methods</span></h2>\n    <p><strong class=\" \">debug (String msg)</strong><br>Outputs a debug log message.    </br></p>\n    <p>Parameters:    </p>\n<ul class=\" \"><li class=\" \">    <p>msg : String<br>Message to output.    </br></p>\n</li></ul>    <p>Returns:    </p>\n<ul class=\" \"><li class=\" \">    <p>void    </p>\n</li></ul>    <p><strong class=\" \">info (String msg)</strong><br>Outputs an info log message.    </br></p>\n    <p>Parameters:    </p>\n<ul class=\" \"><li class=\" \">    <p>msg : String<br>Message to output.    </br></p>\n</li></ul>    <p>Returns:    </p>\n<ul class=\" \"><li class=\" \">    <p>void    </p>\n</li></ul>    <p><strong class=\" \">warn (String msg)</strong><br>Outputs a warning log message.    </br></p>\n    <p>Parameters:    </p>\n<ul class=\" \"><li class=\" \">    <p>msg : String<br>Message to output.    </br></p>\n</li></ul>    <p>Returns:    </p>\n<ul class=\" \"><li class=\" \">    <p>void    </p>\n</li></ul>    <p><strong class=\" \">error (String msg)</strong><br>Outputs an error log message.    </br></p>\n    <p>Parameters:    </p>\n<ul class=\" \"><li class=\" \">    <p>msg : String<br>Message to output.    </br></p>\n</li></ul>    <p>Returns:    </p>\n<ul class=\" \"><li class=\" \">    <p>void    </p>\n</li></ul>    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=35620079\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"Build Configuration File (alloy.jmk)"});