Ext.data.JsonP['Migrating_Node.ACS_Applications_to_API_Builder']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Migrating Node.ACS Applications to API Builder</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"src-43298928\" class=\"content\">\n                        <h1>Migrating Node.ACS Applications to API Builder</h1>\n    <p>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Introduction\">Introduction</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-CreateanAPIBuilderproject\">Create an API Builder project</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-package.json\">package.json</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Expressappinstance\">Express app instance</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-socketSocket.ioinstance\">Socket.io instance</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-app.js\">app.js</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-configconfig.json\">config.json</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Routes\">Routes</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Filters\">Filters</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Websockets\">Websockets</a>    </p>\n</li></ul></li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Controllersdirectory\">Controllers directory</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Filtersdirectory\">Filters directory</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Websocketsdirectory\">Websockets directory</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Publicdirectory\">Public directory</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Viewsdirectory\">Views directory</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-RuntheAPIBuilderproject\">Run the API Builder project</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-PublishtheAPIBuilderproject\">Publish the API Builder project</a>    </p>\n</li></ul>    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Introduction\">\n        <h2 class=\"heading \"><span>Introduction</span></h2>\n    <p>This guide describes how to convert your API Runtime Services application using the MVC framework to work in the API Builder framework.    </p>\n    <p>For details about API Builder, see <a class=\"document-link \" href=\"#!/guide/API_Builder_Tools\">API Builder Tools</a>.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-CreateanAPIBuilderproject\">\n        <h2 class=\"heading \"><span>Create an  API Builder  project</span></h2>\n    <p>Before starting, first create an API Builder project by executing the command below in your workspace directory:    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\">\n<div class=\"line\"><code class=\"plain\">appc </code><code class=\"keyword\">new</code><code class=\"plain\"> -t arrow -n ArrowProject</code></div>\n</div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-package.json\">\n        <h2 class=\"heading \"><span>package.json</span></h2>\n    <p>If you have any special settings or dependencies in your API Runtime Services project&apos;s <tt class=\" \">package.json</tt> file, add them to the same file in your new API Builder project. Do not overwrite any existing keys.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Expressappinstance\">\n        <h2 class=\"heading \"><span>Express app instance</span></h2>\n    <p>To access the Express instance in an API Builder project, use the <tt class=\" \">app</tt> property of the API Builder instance. For the API and Route components, an API Builder instance is passed to the <tt class=\" \">request</tt> and <tt class=\" \">response</tt> objects as the <tt class=\" \">server</tt> property.    </p>\n    <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n            <div class=\"title\">Express version</div>\n            <p>API Runtime Services used Express 3.x, while  API Builder uses Express 4.x. For details about migrating to Express 4, see <a class=\"external-link external-link\" href=\"http://expressjs.com/guide/migrating-4.html\" target=\"_blank\">http://expressjs.com/guide/migrating-4.html</a>.    </p>\n    </div>\n        <p><strong class=\" \">Example:</strong>    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">ArrowProject/app.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ArrowProject/app.js\">\n<div class=\"line\"><code class=\"plain\">var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    favicon = require(</code><code class=\"string\">&apos;serve-favicon&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    server = </code><code class=\"keyword\">new</code><code class=\"plain\"> Arrow();</code></div>\n<div class=\"line\"><code class=\"plain\">server.app.use(favicon(__dirname + </code><code class=\"string\">&apos;/web/public/images/favicon.ico&apos;</code><code class=\"plain\">));</code></div>\n</div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-socketSocket.ioinstance\">\n        <h2 class=\"heading \"><span id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-socket\" class=\"confluence-anchor-link\"/><span>Socket.io instance</span></h2>\n    <p>An API Builder application does not include socket.io by default.  To include socket.io in an  API Builder application:    </p>\n<ol class=\" \"><li class=\" \">    <p>In the <tt class=\" \">package.json</tt> file, add <tt class=\" \">socket.io</tt> as a dependency.    </p>\n</li><li class=\" \">    <p>In the <tt class=\" \">app.js</tt>, in the <tt class=\" \">started</tt> event listener, load the socket.io module and pass it the server instance (API Builder instance&apos;s <tt class=\" \">server</tt> property), then make API calls to the socket.io instance.  If you assign the socket.io instance to a property of the  API Builder instance, you can access the socket.io instance with that property whenever an API Builder instance is passed to a method.    </p>\n</li><li class=\" \">    <p>Any client-side code, such as the view templates, will need to <a class=\"external-link external-link\" href=\"http://socket.io/download/\" target=\"_blank\">include the <tt class=\" \">socket.io.js</tt> client script</a>. Note that when the client connects to the socket.io server (API Builder application), you will need to update the URL when switching between testing the project locally or when it&apos;s published to API Runtime Services.    </p>\n</li></ol>    <p><strong class=\" \">Example:</strong>    </p>\n    <p>The following example creates a basic chat application.    </p>\n    <p>Add socket.io as a dependency to the API Builder project.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">package.json</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"package.json\">\n<div class=\"line\"><code class=\"plain\">{</code></div>\n<div class=\"line\"><code class=\"plain\">  ...</code></div>\n<div class=\"line\"><code class=\"plain\">  dependencies: {</code></div>\n<div class=\"line\"><code class=\"plain\">    ...</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"string\">&apos;socket.io&apos;</code><code class=\"plain\">: </code><code class=\"string\">&apos;*&apos;</code></div>\n<div class=\"line\"><code class=\"plain\">  }</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n    </div>\n    <p>Loads the socket.io module and creates an instance.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">app.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"app.js\">\n<div class=\"line\"><code class=\"plain\">var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    server = </code><code class=\"keyword\">new</code><code class=\"plain\"> Arrow();</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">server.on(</code><code class=\"string\">&apos;started&apos;</code><code class=\"plain\">, function () {</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Creates a socket.io instance and attaches it to the Arrow instance</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">this</code><code class=\"plain\">.io = require(</code><code class=\"string\">&apos;socket.io&apos;</code><code class=\"plain\">)(</code><code class=\"keyword\">this</code><code class=\"plain\">.server, {logger: </code><code class=\"keyword\">this</code><code class=\"plain\">.logger});</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Adds a connection listener </code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">this</code><code class=\"plain\">.io.on(</code><code class=\"string\">&apos;connection&apos;</code><code class=\"plain\">, function(socket) {</code></div>\n<div class=\"line\"><code class=\"plain\">        console.log(</code><code class=\"string\">&apos;a user connected &apos;</code><code class=\"plain\"> + socket.id);</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"comments\">// Listens for a new message</code></div>\n<div class=\"line\"><code class=\"plain\">        socket.on(</code><code class=\"string\">&apos;message&apos;</code><code class=\"plain\">, function(data) {</code></div>\n<div class=\"line\"><code class=\"plain\">            </code><code class=\"comments\">// Alerts all clients there is a new message</code></div>\n<div class=\"line\"><code class=\"plain\">            </code><code class=\"keyword\">this</code><code class=\"plain\">.io.emit(</code><code class=\"string\">&apos;message&apos;</code><code class=\"plain\">, data);</code></div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\"><code class=\"plain\">    });</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"comments\">// start the server</code></div>\n<div class=\"line\"><code class=\"plain\">server.start();&#xA0;</code></div>\n</div>\n    </div>\n    <p>Then, add the socket.io client code to your views or other client-side code.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">web/views/chat.html</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"web/views/chat.html\">\n<div class=\"line\"><code class=\"plain\">&lt;html&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;head&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;style&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">      * { margin: </code><code class=\"value\">0</code><code class=\"plain\">; padding: </code><code class=\"value\">0</code><code class=\"plain\">; box-sizing: border-box; }</code></div>\n<div class=\"line\"><code class=\"plain\">      body { font: 13px Helvetica, Arial; }</code></div>\n<div class=\"line\"><code class=\"plain\">      .inputMessage { padding: 3px; position: fixed; bottom: </code><code class=\"value\">0</code><code class=\"plain\">; width: </code><code class=\"value\">100</code><code class=\"plain\">%; }</code></div>\n<div class=\"line\"><code class=\"plain\">      .messages { list-style-type: none; margin: </code><code class=\"value\">0</code><code class=\"plain\">; padding: </code><code class=\"value\">0</code><code class=\"plain\">; }</code></div>\n<div class=\"line\"><code class=\"plain\">      .messages li { padding: 5px 10px; }</code></div>\n<div class=\"line\"><code class=\"plain\">      .messages li:nth-child(odd) { background: #eee; }      </code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/style&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;script src=</code><code class=\"string\">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js&quot;</code><code class=\"plain\">&gt;&lt;/script&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;!-- Include the socket.io client code --&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;script src=</code><code class=\"string\">&quot;https://cdn.socket.io/socket.io-1.3.5.js&quot;</code><code class=\"plain\">&gt;&lt;/script&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;script&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">      $(document).ready(function() {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"comments\">// For a production application, you need to change the URL to the published URL</code></div>\n<div class=\"line\"><code class=\"plain\">        var socket = io.connect(</code><code class=\"string\">&apos;http://localhost:8080&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">        $(</code><code class=\"string\">&apos;.inputMessage&apos;</code><code class=\"plain\">).keydown(function(event) {</code></div>\n<div class=\"line\"><code class=\"plain\">          </code><code class=\"keyword\">if</code><code class=\"plain\"> (event.keyCode == </code><code class=\"value\">13</code><code class=\"plain\">) {</code></div>\n<div class=\"line\"><code class=\"plain\">            socket.emit(</code><code class=\"string\">&apos;message&apos;</code><code class=\"plain\">, socket.id + </code><code class=\"string\">&apos;:&apos;</code><code class=\"plain\"> + $(</code><code class=\"string\">&apos;.inputMessage&apos;</code><code class=\"plain\">).val());</code></div>\n<div class=\"line\"><code class=\"plain\">            $(</code><code class=\"string\">&apos;.inputMessage&apos;</code><code class=\"plain\">).val(</code><code class=\"string\">&apos;&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">            </code><code class=\"keyword\">return</code><code class=\"plain\"> </code><code class=\"keyword\">false</code><code class=\"plain\">;</code></div>\n<div class=\"line\"><code class=\"plain\">          }</code></div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\"><code class=\"plain\">        socket.on(</code><code class=\"string\">&apos;message&apos;</code><code class=\"plain\">, function(msg){</code></div>\n<div class=\"line\"><code class=\"plain\">          $(</code><code class=\"string\">&apos;.messages&apos;</code><code class=\"plain\">).append($(</code><code class=\"string\">&apos;&lt;li&gt;&apos;</code><code class=\"plain\">).text(msg));</code></div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">        socket.on(</code><code class=\"string\">&apos;connect&apos;</code><code class=\"plain\">, function(){</code></div>\n<div class=\"line\"><code class=\"plain\">          $(</code><code class=\"string\">&apos;.messages&apos;</code><code class=\"plain\">).append($(</code><code class=\"string\">&apos;&lt;li&gt;&apos;</code><code class=\"plain\">).text(</code><code class=\"string\">&apos;You are &apos;</code><code class=\"plain\"> + socket.id));</code></div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\"><code class=\"plain\">      });</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/script&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;/head&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;body&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;div </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;chatArea&quot;</code><code class=\"plain\">&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;ul </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;messages&quot;</code><code class=\"plain\">&gt;&lt;/ul&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;/div&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">    &lt;input </code><code class=\"keyword\">class</code><code class=\"plain\">=</code><code class=\"string\">&quot;inputMessage&quot;</code><code class=\"plain\"> placeholder=</code><code class=\"string\">&quot;Type here...&quot;</code><code class=\"plain\">/&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">  &lt;/body&gt;</code></div>\n<div class=\"line\"><code class=\"plain\">&lt;/html&gt; </code></div>\n</div>\n    </div>\n    <p>Note you need to implement an API Builder Route to render the HTML.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">web/route/chat.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"web/route/chat.js\">\n<div class=\"line\"><code class=\"plain\">var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">var ChatRoute = Arrow.Router.extend({</code></div>\n<div class=\"line\"><code class=\"plain\">    name: </code><code class=\"string\">&apos;chat&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    path: </code><code class=\"string\">&apos;/chat&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    method: </code><code class=\"string\">&apos;GET&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    description: </code><code class=\"string\">&apos;Access the chat client&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    action: function (req, res) {</code></div>\n<div class=\"line\"><code class=\"plain\">        res.render(</code><code class=\"string\">&apos;chat&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">module.exports = ChatRoute;&#xA0;</code></div>\n</div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-app.js\">\n        <h2 class=\"heading \"><span>app.js</span></h2>\n    <p>If you add any logic to the <tt class=\" \">start()</tt> or <tt class=\" \">stop()</tt> methods in the <tt class=\" \">app.js</tt> file, you can add the same logic in the API Builder instance&apos;s event listeners for the <tt class=\" \">starting</tt> and <tt class=\" \">stopping</tt> events, respectively.    </p>\n    <p><strong class=\" \">Example:</strong>    </p>\n    <p>The API Runtime Services project logs in and out of an Mobile Backend Services (MBS) account when the application starts and stops.  The same method calls can be added to the event listeners in an API Builder application.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">NodeACSProject/app.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"NodeACSProject/app.js\">\n<div class=\"line\"><code class=\"plain\">var ArrowDB = require(</code><code class=\"string\">&apos;arrowdb&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    arrowDBApp = </code><code class=\"keyword\">new</code><code class=\"plain\"> ArrowDB(</code><code class=\"string\">&apos;API_KEY&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">&#xA0;</code></div>\n<div class=\"line\"><code class=\"plain\">function start() {</code></div>\n<div class=\"line\"><code class=\"plain\">    var data = {</code></div>\n<div class=\"line\"><code class=\"plain\">        login: </code><code class=\"string\">&apos;user&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">        password: </code><code class=\"string\">&apos;user&apos;</code></div>\n<div class=\"line\"><code class=\"plain\">    };</code></div>\n<div class=\"line\"><code class=\"plain\">    arrowDBApp.usersLogin(data, function(err, result) {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"comments\">// Logic</code></div>\n<div class=\"line\"><code class=\"plain\">    });  </code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">&#xA0;</code></div>\n<div class=\"line\"><code class=\"plain\">function stop() {</code></div>\n<div class=\"line\"><code class=\"plain\">    arrowDBApp.usersLogout(function(err, result) {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"comments\">// Logic</code></div>\n<div class=\"line\"><code class=\"plain\">    }); </code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n    </div>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">ArrowProject/app.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ArrowProject/app.js\">\n<div class=\"line\"><code class=\"plain\">var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    server = </code><code class=\"keyword\">new</code><code class=\"plain\"> Arrow(),</code></div>\n<div class=\"line\"><code class=\"plain\">    ArrowDB = require(</code><code class=\"string\">&apos;arrowdb&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    arrowDBApp = </code><code class=\"keyword\">new</code><code class=\"plain\"> ArrowDB(</code><code class=\"string\">&apos;API_KEY&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">server.on(</code><code class=\"string\">&apos;starting&apos;</code><code class=\"plain\">, function () {</code></div>\n<div class=\"line\"><code class=\"plain\">    var data = {</code></div>\n<div class=\"line\"><code class=\"plain\">        login: </code><code class=\"string\">&apos;user&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">        password: </code><code class=\"string\">&apos;user&apos;</code></div>\n<div class=\"line\"><code class=\"plain\">    };</code></div>\n<div class=\"line\"><code class=\"plain\">    arrowDBApp.usersLogin(data, function(err, result) {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"comments\">// Logic</code></div>\n<div class=\"line\"><code class=\"plain\">    });  </code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">server.on(</code><code class=\"string\">&apos;stopping&apos;</code><code class=\"plain\">, function () {</code></div>\n<div class=\"line\"><code class=\"plain\">    arrowDBApp.usersLogout(function(err, result) {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"comments\">// Logic</code></div>\n<div class=\"line\"><code class=\"plain\">    }); </code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">server.start();</code></div>\n</div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-configconfig.json\">\n        <h2 class=\"heading \"><span>config.json</span></h2>\n    <div class=\"section section-3 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Routes\">\n        <h3 class=\"heading \"><span>Routes</span></h3>\n    <p>All routes declared in the <tt class=\" \">config.json</tt> file of your API Runtime Services application may be declared as a:    </p>\n<ul class=\" \"><li class=\" \">    <p>API Builder Route located in the <tt class=\" \">web/routes</tt> folder of the API Builder project if the route renders UI. For details, see the example below and <a class=\"document-link \" href=\"#!/guide/API_Builder_Web\">API Builder Web</a>.    </p>\n</li><li class=\" \">    <p>API Builder Model if the route is a simple data object stored in the cloud that you want to have standardized HTTP endpoints. For details, see <a class=\"document-link \" href=\"#!/guide/Models\">Models</a>.    </p>\n</li><li class=\" \">    <p>API Builder API if the route performs more complex operations and you want to have a custom HTTP endpoint. For details, see <a class=\"document-link \" href=\"#!/guide/APIs_-_Legacy\">APIs - Legacy</a>.    </p>\n</li></ul>    <p><strong class=\" \">Example:</strong>    </p>\n    <p>The <tt class=\" \">config.json</tt> file defines a route that when someone accesses <tt class=\" \">SERVER_ADDRESS/foobar</tt>, the API Runtime Services application executes the <tt class=\" \">bar()</tt> method in the <tt class=\" \">controllers/foo.js</tt> file.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">config.json</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"config.json\">\n<div class=\"line\"><code class=\"plain\">{</code></div>\n<div class=\"line\"><code class=\"plain\">  </code><code class=\"string\">&quot;routes&quot;</code><code class=\"plain\">:</code></div>\n<div class=\"line\"><code class=\"plain\">  [</code></div>\n<div class=\"line\"><code class=\"plain\">    {</code><code class=\"string\">&quot;path&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;/foobar&quot;</code><code class=\"plain\">, </code><code class=\"string\">&quot;method&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;get&quot;</code><code class=\"plain\">, </code><code class=\"string\">&quot;callback&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;foo#bar&quot;</code><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">  ]</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n    </div>\n    <p>To use the same route in API Builder, create a CommonJS module, which loads the <tt class=\" \">arrow</tt> module, then call the module&apos;s <tt class=\" \">Router.extend()</tt> method to declare the route.  Pass a dictionary to the <tt class=\" \">extend()</tt> method with the following keys defined (all keys are required):    </p>\n    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \">    <tr>\n            <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>Key    </p>\n            </td>\n                <td class=\"confluenceTh\" rowspan=\"1\" colspan=\"1\">\n        <p>Description    </p>\n            </td>\n        </tr>\n</thead><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>name    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>The name of your route.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>path    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>The endpoint/path for your route.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>method    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>HTTP verb (&apos;DELETE&apos;, &apos;GET&apos;, &apos;POST&apos; or &apos;PUT&apos;).    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>description    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>A description for your route. This is used for documentation purposes.    </p>\n            </td>\n        </tr>\n    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>action    </p>\n            </td>\n                <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>Function that allows you to interact with API Builder APIs and Models and send data to your template engine.    </p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p>Finally, expose the route using the <tt class=\" \">modules.exports</tt> variable.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">web/routes/foobar.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"web/routes/foobar.js\">\n<div class=\"line\"><code class=\"plain\">var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">var Foobar = Arrow.Router.extend({</code></div>\n<div class=\"line\"><code class=\"plain\">    name: </code><code class=\"string\">&apos;foobar&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    path: </code><code class=\"string\">&apos;/foobar&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    method: </code><code class=\"string\">&apos;GET&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    description: </code><code class=\"string\">&apos;Does foo&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    action: function (req, res) {</code></div>\n<div class=\"line\"><code class=\"plain\">        res.render(</code><code class=\"string\">&apos;example&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\"><code class=\"plain\">module.exports = Foobar;</code></div>\n</div>\n    </div>\n    </div>\n    <div class=\"section section-3 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Filters\">\n        <h3 class=\"heading \"><span>Filters</span></h3>\n    <p>All filters declared in the <tt class=\" \">config.json</tt> file of your API Runtime Services application may be declared as an <a class=\"document-link \" href=\"#!/guide/API_Builder_Blocks_-_Legacy\">API Builder Blocks</a> that can be assigned to the <tt class=\" \">before</tt> property in the definition file of an  API Builder Model or API.    </p>\n    </div>\n    <div class=\"section section-3 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Websockets\">\n        <h3 class=\"heading \"><span>Websockets</span></h3>\n    <p>For all websockets declared in the <tt class=\" \">config.json</tt> file of your API Runtime Services application, you will need to add an event listener to the socket once a connection is established, which requires socket.io to be added to the project. For details, see the <a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-socket\">socket.io instance</a> section above.    </p>\n    <p><strong class=\" \">Example:</strong>    </p>\n    <p>The <tt class=\" \">config.json</tt> file defines a websocket that whenever a <tt class=\" \">newChatMsg</tt> is received, the API Runtime Services application executes the <tt class=\" \">receiveMessage()</tt> method in the <tt class=\" \">websockets/chatroom.js</tt> file.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">NodeACSProject/config.json</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"NodeACSProject/config.json\">\n<div class=\"line\"><code class=\"plain\">{</code></div>\n<div class=\"line\"><code class=\"plain\">  </code><code class=\"string\">&quot;websockets&quot;</code><code class=\"plain\">:  [</code></div>\n<div class=\"line\"><code class=\"plain\">    {</code><code class=\"string\">&quot;event&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;newChatMsg&quot;</code><code class=\"plain\">, </code><code class=\"string\">&quot;callback&quot;</code><code class=\"plain\">: </code><code class=\"string\">&quot;chatroom#receiveMessage&quot;</code><code class=\"plain\">}</code></div>\n<div class=\"line\"><code class=\"plain\">  ]</code></div>\n<div class=\"line\"><code class=\"plain\">}</code></div>\n</div>\n    </div>\n    <p>To use the same websocket in API Builder, first add socket.io as described in the <a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-socket\"> socket.io instance </a>  section, then add a <tt class=\" \">newChatMsg</tt> event listener for the socket in the <tt class=\" \">connection</tt> event listener.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">ArrowProject/app.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"ArrowProject/app.js\">\n<div class=\"line\"><code class=\"plain\">&#xA0;var Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">),</code></div>\n<div class=\"line\"><code class=\"plain\">    server = </code><code class=\"keyword\">new</code><code class=\"plain\"> Arrow();</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">server.on(</code><code class=\"string\">&apos;started&apos;</code><code class=\"plain\">, function () {</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Creates a socket.io instance and attaches it to the Arrow instance</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">this</code><code class=\"plain\">.io = require(</code><code class=\"string\">&apos;socket.io&apos;</code><code class=\"plain\">)(</code><code class=\"keyword\">this</code><code class=\"plain\">.server, {logger: </code><code class=\"keyword\">this</code><code class=\"plain\">.logger});</code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"comments\">// Adds a connection listener </code></div>\n<div class=\"line\"><code class=\"plain\">    </code><code class=\"keyword\">this</code><code class=\"plain\">.io.on(</code><code class=\"string\">&apos;connection&apos;</code><code class=\"plain\">, function(socket) {</code></div>\n<div class=\"line\"><code class=\"plain\">        socket.on(</code><code class=\"string\">&apos;newChatMsg&apos;</code><code class=\"plain\">, function(data) {</code></div>\n<div class=\"line\"><code class=\"plain\">            </code><code class=\"comments\">// Add the receiveMessage() logic here from websockets/chatroom.js</code></div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\"><code class=\"plain\">    });</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"comments\">// start the server</code></div>\n<div class=\"line\"><code class=\"plain\">server.start(); </code></div>\n</div>\n    </div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Controllersdirectory\">\n        <h2 class=\"heading \"><span>Controllers directory</span></h2>\n    <p>All logic declared in the API Runtime Services controllers should be moved to the API Builder Route module in the <tt class=\" \">web/routes</tt> folder of the API Builder project or API Builder API module. For details, see the   <a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-config\">config.json</a>    section above.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Filtersdirectory\">\n        <h2 class=\"heading \"><span>Filters directory</span></h2>\n    <p>All logic declared in the API Runtime Services filters should be moved to the API Builder Block module.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Websocketsdirectory\">\n        <h2 class=\"heading \"><span>Websockets directory</span></h2>\n    <p>All logic declared in API Runtime Services websockets will need to be declared with the socket event listener, which requires socket.io to be added to the project. For details, see the   <a class=\"document-link \" href=\"#!/guide/Migrating_Node.ACS_Applications_to_API_Builder-section-src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-config\">config.json</a>  section above.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Publicdirectory\">\n        <h2 class=\"heading \"><span>Public directory</span></h2>\n    <p>Copy all files in the <tt class=\" \">public</tt> folder of your API Runtime Services application to the <tt class=\" \">web/public</tt> folder in the new API Builder project.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-Viewsdirectory\">\n        <h2 class=\"heading \"><span>Views directory</span></h2>\n    <p>Copy all files in the <tt class=\" \">views</tt> folder of your API Runtime Services application to the <tt class=\" \">web/views</tt> folder in the new API Builder project.    </p>\n    <div class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n            <p>API Builder also supports other template engines including Handlebars, Markdown and ReactJS.    </p>\n    </div>\n        </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-RuntheAPIBuilderproject\">\n        <h2 class=\"heading \"><span>Run the  API Builder  project</span></h2>\n    <p>After you have made your changes, to test the project, run or publish the API Builder project.    </p>\n    <p>To run the API Builder project locally, execute the following command from the project&apos;s directory:    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\">\n<div class=\"line\"><code class=\"plain\">appc run</code></div>\n</div>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-43298928_MigratingNode.ACSApplicationstoAPIBuilder-PublishtheAPIBuilderproject\">\n        <h2 class=\"heading \"><span>Publish the  API Builder  project</span></h2>\n    <p>To publish the API Builder project to the cloud, execute the following command from the project&apos;s directory:    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\">\n<div class=\"line\"><code class=\"plain\">appc publish</code></div>\n</div>\n    </div>\n    <p>This will produce a new URL, different from that of your existing API Runtime Services project. For migrating ACS data (legacy) to Mobile Backend Services, we will take care of migrating your ACS data to the platform in time and notify you when we do. Your ACS keys and endpoints will not change, so no changes are needed to (Titanium) client applications. During the migration, we expect 1-2 hours of downtime. After the migration, you can manage your ACS data via the platform dashboard.    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=43298928\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"Migrating Node.ACS Applications to API Builder"});