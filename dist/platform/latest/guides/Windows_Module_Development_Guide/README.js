Ext.data.JsonP['Windows_Module_Development_Guide']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Windows Module Development Guide</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"src-46248208\" class=\"content\">\n                        <h1>Windows Module Development Guide</h1>\n    <div class=\"section section-2 \" id=\"src-46248208_WindowsModuleDevelopmentGuide-Overview\">\n        <h2 class=\"heading \"><span>Overview</span></h2>\n    <p>Titanium provides the ability to extend the built-in functionality of the Titanium SDK through a series of optional extensions called modules. Modules let you write code in a platform&apos;s native language (C++/CX for Windows). Through a series of components, we can expose new functionality to the JavaScript running in the Titanium SDK.    </p>\n    <p>These guides assume you are familiar with native development using the Windows Runtime SDK and Visual Studio.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-46248208_WindowsModuleDevelopmentGuide-Chapters\">\n        <h2 class=\"heading \"><span>Chapters</span></h2>\n    <p><a class=\"document-link \" href=\"#!/guide/Windows_Module_Quick_Start\"><strong class=\" \">Windows Module Quick Start</strong></a>    </p>\n    <p>Provides basic information to quickly create, build, package and test modules.    </p>\n    <p><a class=\"document-link \" href=\"#!/guide/Windows_Background_Service_Quick_Start\"><strong class=\" \">Windows Background Service Quick Start</strong></a>    </p>\n    <p>Provides basic information to quickly create, build, package and test Windows background service modules.    </p>\n    <p><a class=\"document-link \" href=\"#!/guide/Windows_Module_Architecture\"><strong class=\" \">Windows Module Architecture</strong></a>    </p>\n    <p>Provides in-depth information about the class components used to build modules.  Titanium uses a specific notation for each module component.    </p>\n    <p><a class=\"document-link \" href=\"#!/guide/Windows_Module_Project\"><strong class=\" \">Windows Module Project</strong></a>    </p>\n    <p>Provides in-depth information about the structure of a module project as well as using Studio and the CLI to manage the projects.  Also provides information about adding assets and third-party frameworks to the module.    </p>\n    <p><strong class=\" \"><a class=\"document-link \" href=\"#!/guide/Integrating_Windows_Runtime_Components_in_C_\">Integrating Windows Runtime Components in C#</a></strong>    </p>\n    <p>This article shows how to integrate Windows Runtime Components that is built in C# with Titanium module.    </p>\n    <p><strong class=\" \">Windows Module API Reference</strong>    </p>\n    <p>Useful APIs for module development.  The module components extend the <tt class=\" \">TitaniumKit Module.</tt>    </p>\n    <p>    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=46248208\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"Windows Module Development Guide"});