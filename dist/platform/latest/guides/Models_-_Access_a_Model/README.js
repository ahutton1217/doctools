Ext.data.JsonP['Models_-_Access_a_Model']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Models - Access a Model</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\"/>\n\n        <div id=\"src-49153277\" class=\"content\">\n                        <h1>Models - Access a Model</h1>\n    <p>Any callback in the application that is passed the <tt class=\" \">request</tt> object can access the Models programmatically. If the <tt class=\" \">actions</tt> property in the model definition is set, some of the methods cannot be invoked. The <tt class=\" \">actions</tt> property restricts which CRUD operations can be invoked on the models.    </p>\n<ol class=\" \"><li class=\" \">    <p>Retrieve an instance to API Builder using the <tt class=\" \">request.server</tt> property.    </p>\n</li><li class=\" \">    <p>Retrieve the Model instance using API Builder&apos;s <tt class=\" \">getModel(&apos;name&apos;)</tt> method by passing it the name of the model.    </p>\n</li><li class=\" \">    <p>Invoke one of the following methods on the Model instance and pass it a callback function, which is passed an <tt class=\" \">error</tt> and <tt class=\" \">results</tt> object:    </p>\n<ol class=\" \"><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">create(object, callback)</tt>: Creates a model    </p>\n</li><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">query(options, callback)</tt>: Retrieves models specified by the query    </p>\n</li><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">findAll(callback)</tt>: Retrieves all models    </p>\n</li><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">findById(id, callback)</tt>: Retrieves the model specified by the id parameter    </p>\n</li><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">update(instance, callback)</tt>: Updates the passed model    </p>\n</li><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">deleteAll(callback)</tt>: Deletes all models    </p>\n</li><li class=\" \">    <p class=\"highlight javascript\"><tt class=\" \">delete(instance, callback)</tt>: Deletes the passed model    </p>\n</li></ol></li></ol>    <p><strong class=\" \">Example</strong>:    </p>\n    <p>The Route example below retrieves all car model.    </p>\n    <div class=\"confbox programlisting defaultnew syntaxhighlighter scroll-html-formatted-code\">\n                    <div class=\"title\">web/routes/testroute.js</div>\n                <div xmlns=\"http://www.w3.org/1999/xhtml\" class=\"defaultnew syntaxhighlighter scroll-html-formatted-code\" data-title=\"web/routes/testroute.js\">\n<div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> Arrow = require(</code><code class=\"string\">&apos;arrow&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"keyword\">var</code><code class=\"plain\"> TestRoute = Arrow.Router.extend({</code></div>\n<div class=\"line\"><code class=\"plain\">    name: </code><code class=\"string\">&apos;car&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    path: </code><code class=\"string\">&apos;/car&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    method: </code><code class=\"string\">&apos;GET&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    description: </code><code class=\"string\">&apos;get some cars&apos;</code><code class=\"plain\">,</code></div>\n<div class=\"line\"><code class=\"plain\">    action: </code><code class=\"keyword\">function</code><code class=\"plain\"> (req, res, next) {</code></div>\n<div class=\"line\"><code class=\"plain\">        </code><code class=\"keyword\">var</code><code class=\"plain\"> model = req.server.getModel(</code><code class=\"string\">&apos;car&apos;</code><code class=\"plain\">);</code></div>\n<div class=\"line\"><code class=\"plain\">        model.findAll(</code><code class=\"keyword\">function</code><code class=\"plain\">(err, results){</code></div>\n<div class=\"line\"><code class=\"plain\">            </code><code class=\"keyword\">if</code><code class=\"plain\"> (err) {</code></div>\n<div class=\"line\"><code class=\"plain\">                next(err);</code></div>\n<div class=\"line\"><code class=\"plain\">            } </code><code class=\"keyword\">else</code><code class=\"plain\"> {</code></div>\n<div class=\"line\"><code class=\"plain\">                req.log.info(</code><code class=\"string\">&apos;got cars &apos;</code><code class=\"plain\"> + JSON.stringify(results));</code></div>\n<div class=\"line\"><code class=\"plain\">                res.render(</code><code class=\"string\">&apos;car&apos;</code><code class=\"plain\">, {cars:results});</code></div>\n<div class=\"line\"><code class=\"plain\">            }</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">        });</code></div>\n<div class=\"line\"><code class=\"plain\">    }</code></div>\n<div class=\"line\"><code class=\"plain\">});</code></div>\n<div class=\"line\">&#xA0;</div>\n<div class=\"line\"><code class=\"plain\">module.exports = TestRoute;</code></div>\n</div>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=49153277\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"Models - Access a Model"});