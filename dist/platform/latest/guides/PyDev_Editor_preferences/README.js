Ext.data.JsonP['PyDev_Editor_preferences']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>PyDev Editor preferences</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n\t\t<div id=\"banner\" class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n\t\t\t<p>You can now find Appcelerator documentation at <a href=\"https://docs.axway.com/\" target=\"_blank\">https://docs.axway.com/</a>. This site will be taken down in the near future.</p>\n\t\t</div>\n        <div class=\"header\"/>\n\n        <div id=\"src-30083057\" class=\"content\">\n                        <h1>PyDev Editor preferences</h1>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-PyDevEditorPreferences\">\n        <h2 class=\"heading \"><span>PyDev Editor Preferences</span></h2>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Preferences\">\n        <h2 class=\"heading \"><span>Preferences</span></h2>\n    <p>The options in the preferences should be self-explanatory, so, they&apos;re only briefly detailed here, but if you don&apos;t understand one, please ask in the users forum (so that the spelling of the option is improved).    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Editor\">\n        <h2 class=\"heading \"><span>Editor</span></h2>\n    <p>In <strong class=\" \">window &gt; preferences &gt; PyDev &gt; editor</strong>, PyDev can edit the tab settings and appearance colors used in PyDev<br>(such as the code color, decorators, numbers, strings, comments, etc).    </br></p>\n    <p>It&apos;s important to have in mind that many preferences, such as print margin, show line number, background/foreground colors, etc. are inherited from the text-editor preferences at <strong class=\" \">general &gt; editors &gt; text editors</strong>, and some other preferences are at <strong class=\" \">general &gt; appearance &gt; colors and fonts</strong> &#x2013; there&apos;s a link for both at the end of the preferences page.    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/editor_preferences.png\" alt=\"images/pydev.org/images/editor/editor_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-CodeCompletion\">\n        <h2 class=\"heading \"><span>Code Completion</span></h2>\n    <p>In code completion preferences, configure how you want the code-completion to work.    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/code_completion_preferences.png\" alt=\"images/pydev.org/images/editor/code_completion_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-CodeFolding\">\n        <h2 class=\"heading \"><span>Code Folding</span></h2>\n    <p>Code-folding: new editors will have it applied.    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/code_folding_preferences.png\" alt=\"images/pydev.org/images/editor/code_folding_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-CodeStyle\">\n        <h2 class=\"heading \"><span>Code Style</span></h2>\n    <p>Code-style: Choose how you want the <strong class=\" \">assign to variable quick assist assign</strong> to work (Ctrl+1): with camel case variables or variables separated with underline (an example is shown when you change it).    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/code_style_preferences.png\" alt=\"images/pydev.org/images/editor/code_style_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-BlockComments\">\n        <h2 class=\"heading \"><span>Block Comments</span></h2>\n    <p>Block comments are comments formatted in a special way. An example of applying the block comment is shown (2 types of block comments are available: a multi-line and a single line comment).    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/block_comments_preferences.png\" alt=\"images/pydev.org/images/editor/block_comments_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-CodeFormatter\">\n        <h2 class=\"heading \"><span>Code Formatter</span></h2>\n    <p>In the code-formatter preferences page, you can choose different ways of having your code formatted.    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/code_formatter_preferences.png\" alt=\"images/pydev.org/images/editor/code_formatter_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Docstrings\">\n        <h2 class=\"heading \"><span>Docstrings</span></h2>\n    <p>With Ctrl+1 when over a function line, you can create the docstring automatically (and these preferences are used to determine what&apos;s the result of doing so)    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/docstring_preferences.png\" alt=\"images/pydev.org/images/editor/docstring_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-FileTypes\">\n        <h2 class=\"heading \"><span>File Types</span></h2>\n    <p>The file types indicate which file extensions are recognized for the type inference engine (it&apos;s not an association to the file editor)    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/file_type_preferences.png\" alt=\"images/pydev.org/images/editor/file_type_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Imports\">\n        <h2 class=\"heading \"><span>Imports</span></h2>\n    <p>Ctrl+Shift+O can organize the available imports (when no selection is done &#x2013; if done over a selection it&apos;ll do a regular text sort over the selected text), and those preferences indicate how the available imports should be organized.    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/import_preferences.png\" alt=\"images/pydev.org/images/editor/import_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Hover\">\n        <h2 class=\"heading \"><span>Hover</span></h2>\n    <p>What to show on the mouse hover?    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/hover_preferences.png\" alt=\"images/pydev.org/images/editor/hover_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Templates\">\n        <h2 class=\"heading \"><span>Templates</span></h2>\n    <p>Here you can enter new templates. There are 2 contexts, the &quot;Editor&quot; and the &quot;New Module&quot;. The templates in the &quot;Editor&quot; context are available for code-completion and the ones with &quot;New Module&quot; are available for the creation<br>of new modules.    </br></p>\n    <p>    <img src=\"images/pydev.org/images/editor/template_preferences.png\" alt=\"images/pydev.org/images/editor/template_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083057_PyDevEditorpreferences-Typing\">\n        <h2 class=\"heading \"><span>Typing</span></h2>\n    <p>The typing preferences indicate what should be automatically entered when you&apos;re typing text (e.g.: automatic parenthesis, smart indent, etc).    </p>\n    <p>    <img src=\"images/pydev.org/images/editor/typing_preferences.png\" alt=\"images/pydev.org/images/editor/typing_preferences.png\" class=\"confluence-embedded-image confluence-external-resource confluence-content-image-border\">\n        </img></p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083057\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"PyDev Editor preferences"});