Ext.data.JsonP['PHP_Script_Debugging']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>PHP Script Debugging</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n\t\t<div id=\"banner\" class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n\t\t\t<p>You can now find Appcelerator documentation at <a href=\"https://docs.axway.com/\" target=\"_blank\">https://docs.axway.com/</a>. This site will be taken down in the near future.</p></div>\n        <div class=\"header\"/>\n\n        <div id=\"src-30083032\" class=\"content\">\n                        <h1>PHP Script Debugging</h1>\n    <div class=\"section section-2 \" id=\"src-30083032_PHPScriptDebugging-Contents\">\n        <h2 class=\"heading \"><span>Contents</span></h2>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/PHP_Script_Debugging-section-src-30083032_PHPScriptDebugging-Introduction\">Introduction</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/PHP_Script_Debugging-section-src-30083032_PHPScriptDebugging-AttachingaPHPInterpreter\">Attaching a PHP Interpreter</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/PHP_Script_Debugging-section-src-30083032_PHPScriptDebugging-AttachingaPHPINI\">Attaching a PHP INI</a>    </p>\n</li></ul></li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/PHP_Script_Debugging-section-src-30083032_PHPScriptDebugging-TheScriptDebugger\">The Script Debugger</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/PHP_Script_Debugging-section-src-30083032_safe-id-UEhQU2NyaXB0RGVidWdnaW5nLVNjcmlwdERlYnVnL1J1blNlc3Npb25z\">Script Debug/Run Sessions</a>    </p>\n</li></ul>    </div>\n    <div class=\"section section-2 \" id=\"src-30083032_PHPScriptDebugging-Introduction\">\n        <h2 class=\"heading \"><span>Introduction</span></h2>\n    <p>The Studio supports two types of PHP debugging:    </p>\n<ol class=\" \"><li class=\" \">    <p>Internal debugging (e.g. Script debug without a server-side involvement).    </p>\n</li><li class=\" \">    <p>Web Page debugging that uses a debugger extension (either Zend or XDebug) installed on a server.    </p>\n</li></ol>    <p>This page will guide you through the setup process and the debugging process when a single script is debugged.<br>The single-script mode is a quick way to debug through the functionality of a single PHP file. In case you are debugging a PHP application, you will find that a &apos;<i class=\" \">Web Page</i>&apos; debugging is the way to go.    </br></p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083032_PHPScriptDebugging-AttachingaPHPInterpreter\">\n        <h2 class=\"heading \"><span>Attaching a PHP Interpreter</span></h2>\n    <p>A PHP Script debug session uses a local PHP interpreter and a debugger extension defined in its php.ini.<br>In order to attach an interpreter:    </br></p>\n<ol class=\" \"><li class=\" \">    <p>Open the Studio&apos;s <i class=\" \">Preferences</i> page and locate <i class=\" \">Aptana Studio -&gt; Editors -&gt; PHP -&gt; Debug -&gt; PHP Interpreters</i>.    </p>\n</li><li class=\" \">    <p>Click to add a new interpreter and browse for the PHP executable location on your disk.    </p>\n</li><li class=\" \">    <p>The php.ini location is optional in that dialog, and when not specified, the system will look for one under the executable path.    </p>\n</li></ol>    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \"/><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>    <img src=\"images/download/attachments/30083032/add-interpreter.png\" alt=\"images/download/attachments/30083032/add-interpreter.png\" class=\"confluence-embedded-image\">\n        </img></p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <div class=\"section section-3 \" id=\"src-30083032_PHPScriptDebugging-AttachingaPHPINI\">\n        <h3 class=\"heading \"><span>Attaching a PHP INI</span></h3>\n    <p>When you attach a php.ini location to the interpreter settings, you will be able to perform some extension related actions:    </p>\n<ul class=\" \"><li class=\" \">    <p>Add/remove an entry    </p>\n</li><li class=\" \">    <p>Add/remove a section    </p>\n</li><li class=\" \">    <p>Comment an entry    </p>\n</li><li class=\" \">    <p>Validate the settings    </p>\n</li></ul>    <div class=\"tablewrap\">\n        <table class=\"confluenceTable\">\n        <thead class=\" \"/><tfoot class=\" \"/><tbody class=\" \">    <tr>\n            <td class=\"confluenceTd\" rowspan=\"1\" colspan=\"1\">\n        <p>    <img src=\"images/download/attachments/30083032/PhpIniEditor.jpg\" alt=\"images/download/attachments/30083032/PhpIniEditor.jpg\" class=\"confluence-embedded-image\">\n        </img></p>\n            </td>\n        </tr>\n</tbody>        </table>\n            </div>\n    <p><i class=\" \">A little bit on the validation process:</i>    </p>\n    <p>When you hit the <i class=\" \">Validate</i> button, the PHP interpreter will try to execute with the current php.ini settings and collect the errors/warnings.    </p>\n    <p>This validation can be used to determine which of the extensions triggered warnings, or even, triggered fatal errors and could not be loaded. At the end of the validation, question marks next to the extensions will be replaced with appropriate icons (Error, Warning or OK).    </p>\n    <p>Hovering over the extension line displays the error/warning message that the PHP process outputted when it was validating.<br>In general, any fatal extension should be commented out to allow the PHP process function currently.    </br></p>\n    <p><strong class=\" \">Note:</strong> This process is no a &quot;100% bullet-proof&quot;, and in some cases where the PHP process fails to load a deeper investigation might be needed to determine the cause.    </p>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083032_PHPScriptDebugging-TheScriptDebugger\">\n        <h2 class=\"heading \"><span>The Script Debugger</span></h2>\n    <p>The Studio debugger works with XDebug and ZendDebugger extensions. Both can be attached via the INI editor we described above.<br>Once you have a PHP interpreter set up correctly, you can attach a debugger extension to the php.ini.    </br></p>\n<ol class=\" \"><li class=\" \">    <p>Open the Studio preferences at <i class=\" \">Aptana Studio -&gt; Editors -&gt; PHP -&gt; Debug -&gt; PHP Interpreters</i>.    </p>\n</li><li class=\" \">    <p>Click to edit your previously defined PHP interpreter.    </p>\n</li><li class=\" \">    <p>Set the type of <i class=\" \">PHP Debugger</i> in the dialog dropdown. You can choose between XDebug and ZendDebugger.    </p>\n</li><li class=\" \">    <p>Edit the ini section to add your debugger extension by setting the extension name as <i class=\" \">zend_extension_ts</i> and the value as your debugger .dll or .so extension (Note that <i class=\" \">zend_extension</i> should be used for non-thread-safe extensions).    </p>\n</li><li class=\" \">    <p>Click to validate your PHP ini to see if the extension was loaded correctly.    </p>\n</li></ol>    <p>Once it&apos;s all set-up, you are ready for a script <i class=\" \">Debug</i> (or <i class=\" \">Run</i>) session.    </p>\n    </div>\n    <div class=\"section section-2 \" id=\"src-30083032_safe-id-UEhQU2NyaXB0RGVidWdnaW5nLVNjcmlwdERlYnVnL1J1blNlc3Npb25z\">\n        <h2 class=\"heading \"><span>Script Debug/Run Sessions</span></h2>\n    <p>A session can be initiated in a several different ways.    </p>\n    <p>Option 1:    </p>\n<ol class=\" \"><li class=\" \">    <p>Right click the editor area and select &apos;Debug As&apos;-&gt;&apos;PHP Script&apos;.    </p>\n</li><li class=\" \">    <p>You will be prompted to move to the debug perspective - Click yes.    </p>\n</li><li class=\" \">    <p>In that perspective you will see the debug stack, variables and breakpoints views. You can also add more views, like the <i class=\" \">Expressions</i> view to track any Watch expressions you add.    </p>\n</li><li class=\" \">    <p>From here you can do a step into, step over and step return by clicking the buttons on the stack view or by using F5/F6/F7 keys.    </p>\n</li><li class=\" \">    <p>You can set more breakpoints as you debug, or even run to a line that you mark (right-click + &apos;Run to line&apos; action, or Ctrl+R).    </p>\n</li></ol>    <p>Option 2:<br>Click <i class=\" \">Run</i> in the application menu bar, and then click <i class=\" \">Debug Configurations...</i>. Create a new <i class=\" \">PHP Script</i> debug configuration. Make sure that the selected debugger-type match the type that was set for the selected PHP executable, then launch the session.    </br></p>\n    <p>The same applies to a <i class=\" \">Run</i> session, that only runs the script and output to the console.    </p>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=30083032\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"PHP Script Debugging"});