Ext.data.JsonP['Node.js_Support']({"guide":"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Node.js Support</title>\n\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta content=\"Scroll EclipseHelp Exporter\" name=\"generator\">\n\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\">\n    <link type=\"text/css\" rel=\"stylesheet\" media=\"print\">\n</link></link></link></meta></meta></head>\n<body>\n    <div class=\"container\">\n\t\t<div id=\"banner\" class=\"confbox admonition admonition-note aui-message warning shadowed information-macro\">\n\t\t\t<p>You can now find Appcelerator documentation at <a href=\"https://docs.axway.com/\" target=\"_blank\">https://docs.axway.com/</a>. This site will be taken down in the near future.</p></div>\n        <div class=\"header\"/>\n\n        <div id=\"src-48431321\" class=\"content\">\n                        <h1>Node.js Support</h1>\n    <p>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Minordifferences\">Minor differences</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Algorithmsummary\">Algorithm summary</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZ\">Require(X) from module at path Y</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgp\">LOAD_AS_FILE(X)</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCk\">LOAD_AS_DIRECTORY(X)</a>    </p>\n</li></ul></li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Minordifferences.1\">Minor differences</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_Node.jsSupport-Algorithmsummary.1\">Algorithm summary</a>    </p>\n<ul class=\"toc-indentation \"><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZLjE\">Require(X) from module at path Y</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgpLjE\">LOAD_AS_FILE(X)</a>    </p>\n</li><li class=\" \">    <p><a class=\"document-link \" href=\"#!/guide/Node.js_Support-section-src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCkuMQ\">LOAD_AS_DIRECTORY(X)</a>    </p>\n</li></ul></li></ul>    <p>With the release of SDK 6.0.0, we implemented full NodeJS support so users can use NPM modules for Android and iOS platforms (<a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-16078\" target=\"_blank\">TIMOB-16078</a>).    </p>\n    <div class=\"section section-2 \" id=\"src-48431321_Node.jsSupport-Minordifferences\">\n        <h2 class=\"heading \"><span>Minor differences</span></h2>\n    <p>This implementation includes the NodeJS require algorithm with some minor differences:    </p>\n<ul class=\" \"><li class=\" \">    <p>SDK doesn&apos;t attempt to load *.node files    </p>\n</li><li class=\" \">    <p>SDK doesn&apos;t have replacements for Node&apos;s core modules    </p>\n</li><li class=\" \">    <p>If the require string doesn&apos;t have the prefix of <tt class=\" \">./</tt>, <tt class=\" \">/</tt>, or <tt class=\" \">../</tt>, and its not a native module, the SDK will fall back to legacy Titanium behavior of assuming the require is meant as &quot;absolute&quot; inside the app (as in starting at &quot;<tt class=\" \">Resources/</tt>&quot;)    </p>\n</li><li class=\" \">    <p>The SDK will load JSON files and directories (package.json&apos;s main property (look at it, resolve it, and try to load it), index.js, and index.json)    </p>\n</li></ul>    </div>\n    <div class=\"section section-2 \" id=\"src-48431321_Node.jsSupport-Algorithmsummary\">\n        <h2 class=\"heading \"><span>Algorithm summary</span></h2>\n    <p>To summarize the algorithm the SDK uses, here are three summaries for requiring a module, loading as file, and loading as directory:    </p>\n    <div class=\"section section-3 \" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZ\">\n        <h3 class=\"heading \"><span>Require(X) from module at path Y</span></h3>\n<ol class=\" \"><li class=\" \">    <p>If X is a core module,    </p>\n<ol class=\" \"><li class=\" \">    <p>return the core module    </p>\n</li><li class=\" \">    <p>STOP    </p>\n</li></ol></li><li class=\" \">    <p>If X begins with ./, or ../,    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(Y + X)    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(Y + X)    </p>\n</li></ol></li><li class=\" \">    <p>If X begins with /,    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li><li class=\" \">    <p>If X <u class=\" \">does not</u> contain &apos;/&apos;, assume it should try and load CommonJS module first....    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(X/X.js): try to load &quot;legacy&quot; CommonJS file named <tt class=\" \">module.id/module.id.js</tt>.    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(X): try to load CommonJS module as a directory    </p>\n</li></ol></li><li class=\" \">    <p>WARN user about possible bad require being treated as absolute THROW &quot;not found&quot;    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li></ol>    </div>\n    <div class=\"section section-3 \" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgp\">\n        <h3 class=\"heading \"><span>LOAD_AS_FILE(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>If X is a file, load X as JavaScript text or JavaScript Object (JSON). STOP    </p>\n</li><li class=\" \">    <p>If X.js is a file, load X.js as JavaScript text. STOP    </p>\n</li><li class=\" \">    <p>If X.json is a file, parse X.json to a JavaScript Object. STOP    </p>\n</li></ol>    </div>\n    <div class=\"section section-3 \" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCk\">\n        <h3 class=\"heading \"><span>LOAD_AS_DIRECTORY(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>If X/package.json is a file, If X/index.js is a file, load X/index.js as JavaScript text. STOP    </p>\n<ol class=\" \"><li class=\" \">    <p>Parse X/package.json and look for &quot;main&quot; field.    </p>\n</li><li class=\" \">    <p>let M = X + (json main field)    </p>\n</li><li class=\" \">    <p>LOAD_AS_FILE(M)    </p>\n</li></ol></li><li class=\" \">    <p>If X/index.json is a file, parse X/index.json to a JavaScript object. STOP    </p>\n</li></ol>    <p>    </p>\n    <p>With the release of SDK 6.0.0, we implemented full NodeJS support so users can use NPM modules for Android and iOS platforms (<a class=\"external-link external-link\" href=\"https://jira.appcelerator.org/browse/TIMOB-16078\" target=\"_blank\">TIMOB-16078</a>).    </p>\n    </div>\n    </div>\n    <div class=\"section section-2 \" id=\"src-48431321_Node.jsSupport-Minordifferences.1\">\n        <h2 class=\"heading \"><span>Minor differences</span></h2>\n    <p>This implementation includes the NodeJS require algorithm with some minor differences:    </p>\n<ul class=\" \"><li class=\" \">    <p>SDK doesn&apos;t attempt to load *.node files    </p>\n</li><li class=\" \">    <p>SDK doesn&apos;t have replacements for Node&apos;s core modules    </p>\n</li><li class=\" \">    <p>If the require string doesn&apos;t have the prefix of <tt class=\" \">./</tt>, <tt class=\" \">/</tt>, or <tt class=\" \">../</tt>, and its not a native module, the SDK will fall back to legacy Titanium behavior of assuming the require is meant as &quot;absolute&quot; inside the app (as in starting at &quot;<tt class=\" \">Resources/</tt>&quot;)    </p>\n</li><li class=\" \">    <p>The SDK will load JSON files and directories (package.json&apos;s main property (look at it, resolve it, and try to load it), index.js, and index.json)    </p>\n</li></ul>    </div>\n    <div class=\"section section-2 \" id=\"src-48431321_Node.jsSupport-Algorithmsummary.1\">\n        <h2 class=\"heading \"><span>Algorithm summary</span></h2>\n    <p>To summarize the algorithm the SDK uses, here are three summaries for requiring a module, loading as file, and loading as directory:    </p>\n    <div class=\"section section-3 \" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtUmVxdWlyZShYKWZyb21tb2R1bGVhdHBhdGhZLjE\">\n        <h3 class=\"heading \"><span>Require(X) from module at path Y</span></h3>\n<ol class=\" \"><li class=\" \">    <p>If X is a core module,    </p>\n<ol class=\" \"><li class=\" \">    <p>return the core module    </p>\n</li><li class=\" \">    <p>STOP    </p>\n</li></ol></li><li class=\" \">    <p>If X begins with ./, or ../,    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(Y + X)    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(Y + X)    </p>\n</li></ol></li><li class=\" \">    <p>If X begins with /,    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li><li class=\" \">    <p>If X <u class=\" \">does not</u> contain &apos;/&apos;, assume it should try and load CommonJS module first....    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(X/X.js): try to load &quot;legacy&quot; CommonJS file named <tt class=\" \">module.id/module.id.js</tt>.    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(X): try to load CommonJS module as a directory    </p>\n</li></ol></li><li class=\" \">    <p>WARN user about possible bad require being treated as absolute THROW &quot;not found&quot;    </p>\n<ol class=\" \"><li class=\" \">    <p>LOAD_AS_FILE(X)    </p>\n</li><li class=\" \">    <p>LOAD_AS_DIRECTORY(X)    </p>\n</li></ol></li></ol>    </div>\n    <div class=\"section section-3 \" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19GSUxFKFgpLjE\">\n        <h3 class=\"heading \"><span>LOAD_AS_FILE(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>If X is a file, load X as JavaScript text or JavaScript Object (JSON). STOP    </p>\n</li><li class=\" \">    <p>If X.js is a file, load X.js as JavaScript text. STOP    </p>\n</li><li class=\" \">    <p>If X.json is a file, parse X.json to a JavaScript Object. STOP    </p>\n</li></ol>    </div>\n    <div class=\"section section-3 \" id=\"src-48431321_safe-id-Tm9kZS5qc1N1cHBvcnQtTE9BRF9BU19ESVJFQ1RPUlkoWCkuMQ\">\n        <h3 class=\"heading \"><span>LOAD_AS_DIRECTORY(X)</span></h3>\n<ol class=\" \"><li class=\" \">    <p>If X/package.json is a file, If X/index.js is a file, load X/index.js as JavaScript text. STOP    </p>\n<ol class=\" \"><li class=\" \">    <p>Parse X/package.json and look for &quot;main&quot; field.    </p>\n</li><li class=\" \">    <p>let M = X + (json main field)    </p>\n</li><li class=\" \">    <p>LOAD_AS_FILE(M)    </p>\n</li></ol></li><li class=\" \">    <p>If X/index.json is a file, parse X/index.json to a JavaScript object. STOP    </p>\n</li></ol>    </div>\n    </div>\n        </div><a id=\"editButton\" href=\"https://wiki.appcelerator.org/pages/editpage.action?pageId=48431321\"><span>Edit</span></a>\n    \n        \n    </div>\n</body>\n</html>\n","title":"Node.js Support"});