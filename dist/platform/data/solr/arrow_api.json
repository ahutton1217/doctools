[
    {
        "name": "Arrow.Collection",
        "id": "Arrow.Collection-platform",
        "url": "Arrow.Collection",
        "type": "platform",
        "content": "Arrow.Collection An Arrow Collection is an array of Arrow Model instances with some logic to manipulate the models. To create a Collection, load the arrow module, then use the Collection constructor to create an instance of a Collection. You can optionally pass in an array of Model instances to initialize the collection. var Arrow = require('arrow'), Collection = Arrow.Collection, myModels = new Collection(ModelClass, [Model instances...]); ... var lastModel = myModels.slice(-1); "
    },
    {
        "id": "Arrow.Collection-property-model-platform",
        "url": "Arrow.Collection-property-model",
        "type": "platform",
        "name": "Arrow.Collection.model",
        "content": "Arrow.Collection.model model Model class associated with the collection. Arrow.Model"
    },
    {
        "id": "Arrow.Collection-method-constructor-platform",
        "url": "Arrow.Collection-method-constructor",
        "type": "platform",
        "name": "Arrow.Collection.constructor",
        "content": "Arrow.Collection.constructor constructor Creates a model collection. You may pass no parameters, the model class and array of model instances or just an array of model instances. model Arrow.Model Model class to associate with the collection. instances Array Array of model instances. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-add-platform",
        "url": "Arrow.Collection-method-add",
        "type": "platform",
        "name": "Arrow.Collection.add",
        "content": "Arrow.Collection.add add Adds an instance to the collection. instances Array/Arrow.Instance The model instance(s) to add. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-concat-platform",
        "url": "Arrow.Collection-method-concat",
        "type": "platform",
        "name": "Arrow.Collection.concat",
        "content": "Arrow.Collection.concat concat Returns a collection that is joined with all the passed collections. Collections ...Arrow.Collection Collection(s) to join. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-filter-platform",
        "url": "Arrow.Collection-method-filter",
        "type": "platform",
        "name": "Arrow.Collection.filter",
        "content": "Arrow.Collection.filter filter Creates a new collection with elements that pass the test from the provided function. callback Function Function to test each element of the collection. The function is passed a collection element, element index and collection. Return true to keep the element else false. thisArg Object Value to use as this when executing the callback. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-get-platform",
        "url": "Arrow.Collection-method-get",
        "type": "platform",
        "name": "Arrow.Collection.get",
        "content": "Arrow.Collection.get get Returns the instance at the specified index. If the index is out-of-bounds, it returns undefined. idx Number The index in the collection to retrieve. return Arrow.Instance "
    },
    {
        "id": "Arrow.Collection-method-map-platform",
        "url": "Arrow.Collection-method-map",
        "type": "platform",
        "name": "Arrow.Collection.map",
        "content": "Arrow.Collection.map map Creates a new collection with the results of the provided callback. callback Function Function to manipulate each element of the collection. The function is passed a collection element, element index and collection. Return the new value or element. thisArg Object Value to use as this when executing the callback. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-push-platform",
        "url": "Arrow.Collection-method-push",
        "type": "platform",
        "name": "Arrow.Collection.push",
        "content": "Arrow.Collection.push push Adds an instance to the collection. instances Array/Arrow.Instance The model instance(s) to add. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-reverse-platform",
        "url": "Arrow.Collection-method-reverse",
        "type": "platform",
        "name": "Arrow.Collection.reverse",
        "content": "Arrow.Collection.reverse reverse Reverses the items in the collection. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-slice-platform",
        "url": "Arrow.Collection-method-slice",
        "type": "platform",
        "name": "Arrow.Collection.slice",
        "content": "Arrow.Collection.slice slice Returns a shallow copy of a portion of a collection into a new collection object. start Number Start index. If omitted, set to 0. If set to a negative value, offsets from the end of the collection. end Number End index. If omitted, extracts to the end of the collection. If set to a negative value, offsets from the end of the collection. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-sort-platform",
        "url": "Arrow.Collection-method-sort",
        "type": "platform",
        "name": "Arrow.Collection.sort",
        "content": "Arrow.Collection.sort sort Returns a sorted collection. callback Function Comparator function to define the sort order where the function is passed two elements a and b, then returns: a negative value if a should be before b a zero value to leave the elements unchanged a positive value if b should be before a If undefined, the values are sorted based on the string value of the elements. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-splice-platform",
        "url": "Arrow.Collection-method-splice",
        "type": "platform",
        "name": "Arrow.Collection.splice",
        "content": "Arrow.Collection.splice splice Modifies the collection by removing elements and optionally inserting new ones. start Number Start index. count Number Number of elements to remove. items ...Arrow.Instance Model instances to insert. return Arrow.Collection "
    },
    {
        "id": "Arrow.Collection-method-toArray-platform",
        "url": "Arrow.Collection-method-toArray",
        "type": "platform",
        "name": "Arrow.Collection.toArray",
        "content": "Arrow.Collection.toArray toArray Returns a copy of the collection as a vanilla array. return Array A copy of the collection. "
    },
    {
        "id": "Arrow.Collection-method-toJSON-platform",
        "url": "Arrow.Collection-method-toJSON",
        "type": "platform",
        "name": "Arrow.Collection.toJSON",
        "content": "Arrow.Collection.toJSON toJSON Returns a JSON version of the collection. return Array The collection. "
    },
    {
        "name": "Arrow.Connector",
        "id": "Arrow.Connector-platform",
        "url": "Arrow.Connector",
        "type": "platform",
        "content": "Arrow.Connector A Connector allows your application to access data from an external source, such as a MySQL database or cloud storage. Note: Some methods in this class are left unimplemented, which you can implement when creating a Connector instance. To create an Arrow Connector programmatically, load the arrow module, then call the Connector.extend method. Pass the method an object which implements methods to access the data source (described below). Alternatively, you can generate a new Connector project to create a modular connector that can be packaged and reused. For information, see the Arrow Connector guides. To add an existing connector to the project, see Arrow Connector guides. Create a New Connector To create a connector, either in the application or in a connector project, you must pass an implementation object to the Connector.extend method. The object implements the methods in this class as well as the Model methods below. At minimum, you should implement the connect method and the starred Model methods. var Arrow = require('arrow'); var Connector = Arrow.Connector.extend({ connect: function (callback) { // Connect to the external data source callback(); }, create: function (Model, value, callback) { // Create a model var result; try { result = Model.instance(values); } catch(e) { callback(e); } callback(null, result); }, // more Model methods }); Model Methods The following model methods may be defined in the implementation object. Important methods to implement basic functionality are starred: count create * delete * deleteAll * find findByID * findAll * query * save * upsert When implementing the Model methods, the first parameter will be the Model class, followed by the Model's method parameters. For example, the Model's create(values, callback) method will have the create: function (Model, values, callback) method signature in the implementation object. Unimplemented Methods The following methods are left unimplemented by the Connector class but may be implemented when creating a new connector: createModelsFromSchema coerceCustomType endRequest fetchConfig fetchMetadata fetchSchema getCustomType login loginRequired postCreate startRequest You may also define a constructor function to execute some custom logic when the connector is created. The new connector instance is the value passed to this in the function. The constructor is not passed any arguments and does not return any values. Connect Lifecycle The connector instance will call the following methods to connect to the data source before the server starts (if provided by the implementation): fetchMetadata fetchConfig connect fetchSchema Request Lifecycle If a request requires a login or if you want to intercept the request before or after it completes, you can implement the following methods: startRequest loginRequired login Connector makes the request. endRequest "
    },
    {
        "id": "Arrow.Connector-property--platform",
        "url": "Arrow.Connector-property-",
        "type": "platform",
        "name": "Arrow.Connector.",
        "content": "Arrow.Connector. The arrow-orm needs another look to properly handle both findById and findOne apis. Currently when a connector version with the old findOne interface is used, the \"Find by id\" won't show up in the list of APIs for a model. So we need to manually add it. Object"
    },
    {
        "id": "Arrow.Connector-property-config-platform",
        "url": "Arrow.Connector-property-config",
        "type": "platform",
        "name": "Arrow.Connector.config",
        "content": "Arrow.Connector.config config Key-value pairs describing the configuration settings of the connector. Object"
    },
    {
        "id": "Arrow.Connector-property-connected-platform",
        "url": "Arrow.Connector-property-connected",
        "type": "platform",
        "name": "Arrow.Connector.connected",
        "content": "Arrow.Connector.connected connected Returns true if the connector is connected to its data source. Boolean"
    },
    {
        "id": "Arrow.Connector-property-enabled-platform",
        "url": "Arrow.Connector-property-enabled",
        "type": "platform",
        "name": "Arrow.Connector.enabled",
        "content": "Arrow.Connector.enabled enabled Returns true if the connector is enabled. Boolean"
    },
    {
        "id": "Arrow.Connector-property-metadata-platform",
        "url": "Arrow.Connector-property-metadata",
        "type": "platform",
        "name": "Arrow.Connector.metadata",
        "content": "Arrow.Connector.metadata metadata Object with only the fields key assigned to an array of Arrow.Metadata objects to validate the configuration object. Object"
    },
    {
        "id": "Arrow.Connector-property-models-platform",
        "url": "Arrow.Connector-property-models",
        "type": "platform",
        "name": "Arrow.Connector.models",
        "content": "Arrow.Connector.models models Models that use the connector. Array"
    },
    {
        "id": "Arrow.Connector-property-name-platform",
        "url": "Arrow.Connector-property-name",
        "type": "platform",
        "name": "Arrow.Connector.name",
        "content": "Arrow.Connector.name name Name of the connector. String"
    },
    {
        "id": "Arrow.Connector-property-version-platform",
        "url": "Arrow.Connector-property-version",
        "type": "platform",
        "name": "Arrow.Connector.version",
        "content": "Arrow.Connector.version version Version of the connector. String"
    },
    {
        "id": "Arrow.Connector-method-coerceCustomType-platform",
        "url": "Arrow.Connector-method-coerceCustomType",
        "type": "platform",
        "name": "Arrow.Connector.coerceCustomType",
        "content": "Arrow.Connector.coerceCustomType coerceCustomType Determines if the model field can be implictly converted to the value. If it can, you should set the model field to the converted value. Unimplemented. Implement this method to support custom data types for model fields. instance Arrow.Instance An instance of one of the connector's models. field Any Field value to validate. name String Field name to coerce. value Any Value to coerce. return Boolean Returns true if the type can be implicitly converted else false. "
    },
    {
        "id": "Arrow.Connector-method-connect-platform",
        "url": "Arrow.Connector-method-connect",
        "type": "platform",
        "name": "Arrow.Connector.connect",
        "content": "Arrow.Connector.connect connect Connects to the external data source. The connect lifecycle will call the following methods before the server starts (if provided by the implementation): fetchMetadata fetchConfig connect fetchSchema callback Function Callback function passed an Error object (or null if successful). The callback is invoked after each operation. return void"
    },
    {
        "id": "Arrow.Connector-method-count-platform",
        "url": "Arrow.Connector-method-count",
        "type": "platform",
        "name": "Arrow.Connector.count",
        "content": "Arrow.Connector.count count Performs a query and returns a count of the records. In the options parameter, set the distinct property to true to perform a distinct count. Model Arrow.Model Models to check. options ArrowQueryOptions Query options. callback Function Callback passed an Error object (or null if successful) and the number of models found. return void"
    },
    {
        "id": "Arrow.Connector-method-createMany-platform",
        "url": "Arrow.Connector-method-createMany",
        "type": "platform",
        "name": "Arrow.Connector.createMany",
        "content": "Arrow.Connector.createMany createMany Creates a list of instances by a set of values. Model Arrow.Model Model class to check. values Array Set of instances to create callback Function Callback passed an Error object (or null if successful). return void"
    },
    {
        "id": "Arrow.Connector-method-createModelsFromSchema-platform",
        "url": "Arrow.Connector-method-createModelsFromSchema",
        "type": "platform",
        "name": "Arrow.Connector.createModelsFromSchema",
        "content": "Arrow.Connector.createModelsFromSchema createModelsFromSchema Creates models from the schema object returned from the fetchSchema method. Unimplemented. return void"
    },
    {
        "id": "Arrow.Connector-method-deleteMany-platform",
        "url": "Arrow.Connector-method-deleteMany",
        "type": "platform",
        "name": "Arrow.Connector.deleteMany",
        "content": "Arrow.Connector.deleteMany deleteMany Removes a list of instances by a set of ids. Model Arrow.Model Model class to check. ids Array Set of primary keys to delete callback Function Callback passed an Error object (or null if successful). return void"
    },
    {
        "id": "Arrow.Connector-method-disconnect-platform",
        "url": "Arrow.Connector-method-disconnect",
        "type": "platform",
        "name": "Arrow.Connector.disconnect",
        "content": "Arrow.Connector.disconnect disconnect Disconnects from the external data source. callback Function Callback function to be called at the end of the operation. return void"
    },
    {
        "id": "Arrow.Connector-method-distinct-platform",
        "url": "Arrow.Connector-method-distinct",
        "type": "platform",
        "name": "Arrow.Connector.distinct",
        "content": "Arrow.Connector.distinct distinct Performs a query and returns a distinct result set based on the field(s). Model Arrow.Model Model class to check. field String Comma-separated list of fields. options ArrowQueryOptions Query options. callback Function Callback passed an Error object (or null if successful) and the distinct models. return void"
    },
    {
        "id": "Arrow.Connector-method-endRequest-platform",
        "url": "Arrow.Connector-method-endRequest",
        "type": "platform",
        "name": "Arrow.Connector.endRequest",
        "content": "Arrow.Connector.endRequest endRequest Request interceptor invoked after the request completes. Unimplemented. Invoke the next function when the operation completes. name String Name of the function that invoked the request. args Array Arguments passed to the called function that invoked the request. request Object Request object. next Function Function to call after the operation completes. return void"
    },
    {
        "id": "Arrow.Connector-method-extend-platform",
        "url": "Arrow.Connector-method-extend",
        "type": "platform",
        "name": "Arrow.Connector.extend",
        "content": "Arrow.Connector.extend extend Creates a new connector from this instance. impl Object Implementation object. See the overview at the top of the page. return void"
    },
    {
        "id": "Arrow.Connector-method-fetchConfig-platform",
        "url": "Arrow.Connector-method-fetchConfig",
        "type": "platform",
        "name": "Arrow.Connector.fetchConfig",
        "content": "Arrow.Connector.fetchConfig fetchConfig Retrieves the data source's configuration. Called when the connect method is invoked. Unimplemented. Invoke the callback after the operation is completed. Pass an object of key-value pairs as the second argument to the callback function. callback Function Callback function passed a Error object (or null if successful) and the configuration object. return void"
    },
    {
        "id": "Arrow.Connector-method-fetchMetadata-platform",
        "url": "Arrow.Connector-method-fetchMetadata",
        "type": "platform",
        "name": "Arrow.Connector.fetchMetadata",
        "content": "Arrow.Connector.fetchMetadata fetchMetadata Retrieves the data source's metadata used to validate the configuration. Called when the connect method is invoked. Unimplemented. Invoke the callback after the operation is completed. Pass the metadata object as the second argument to the callback function. In the metadata object, set the fields property to an array of Arrow.Metadata object used to validate the configuration object. callback Function Callback function passed a Error object (or null if successful) and the metadata object. return void"
    },
    {
        "id": "Arrow.Connector-method-fetchSchema-platform",
        "url": "Arrow.Connector-method-fetchSchema",
        "type": "platform",
        "name": "Arrow.Connector.fetchSchema",
        "content": "Arrow.Connector.fetchSchema fetchSchema Retrieves the data source's schema. Called when the connect method is invoked Unimplemented. Invoke the callback after the operation is completed. callback Function Callback function passed a Error object (or null if successful) and the schema object. return void"
    },
    {
        "id": "Arrow.Connector-method-findAndModify-platform",
        "url": "Arrow.Connector-method-findAndModify",
        "type": "platform",
        "name": "Arrow.Connector.findAndModify",
        "content": "Arrow.Connector.findAndModify findAndModify Performs a find and update in the same query. Model Arrow.Model Model class to check. options ArrowQueryOptions Query options. doc Object Model fields to modify. args Object Optional parameters. callback Function Callback passed an Error object (or null if successful) and the models. return void"
    },
    {
        "id": "Arrow.Connector-method-findManyByID-platform",
        "url": "Arrow.Connector-method-findManyByID",
        "type": "platform",
        "name": "Arrow.Connector.findManyByID",
        "content": "Arrow.Connector.findManyByID findManyByID Finds a list of instances by a set of ids. Model Arrow.Model Model class to check. ids Array Set of primary keys to find callback Function Callback passed an Error object (or null if successful). return void"
    },
    {
        "id": "Arrow.Connector-method-getCustomType-platform",
        "url": "Arrow.Connector-method-getCustomType",
        "type": "platform",
        "name": "Arrow.Connector.getCustomType",
        "content": "Arrow.Connector.getCustomType getCustomType Gets the field value based upon a custom type. Unimplemented. instance Arrow.Instance An instance of one of the connector's models. field Object Field value to validate. name String Field name to coerce. value Any Value to coerce. return Object Returns an instance of your custom type. "
    },
    {
        "id": "Arrow.Connector-method-getPrimaryKey-platform",
        "url": "Arrow.Connector-method-getPrimaryKey",
        "type": "platform",
        "name": "Arrow.Connector.getPrimaryKey",
        "content": "Arrow.Connector.getPrimaryKey getPrimaryKey Returns the primary key of a Model. Override this method to provide a different value. Model Arrow.Model Model class. record Object Record to check. return String "
    },
    {
        "id": "Arrow.Connector-method-getPrimaryKeyColumnName-platform",
        "url": "Arrow.Connector-method-getPrimaryKeyColumnName",
        "type": "platform",
        "name": "Arrow.Connector.getPrimaryKeyColumnName",
        "content": "Arrow.Connector.getPrimaryKeyColumnName getPrimaryKeyColumnName Returns the column that is used as the primary key internally (not in the model, but in the native data source). This is used by the model when translating the query for selecting/unselecting columns. Model Arrow.Model Model class to check. return String Key name in the data source used as the primary key. "
    },
    {
        "id": "Arrow.Connector-method-inspect-platform",
        "url": "Arrow.Connector-method-inspect",
        "type": "platform",
        "name": "Arrow.Connector.inspect",
        "content": "Arrow.Connector.inspect inspect suitable for util.inspect return void"
    },
    {
        "id": "Arrow.Connector-method-isConnected-platform",
        "url": "Arrow.Connector-method-isConnected",
        "type": "platform",
        "name": "Arrow.Connector.isConnected",
        "content": "Arrow.Connector.isConnected isConnected Returns true if connected. return Boolean "
    },
    {
        "id": "Arrow.Connector-method-logDefaultConfig-platform",
        "url": "Arrow.Connector-method-logDefaultConfig",
        "type": "platform",
        "name": "Arrow.Connector.logDefaultConfig",
        "content": "Arrow.Connector.logDefaultConfig logDefaultConfig Outputs the default connector configuration to the console. return void"
    },
    {
        "id": "Arrow.Connector-method-login-platform",
        "url": "Arrow.Connector-method-login",
        "type": "platform",
        "name": "Arrow.Connector.login",
        "content": "Arrow.Connector.login login Logins to the data source to make a request if a login is required. Unimplemented. Define in the implementation object when creating a connector. Invoke the next function when the operation completes. The loginRequired function must be implemented to determine if login should be called or not. request Object Request object. response Object Response object. next Function Function to call after the operation completes. return void"
    },
    {
        "id": "Arrow.Connector-method-loginRequired-platform",
        "url": "Arrow.Connector-method-loginRequired",
        "type": "platform",
        "name": "Arrow.Connector.loginRequired",
        "content": "Arrow.Connector.loginRequired loginRequired Determines if a login is required to make a request to the data source. Unimplemented. Define in the implementation object when creating a connector. If a login is required, the login function must be implemented too. request Object Request object. callback Function Callback passed an error message (or null if successful) and a boolean indicating if a login is required (true) or not (false). return void"
    },
    {
        "id": "Arrow.Connector-method-postCreate-platform",
        "url": "Arrow.Connector-method-postCreate",
        "type": "platform",
        "name": "Arrow.Connector.postCreate",
        "content": "Arrow.Connector.postCreate postCreate Executes logic after the connector is created but before it is returned. Unimplemented. The new connector instance is the value passed to this in the function. The function is not passed any arguments and does not need to return any values. return void"
    },
    {
        "id": "Arrow.Connector-method-startRequest-platform",
        "url": "Arrow.Connector-method-startRequest",
        "type": "platform",
        "name": "Arrow.Connector.startRequest",
        "content": "Arrow.Connector.startRequest startRequest Request interceptor invoked before the request is initiated and the login method is invoked. Unimplemented. Invoke the next function when the operation completes. name String Name of the function that invoked the request. args Array Arguments passed to the called function that invoked the request. request Object Request object. next Function Function to call after the operation completes. return void"
    },
    {
        "id": "Arrow.Connector-method-toJSON-platform",
        "url": "Arrow.Connector-method-toJSON",
        "type": "platform",
        "name": "Arrow.Connector.toJSON",
        "content": "Arrow.Connector.toJSON toJSON suitable for JSON.stringify return void"
    },
    {
        "id": "Arrow.Connector-method-upsert-platform",
        "url": "Arrow.Connector-method-upsert",
        "type": "platform",
        "name": "Arrow.Connector.upsert",
        "content": "Arrow.Connector.upsert upsert Creates or updates a model. Model Arrow.Model Model to search. id String ID of the model to update (or create). document Object Fields to set in the model. callback Function Callback passed an Error object (or null if successful) and the new model. return void"
    },
    {
        "id": "Arrow.Connector-method-validateConfig-platform",
        "url": "Arrow.Connector-method-validateConfig",
        "type": "platform",
        "name": "Arrow.Connector.validateConfig",
        "content": "Arrow.Connector.validateConfig validateConfig Validates whether or not the config for this connector is valid, based on its metadata. return Boolean/Error Returns true if the config is valid, otherwise returns an Error. "
    },
    {
        "name": "Arrow.Instance",
        "id": "Arrow.Instance-platform",
        "url": "Arrow.Instance",
        "type": "platform",
        "content": "Arrow.Instance An instance of an Arrow Model is one data record in the Model API. Use the Arrow Instance API to manage your model data. To create an Arrow Model instance, call the Model object's instance() method and pass it data you want to set on the model instance. var Arrow = require('arrow'), Model = Arrow.Model, UserModels = Model.getModel('user'); ... var newModel = UserModels.instance({first_name: 'John', last_name: 'Doe'}); newModel.save(function (err, result) { if (!err) { Arrow.logger.info(result); } else { Arrow.logger.error(error); } }); "
    },
    {
        "id": "Arrow.Instance-method-change-platform",
        "url": "Arrow.Instance-method-change",
        "type": "platform",
        "name": "Arrow.Instance.change",
        "content": "Arrow.Instance.change change Changes a field with a new value. This will force the internal state to be dirty regardless of whether the value is the same as what's already set. name String Name of the model attribute. value Any Value to set. return void"
    },
    {
        "id": "Arrow.Instance-method-delete-platform",
        "url": "Arrow.Instance-method-delete",
        "type": "platform",
        "name": "Arrow.Instance.delete",
        "content": "Arrow.Instance.delete delete Deletes the model instance. callback Function Callback passed an Error object (or null if successful), and the deleted model. return void"
    },
    {
        "id": "Arrow.Instance-method-get-platform",
        "url": "Arrow.Instance-method-get",
        "type": "platform",
        "name": "Arrow.Instance.get",
        "content": "Arrow.Instance.get get Retrieves the value of the model field. name String Field name to retrieve. return Any "
    },
    {
        "id": "Arrow.Instance-method-getChangedFields-platform",
        "url": "Arrow.Instance-method-getChangedFields",
        "type": "platform",
        "name": "Arrow.Instance.getChangedFields",
        "content": "Arrow.Instance.getChangedFields getChangedFields Returns the fields that have been changed. return Object "
    },
    {
        "id": "Arrow.Instance-method-getConnector-platform",
        "url": "Arrow.Instance-method-getConnector",
        "type": "platform",
        "name": "Arrow.Instance.getConnector",
        "content": "Arrow.Instance.getConnector getConnector Retrieves the Connector class used by this model instance. return Arrow.Connector "
    },
    {
        "id": "Arrow.Instance-method-getMeta-platform",
        "url": "Arrow.Instance-method-getMeta",
        "type": "platform",
        "name": "Arrow.Instance.getMeta",
        "content": "Arrow.Instance.getMeta getMeta Retrieves metadata from the model instance. key String Key to retrieve. def Any Default value to return if the key is not set. Does not set the value of the key. return Any "
    },
    {
        "id": "Arrow.Instance-method-getModel-platform",
        "url": "Arrow.Instance-method-getModel",
        "type": "platform",
        "name": "Arrow.Instance.getModel",
        "content": "Arrow.Instance.getModel getModel Retrieves the Model class used by this model instance. return Arrow.Model "
    },
    {
        "id": "Arrow.Instance-method-getPrimaryKey-platform",
        "url": "Arrow.Instance-method-getPrimaryKey",
        "type": "platform",
        "name": "Arrow.Instance.getPrimaryKey",
        "content": "Arrow.Instance.getPrimaryKey getPrimaryKey Retrieves the field name used as the primary key. return String "
    },
    {
        "id": "Arrow.Instance-method-inspect-platform",
        "url": "Arrow.Instance-method-inspect",
        "type": "platform",
        "name": "Arrow.Instance.inspect",
        "content": "Arrow.Instance.inspect inspect Returns a string representation of the model instance. return String "
    },
    {
        "id": "Arrow.Instance-method-isDeleted-platform",
        "url": "Arrow.Instance-method-isDeleted",
        "type": "platform",
        "name": "Arrow.Instance.isDeleted",
        "content": "Arrow.Instance.isDeleted isDeleted Returns true if the model instance has been deleted. return Boolean "
    },
    {
        "id": "Arrow.Instance-method-isUnsaved-platform",
        "url": "Arrow.Instance-method-isUnsaved",
        "type": "platform",
        "name": "Arrow.Instance.isUnsaved",
        "content": "Arrow.Instance.isUnsaved isUnsaved Returns true if the model instance has not been saved to the external source. return Boolean "
    },
    {
        "id": "Arrow.Instance-method-keys-platform",
        "url": "Arrow.Instance-method-keys",
        "type": "platform",
        "name": "Arrow.Instance.keys",
        "content": "Arrow.Instance.keys keys Returns the field keys for the instance. return Array "
    },
    {
        "id": "Arrow.Instance-method-remove-platform",
        "url": "Arrow.Instance-method-remove",
        "type": "platform",
        "name": "Arrow.Instance.remove",
        "content": "Arrow.Instance.remove remove Deletes the model instance. callback Function Callback passed an Error object (or null if successful), and the deleted model. return void"
    },
    {
        "id": "Arrow.Instance-method-save-platform",
        "url": "Arrow.Instance-method-save",
        "type": "platform",
        "name": "Arrow.Instance.save",
        "content": "Arrow.Instance.save save Saves the model instance. callback Function Callback passed an Error object (or null if successful) and the updated model. return void"
    },
    {
        "id": "Arrow.Instance-method-set-platform",
        "url": "Arrow.Instance-method-set",
        "type": "platform",
        "name": "Arrow.Instance.set",
        "content": "Arrow.Instance.set set Sets the values on the model instance. name String Name of the field to set. value Object/Any If name is used, the value to set for the field. Otherwise, use an object of key-value pairs to set. skipNotFound Boolean Set to true to skip fields passed in to the value parameter that are not defined by the model's schema. By default, an error will be thrown if an undefined field is passed in. return Arrow.Instance "
    },
    {
        "id": "Arrow.Instance-method-setMeta-platform",
        "url": "Arrow.Instance-method-setMeta",
        "type": "platform",
        "name": "Arrow.Instance.setMeta",
        "content": "Arrow.Instance.setMeta setMeta Sets metadata for the model instance. key String Key to set. value Any Value to set. return Arrow.Instance "
    },
    {
        "id": "Arrow.Instance-method-setPrimaryKey-platform",
        "url": "Arrow.Instance-method-setPrimaryKey",
        "type": "platform",
        "name": "Arrow.Instance.setPrimaryKey",
        "content": "Arrow.Instance.setPrimaryKey setPrimaryKey Sets the primary key for the model. field String Field name to use as the primary key. return void"
    },
    {
        "id": "Arrow.Instance-method-toJSON-platform",
        "url": "Arrow.Instance-method-toJSON",
        "type": "platform",
        "name": "Arrow.Instance.toJSON",
        "content": "Arrow.Instance.toJSON toJSON Converts the model instance to JSON. return Object "
    },
    {
        "id": "Arrow.Instance-method-toPayload-platform",
        "url": "Arrow.Instance-method-toPayload",
        "type": "platform",
        "name": "Arrow.Instance.toPayload",
        "content": "Arrow.Instance.toPayload toPayload Converts the model fields to a JSON payload. return Object "
    },
    {
        "id": "Arrow.Instance-method-update-platform",
        "url": "Arrow.Instance-method-update",
        "type": "platform",
        "name": "Arrow.Instance.update",
        "content": "Arrow.Instance.update update Saves the model instance. callback Function Callback passed an Error object (or null if successful) and the updated model. return void"
    },
    {
        "id": "Arrow.Instance-method-validateCoersiveTypes-platform",
        "url": "Arrow.Instance-method-validateCoersiveTypes",
        "type": "platform",
        "name": "Arrow.Instance.validateCoersiveTypes",
        "content": "Arrow.Instance.validateCoersiveTypes validateCoersiveTypes Validates if the model field can be implictly converted to the value. If it can, sets the converted value. field Any Field value to validate. name String Field name to set. value Any Value to validate. return Boolean Returns true if the type can be implicitly converted else false. "
    },
    {
        "id": "Arrow.Instance-method-validateField-platform",
        "url": "Arrow.Instance-method-validateField",
        "type": "platform",
        "name": "Arrow.Instance.validateField",
        "content": "Arrow.Instance.validateField validateField Validates a field in the model. Throws a validation error if validation fails. name String Field name to validate. v Any Value to validate. return void"
    },
    {
        "id": "Arrow.Instance-method-validateFields-platform",
        "url": "Arrow.Instance-method-validateFields",
        "type": "platform",
        "name": "Arrow.Instance.validateFields",
        "content": "Arrow.Instance.validateFields validateFields Validates the fields in the model. return Boolean Returns true if all fields are valid else false. "
    },
    {
        "id": "Arrow.Instance-method-values-platform",
        "url": "Arrow.Instance-method-values",
        "type": "platform",
        "name": "Arrow.Instance.values",
        "content": "Arrow.Instance.values values Returns the values for the model instance excluding the primary key. dirtyOnly Boolean Set to true to only return unsaved fields. return Object "
    },
    {
        "name": "Arrow.Model",
        "id": "Arrow.Model-platform",
        "url": "Arrow.Model",
        "type": "platform",
        "content": "Arrow.Model The Arrow Model API provides an interface to programmatically access Models from an Arrow application. Models provide an interface to access data (or Model Instances) from an Arrow Connector. The Model API is divided into two APIs: Use the Arrow Model API to manage the Model class (or the interface to the Models) Use the Arrow Instance API to manage the Model records (or the data in model) To create a new Model programmatically, load the arrow module, then call: Arrow.createModel() to create a new Model. This is a static or instance method. Model.define() to create a new Model. This is a static method called on the class. Model.extend() to create a new Model by extending the current instance. Model.reduce() to create a new Model by reducing the current instance. After you create the Model class, add it to the current server instance using the addModel() method. To automatically generate the standardized APIs, add the model to the Arrow instance before invoking the Arrow instance's start() method. For example: var Arrow = require('arrow'), Model = Arrow.Model, UserModels = Model.getModel('user'); ... var PersonModels = Model.reduce('person', { fields: { first_name: {type:String, description:'Given name', required:true}, last_name: {type:String, description:'Family name', required:true} } }); server.addModel(PersonModels); Alternatively, you can create a model definition file that is automatically loaded by the Arrow project. For details, see the Arrow Models guide. "
    },
    {
        "id": "Arrow.Model-property-actions-platform",
        "url": "Arrow.Model-property-actions",
        "type": "platform",
        "name": "Arrow.Model.actions",
        "content": "Arrow.Model.actions actions An array of data operations supported by the model. The valid values are: create, read, update and delete. Array"
    },
    {
        "id": "Arrow.Model-property-autogen-platform",
        "url": "Arrow.Model-property-autogen",
        "type": "platform",
        "name": "Arrow.Model.autogen",
        "content": "Arrow.Model.autogen autogen Set to true if API endpoints for the Model are auto-generated. Boolean"
    },
    {
        "id": "Arrow.Model-property-connector-platform",
        "url": "Arrow.Model-property-connector",
        "type": "platform",
        "name": "Arrow.Model.connector",
        "content": "Arrow.Model.connector connector Connector associated with the model. Arrow.Connector"
    },
    {
        "id": "Arrow.Model-property-field-platform",
        "url": "Arrow.Model-property-field",
        "type": "platform",
        "name": "Arrow.Model.field",
        "content": "Arrow.Model.field field Object describing the schema of the model. ArrowModelFields"
    },
    {
        "id": "Arrow.Model-property-generated-platform",
        "url": "Arrow.Model-property-generated",
        "type": "platform",
        "name": "Arrow.Model.generated",
        "content": "Arrow.Model.generated generated Set to true if the model is auto-generated by the connector. Boolean"
    },
    {
        "id": "Arrow.Model-property-mappings-platform",
        "url": "Arrow.Model-property-mappings",
        "type": "platform",
        "name": "Arrow.Model.mappings",
        "content": "Arrow.Model.mappings mappings Object containing mapping functions. Set the key to the name of the field and the value is another object containing a get and set function. Each function is passed the field value, field name and model instance, and must return a value. { 'custom_field': { get: function(value, field, instance) { if (value == 'California') { return 'CA'; } else { return value; } } } } Functions set in this object are used instead of the ones defined in the model definition object. Object"
    },
    {
        "id": "Arrow.Model-property-metadata-platform",
        "url": "Arrow.Model-property-metadata",
        "type": "platform",
        "name": "Arrow.Model.metadata",
        "content": "Arrow.Model.metadata metadata Model metadata. ArrowModelMetadata"
    },
    {
        "id": "Arrow.Model-property-name-platform",
        "url": "Arrow.Model-property-name",
        "type": "platform",
        "name": "Arrow.Model.name",
        "content": "Arrow.Model.name name Name of the model. String"
    },
    {
        "id": "Arrow.Model-property-plural-platform",
        "url": "Arrow.Model-property-plural",
        "type": "platform",
        "name": "Arrow.Model.plural",
        "content": "Arrow.Model.plural plural Plural name for the model. String"
    },
    {
        "id": "Arrow.Model-property-singular-platform",
        "url": "Arrow.Model-property-singular",
        "type": "platform",
        "name": "Arrow.Model.singular",
        "content": "Arrow.Model.singular singular Singular name for the model. String"
    },
    {
        "id": "Arrow.Model-method-count-platform",
        "url": "Arrow.Model-method-count",
        "type": "platform",
        "name": "Arrow.Model.count",
        "content": "Arrow.Model.count count Gets a count of records. options ArrowQueryOptions Query options. callback Function Callback passed an Error object (or null if successful) and the number of models found. return void"
    },
    {
        "id": "Arrow.Model-method-countAPI-platform",
        "url": "Arrow.Model-method-countAPI",
        "type": "platform",
        "name": "Arrow.Model.countAPI",
        "content": "Arrow.Model.countAPI countAPI Documents the count method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-create-platform",
        "url": "Arrow.Model-method-create",
        "type": "platform",
        "name": "Arrow.Model.create",
        "content": "Arrow.Model.create create Creates a new Model or Collection object. values Array/Object Attributes to set on the new model(s). callback Function Callback passed an Error object (or null if successful), and the new model or collection. return void"
    },
    {
        "id": "Arrow.Model-method-createAPI-platform",
        "url": "Arrow.Model-method-createAPI",
        "type": "platform",
        "name": "Arrow.Model.createAPI",
        "content": "Arrow.Model.createAPI createAPI Documents the create method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-delete-platform",
        "url": "Arrow.Model-method-delete",
        "type": "platform",
        "name": "Arrow.Model.delete",
        "content": "Arrow.Model.delete delete Deletes the model instance. instance Arrow.Instance Model instance. callback Function Callback passed an Error object (or null if successful), and the deleted model. return void"
    },
    {
        "id": "Arrow.Model-method-deleteAPI-platform",
        "url": "Arrow.Model-method-deleteAPI",
        "type": "platform",
        "name": "Arrow.Model.deleteAPI",
        "content": "Arrow.Model.deleteAPI deleteAPI Documents the delete method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-deleteAll-platform",
        "url": "Arrow.Model-method-deleteAll",
        "type": "platform",
        "name": "Arrow.Model.deleteAll",
        "content": "Arrow.Model.deleteAll deleteAll Deletes all the data records. callback Function Callback passed an Error object (or null if successful), and the deleted models. return void"
    },
    {
        "id": "Arrow.Model-method-deleteAllAPI-platform",
        "url": "Arrow.Model-method-deleteAllAPI",
        "type": "platform",
        "name": "Arrow.Model.deleteAllAPI",
        "content": "Arrow.Model.deleteAllAPI deleteAllAPI Documents the delete all method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-distinct-platform",
        "url": "Arrow.Model-method-distinct",
        "type": "platform",
        "name": "Arrow.Model.distinct",
        "content": "Arrow.Model.distinct distinct Finds unique values using the provided field. field String The field that must be distinct. options ArrowQueryOptions Query options. callback Function Callback passed an Error object (or null if successful) and the distinct models. return void"
    },
    {
        "id": "Arrow.Model-method-distinctAPI-platform",
        "url": "Arrow.Model-method-distinctAPI",
        "type": "platform",
        "name": "Arrow.Model.distinctAPI",
        "content": "Arrow.Model.distinctAPI distinctAPI Documents the distinct method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-extend-platform",
        "url": "Arrow.Model-method-extend",
        "type": "platform",
        "name": "Arrow.Model.extend",
        "content": "Arrow.Model.extend extend Creates a new Model which extends the current Model object. The fields specified in the definition object will be merged with the ones defined in the current Model object. name String Name of the new Model. definition ArrowModelDefinition Model definition object. return Arrow.Model "
    },
    {
        "id": "Arrow.Model-method-fetch-platform",
        "url": "Arrow.Model-method-fetch",
        "type": "platform",
        "name": "Arrow.Model.fetch",
        "content": "Arrow.Model.fetch fetch Finds a particular model record or records. options Object/String Key-value pairs or ID of the model to find. If omitted, performs a findAll operation. callback Function Callback passed an Error object (or null if successful) and the model record(s). return void"
    },
    {
        "id": "Arrow.Model-method-find-platform",
        "url": "Arrow.Model-method-find",
        "type": "platform",
        "name": "Arrow.Model.find",
        "content": "Arrow.Model.find find Finds a particular model record or records. options Object/String Key-value pairs or ID of the model to find. If omitted, performs a findAll operation. callback Function Callback passed an Error object (or null if successful) and the model record(s). return void"
    },
    {
        "id": "Arrow.Model-method-findAll-platform",
        "url": "Arrow.Model-method-findAll",
        "type": "platform",
        "name": "Arrow.Model.findAll",
        "content": "Arrow.Model.findAll findAll Finds all model instances. A maximum of 1000 models are returned. callback Function Callback passed an Error object (or null if successful) and the models. return void"
    },
    {
        "id": "Arrow.Model-method-findAllAPI-platform",
        "url": "Arrow.Model-method-findAllAPI",
        "type": "platform",
        "name": "Arrow.Model.findAllAPI",
        "content": "Arrow.Model.findAllAPI findAllAPI Documents the findAll method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-findAndModify-platform",
        "url": "Arrow.Model-method-findAndModify",
        "type": "platform",
        "name": "Arrow.Model.findAndModify",
        "content": "Arrow.Model.findAndModify findAndModify Finds one model instance and modifies it. options ArrowQueryOptions Query options. doc Object Attributes to modify. args Object Optional parameters. callback Function Callback passed an Error object (or null if successful) and the modified model. return void"
    },
    {
        "id": "Arrow.Model-method-findAndModifyAPI-platform",
        "url": "Arrow.Model-method-findAndModifyAPI",
        "type": "platform",
        "name": "Arrow.Model.findAndModifyAPI",
        "content": "Arrow.Model.findAndModifyAPI findAndModifyAPI Documents the query method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-findByID-platform",
        "url": "Arrow.Model-method-findByID",
        "type": "platform",
        "name": "Arrow.Model.findByID",
        "content": "Arrow.Model.findByID findByID Finds a model instance using the primary key. id String ID of the model to find. callback Function Callback passed an Error object (or null if successful) and the found model. return void"
    },
    {
        "id": "Arrow.Model-method-findByIDAPI-platform",
        "url": "Arrow.Model-method-findByIDAPI",
        "type": "platform",
        "name": "Arrow.Model.findByIDAPI",
        "content": "Arrow.Model.findByIDAPI findByIDAPI Documents the findByID method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-findOne-platform",
        "url": "Arrow.Model-method-findOne",
        "type": "platform",
        "name": "Arrow.Model.findOne",
        "content": "Arrow.Model.findOne findOne Warning: This method is being deprecated and should not be used in your implementation. Finds a model instance using the primary key. return void"
    },
    {
        "id": "Arrow.Model-method-get-platform",
        "url": "Arrow.Model-method-get",
        "type": "platform",
        "name": "Arrow.Model.get",
        "content": "Arrow.Model.get get Processes the field value before its returned to the client. This function executes the field's get method defined in either the Model's mappings property or the model definition object. name String Field name. value Any Value of the field. instance Arrow.Instance Model instance. return Any Value you want to return to the client. "
    },
    {
        "id": "Arrow.Model-method-getConnector-platform",
        "url": "Arrow.Model-method-getConnector",
        "type": "platform",
        "name": "Arrow.Model.getConnector",
        "content": "Arrow.Model.getConnector getConnector Checks for a valid connector and returns it, throwing an ORMError if a connector is not set. dontRaiseException Boolean Set to true to not throw an error if the model is missing a connector. return Arrow.Connector Connector used by the Model. "
    },
    {
        "id": "Arrow.Model-method-getMeta-platform",
        "url": "Arrow.Model-method-getMeta",
        "type": "platform",
        "name": "Arrow.Model.getMeta",
        "content": "Arrow.Model.getMeta getMeta Returns model metadata. key String Key to retrieve. def Any Default value to return if the key is not set. Does not set the value of the key. return Any "
    },
    {
        "id": "Arrow.Model-method-getPrimaryKeyName-platform",
        "url": "Arrow.Model-method-getPrimaryKeyName",
        "type": "platform",
        "name": "Arrow.Model.getPrimaryKeyName",
        "content": "Arrow.Model.getPrimaryKeyName getPrimaryKeyName Returns model primarykey name. return String Primary key name value. "
    },
    {
        "id": "Arrow.Model-method-inspect-platform",
        "url": "Arrow.Model-method-inspect",
        "type": "platform",
        "name": "Arrow.Model.inspect",
        "content": "Arrow.Model.inspect inspect suitable for util.inspect return void"
    },
    {
        "id": "Arrow.Model-method-instance-platform",
        "url": "Arrow.Model-method-instance",
        "type": "platform",
        "name": "Arrow.Model.instance",
        "content": "Arrow.Model.instance instance Creates an instance of this Model. values Object Attributes to set. skipNotFound Boolean Set to true to skip fields passed in to the value parameter that are not defined by the Model's schema. By default, an error will be thrown if an undefined field is passed in. return Arrow.Instance "
    },
    {
        "id": "Arrow.Model-method-keys-platform",
        "url": "Arrow.Model-method-keys",
        "type": "platform",
        "name": "Arrow.Model.keys",
        "content": "Arrow.Model.keys keys Returns the field keys for the Model. return Array "
    },
    {
        "id": "Arrow.Model-method-payloadKeys-platform",
        "url": "Arrow.Model-method-payloadKeys",
        "type": "platform",
        "name": "Arrow.Model.payloadKeys",
        "content": "Arrow.Model.payloadKeys payloadKeys Returns the payload keys (model field names) for the Model. return Array "
    },
    {
        "id": "Arrow.Model-method-query-platform",
        "url": "Arrow.Model-method-query",
        "type": "platform",
        "name": "Arrow.Model.query",
        "content": "Arrow.Model.query query Queries for particular model records. options ArrowQueryOptions Query options. callback Function Callback passed an Error object (or null if successful) and the model records. return void"
    },
    {
        "id": "Arrow.Model-method-queryAPI-platform",
        "url": "Arrow.Model-method-queryAPI",
        "type": "platform",
        "name": "Arrow.Model.queryAPI",
        "content": "Arrow.Model.queryAPI queryAPI Documents the query method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-reduce-platform",
        "url": "Arrow.Model-method-reduce",
        "type": "platform",
        "name": "Arrow.Model.reduce",
        "content": "Arrow.Model.reduce reduce Creates a new Model which reduces fields from the current Model class. Only the fields specified in the definition object that are found in the current Model object will be used. name String Name of the new Model. definition ArrowModelDefinition Model definition object. return Arrow.Model "
    },
    {
        "id": "Arrow.Model-method-remove-platform",
        "url": "Arrow.Model-method-remove",
        "type": "platform",
        "name": "Arrow.Model.remove",
        "content": "Arrow.Model.remove remove Deletes the model instance. instance Arrow.Instance Model instance. callback Function Callback passed an Error object (or null if successful), and the deleted model. return void"
    },
    {
        "id": "Arrow.Model-method-removeAll-platform",
        "url": "Arrow.Model-method-removeAll",
        "type": "platform",
        "name": "Arrow.Model.removeAll",
        "content": "Arrow.Model.removeAll removeAll Deletes all the data records. callback Function Callback passed an Error object (or null if successful), and the deleted models. return void"
    },
    {
        "id": "Arrow.Model-method-save-platform",
        "url": "Arrow.Model-method-save",
        "type": "platform",
        "name": "Arrow.Model.save",
        "content": "Arrow.Model.save save Updates a Model instance. instance Arrow.Instance Model instance to update. callback Function Callback passed an Error object (or null if successful) and the updated model. return void"
    },
    {
        "id": "Arrow.Model-method-set-platform",
        "url": "Arrow.Model-method-set",
        "type": "platform",
        "name": "Arrow.Model.set",
        "content": "Arrow.Model.set set Processes the field value before its returned to the connector. This function executes the field's set method defined in either the Model's mappings property or the model definition object. name String Field name. value Any Value of the field. instance Arrow.Instance Model instance. return Any Value you want to return to the connector. "
    },
    {
        "id": "Arrow.Model-method-setConnector-platform",
        "url": "Arrow.Model-method-setConnector",
        "type": "platform",
        "name": "Arrow.Model.setConnector",
        "content": "Arrow.Model.setConnector setConnector Sets the connector for the model. connect Object {Arrow.Connector} return void"
    },
    {
        "id": "Arrow.Model-method-setMeta-platform",
        "url": "Arrow.Model-method-setMeta",
        "type": "platform",
        "name": "Arrow.Model.setMeta",
        "content": "Arrow.Model.setMeta setMeta Sets metadata for the model. key String Key name. value Any Value to set. return void"
    },
    {
        "id": "Arrow.Model-method-toJSON-platform",
        "url": "Arrow.Model-method-toJSON",
        "type": "platform",
        "name": "Arrow.Model.toJSON",
        "content": "Arrow.Model.toJSON toJSON suitable for JSON.stringify return void"
    },
    {
        "id": "Arrow.Model-method-translateKeysForPayload-platform",
        "url": "Arrow.Model-method-translateKeysForPayload",
        "type": "platform",
        "name": "Arrow.Model.translateKeysForPayload",
        "content": "Arrow.Model.translateKeysForPayload translateKeysForPayload Returns an object containing keys translated from field keys to payload keys. This is useful for translating objects like \"where\", \"order\", \"sel\" and \"unsel\" to their proper named underlying payload objects. obj Object return Object "
    },
    {
        "id": "Arrow.Model-method-update-platform",
        "url": "Arrow.Model-method-update",
        "type": "platform",
        "name": "Arrow.Model.update",
        "content": "Arrow.Model.update update Updates a Model instance. instance Arrow.Instance Model instance to update. callback Function Callback passed an Error object (or null if successful) and the updated model. return void"
    },
    {
        "id": "Arrow.Model-method-updateAPI-platform",
        "url": "Arrow.Model-method-updateAPI",
        "type": "platform",
        "name": "Arrow.Model.updateAPI",
        "content": "Arrow.Model.updateAPI updateAPI Documents the update method for API usage. return Object "
    },
    {
        "id": "Arrow.Model-method-upsert-platform",
        "url": "Arrow.Model-method-upsert",
        "type": "platform",
        "name": "Arrow.Model.upsert",
        "content": "Arrow.Model.upsert upsert Updates a model or creates the model if it cannot be found. id String ID of the model to update. doc Object Model attributes to set. callback Function Callback passed an Error object (or null if successful) and the updated or new model. return void"
    },
    {
        "id": "Arrow.Model-method-upsertAPI-platform",
        "url": "Arrow.Model-method-upsertAPI",
        "type": "platform",
        "name": "Arrow.Model.upsertAPI",
        "content": "Arrow.Model.upsertAPI upsertAPI Documents the upsert method for API usage. return Object "
    },
    {
        "name": "ArrowQueryOptions",
        "id": "ArrowQueryOptions-platform",
        "url": "ArrowQueryOptions",
        "type": "platform",
        "content": "ArrowQueryOptions Standard query options used by Arrow for query requests. "
    },
    {
        "id": "ArrowQueryOptions-property-limit-platform",
        "url": "ArrowQueryOptions-property-limit",
        "type": "platform",
        "name": "ArrowQueryOptions.limit",
        "content": "ArrowQueryOptions.limit limit The number of records to fetch. Range: (0, 1000]. Number 10"
    },
    {
        "id": "ArrowQueryOptions-property-order-platform",
        "url": "ArrowQueryOptions-property-order",
        "type": "platform",
        "name": "ArrowQueryOptions.order",
        "content": "ArrowQueryOptions.order order A dictionary of key-value pairs describing the field(s) for sorting. The field name is the key and the value is set to either -1 for ascending order or 1 for descending order. Object"
    },
    {
        "id": "ArrowQueryOptions-property-page-platform",
        "url": "ArrowQueryOptions-property-page",
        "type": "platform",
        "name": "ArrowQueryOptions.page",
        "content": "ArrowQueryOptions.page page Starting page number. Number 1"
    },
    {
        "id": "ArrowQueryOptions-property-per_page-platform",
        "url": "ArrowQueryOptions-property-per_page",
        "type": "platform",
        "name": "ArrowQueryOptions.per_page",
        "content": "ArrowQueryOptions.per_page per_page Results per page. Number 10"
    },
    {
        "id": "ArrowQueryOptions-property-sel-platform",
        "url": "ArrowQueryOptions-property-sel",
        "type": "platform",
        "name": "ArrowQueryOptions.sel",
        "content": "ArrowQueryOptions.sel sel A dictionary of key-value pairs describing which fields to include in the query results. The field name is the key and the value is set to 1. Object"
    },
    {
        "id": "ArrowQueryOptions-property-skip-platform",
        "url": "ArrowQueryOptions-property-skip",
        "type": "platform",
        "name": "ArrowQueryOptions.skip",
        "content": "ArrowQueryOptions.skip skip The number of records to skip. Value is greater than zero. Number"
    },
    {
        "id": "ArrowQueryOptions-property-unsel-platform",
        "url": "ArrowQueryOptions-property-unsel",
        "type": "platform",
        "name": "ArrowQueryOptions.unsel",
        "content": "ArrowQueryOptions.unsel unsel A dictionary of key-value pairs describing which fields to exclude from the query results. The field name is the key and the value is set to 1. Object"
    },
    {
        "id": "ArrowQueryOptions-property-where-platform",
        "url": "ArrowQueryOptions-property-where",
        "type": "platform",
        "name": "ArrowQueryOptions.where",
        "content": "ArrowQueryOptions.where where JSON-encoded object specifying field constraints. The field name is the key and the value is the constraint statement or value. Object"
    },
    {
        "name": "ArrowModelDefinition",
        "id": "ArrowModelDefinition-platform",
        "url": "ArrowModelDefinition",
        "type": "platform",
        "content": "ArrowModelDefinition Object describing the model to create. You must define the fields key. The connector key must also be set if you are using the static methods, that is, you are not creating a model from an instance. All other keys are optional. This object can be passed to the following methods: Arrow.createModel Arrow.Model.define Arrow.Model.extend Arrow.Model.reduce "
    },
    {
        "id": "ArrowModelDefinition-property-actions-platform",
        "url": "ArrowModelDefinition-property-actions",
        "type": "platform",
        "name": "ArrowModelDefinition.actions",
        "content": "ArrowModelDefinition.actions actions An array of data operations supported by the model. The valid values are: create, read, update and delete. By default, all are supported by the model. Array"
    },
    {
        "id": "ArrowModelDefinition-property-after-platform",
        "url": "ArrowModelDefinition-property-after",
        "type": "platform",
        "name": "ArrowModelDefinition.after",
        "content": "ArrowModelDefinition.after after One or more blocks to be executed after the request. Blocks are referenced by their name property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. String/Array"
    },
    {
        "id": "ArrowModelDefinition-property-autogen-platform",
        "url": "ArrowModelDefinition-property-autogen",
        "type": "platform",
        "name": "ArrowModelDefinition.autogen",
        "content": "ArrowModelDefinition.autogen autogen Used to determine whether to generate API endpoints directly from the model. If the endpoint is auto-generated, you do not need to create an API endpoint definition. String true"
    },
    {
        "id": "ArrowModelDefinition-property-before-platform",
        "url": "ArrowModelDefinition-property-before",
        "type": "platform",
        "name": "ArrowModelDefinition.before",
        "content": "ArrowModelDefinition.before before One or more blocks to be executed before the request. Blocks are referenced by their name property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. String/Array"
    },
    {
        "id": "ArrowModelDefinition-property-connector-platform",
        "url": "ArrowModelDefinition-property-connector",
        "type": "platform",
        "name": "ArrowModelDefinition.connector",
        "content": "ArrowModelDefinition.connector connector Name of the connector to which the model is bound. Each model can only have one connector. Connectors are responsible for reading and writing data from/to their data source. String"
    },
    {
        "id": "ArrowModelDefinition-property-fields-platform",
        "url": "ArrowModelDefinition-property-fields",
        "type": "platform",
        "name": "ArrowModelDefinition.fields",
        "content": "ArrowModelDefinition.fields fields An object that represents the models schema defined as key-value pairs. The key is the name of the field and the value is the fields object. ArrowModelFields"
    },
    {
        "id": "ArrowModelDefinition-property-metadata-platform",
        "url": "ArrowModelDefinition-property-metadata",
        "type": "platform",
        "name": "ArrowModelDefinition.metadata",
        "content": "ArrowModelDefinition.metadata metadata Used to provide a connector specific configuration (e.g., mapping the model to a specific database table for the MySQL connector or defining the join properties). ArrowModelMetadata"
    },
    {
        "id": "ArrowModelDefinition-property-plural-platform",
        "url": "ArrowModelDefinition-property-plural",
        "type": "platform",
        "name": "ArrowModelDefinition.plural",
        "content": "ArrowModelDefinition.plural plural A string used as the property name when your API endpoint returns an array. By default, the plural value is the plural of the model name. For example, if your model is named car, the default plural would be cars. Note: this value can be set on an API or a model. String"
    },
    {
        "id": "ArrowModelDefinition-property-singular-platform",
        "url": "ArrowModelDefinition-property-singular",
        "type": "platform",
        "name": "ArrowModelDefinition.singular",
        "content": "ArrowModelDefinition.singular singular A string used as the property name when your API endpoint returns an array. By default, the singular value is the name of the model. Note: this value can be set on an API or a model. String"
    },
    {
        "name": "ArrowModelFields",
        "id": "ArrowModelFields-platform",
        "url": "ArrowModelFields",
        "type": "platform",
        "content": "ArrowModelFields Object representing one field in the model's schema. You must define the type key. All other keys are optional. "
    },
    {
        "id": "ArrowModelFields-property-custom-platform",
        "url": "ArrowModelFields-property-custom",
        "type": "platform",
        "name": "ArrowModelFields.custom",
        "content": "ArrowModelFields.custom custom This property should be set to true if you are defining a custom field. A custom field is one that does not exist in the underlying data source for the connector you specified. Boolean"
    },
    {
        "id": "ArrowModelFields-property-default-platform",
        "url": "ArrowModelFields-property-default",
        "type": "platform",
        "name": "ArrowModelFields.default",
        "content": "ArrowModelFields.default default The default value for the field. Any"
    },
    {
        "id": "ArrowModelFields-property-description-platform",
        "url": "ArrowModelFields-property-description",
        "type": "platform",
        "name": "ArrowModelFields.description",
        "content": "ArrowModelFields.description description Description of the field, which is used in the generation of the API documentation. Any"
    },
    {
        "id": "ArrowModelFields-property-get-platform",
        "url": "ArrowModelFields-property-get",
        "type": "platform",
        "name": "ArrowModelFields.get",
        "content": "ArrowModelFields.get get A function used to set the value of a property that will be sent to the client. This property is useful if you want to define a custom field where the value is derived. The function is passed the value of the property, name of the property and the model instance. Return the value you want to return to the client. Function"
    },
    {
        "id": "ArrowModelFields-property-maxlength-platform",
        "url": "ArrowModelFields-property-maxlength",
        "type": "platform",
        "name": "ArrowModelFields.maxlength",
        "content": "ArrowModelFields.maxlength maxlength The max length of the field. Number"
    },
    {
        "id": "ArrowModelFields-property-model-platform",
        "url": "ArrowModelFields-property-model",
        "type": "platform",
        "name": "ArrowModelFields.model",
        "content": "ArrowModelFields.model model Model name of the field property. This is either the logical name of a custom model or a connector model name in the form connector/model_name (e.g., appc.mysql/employee) String"
    },
    {
        "id": "ArrowModelFields-property-name-platform",
        "url": "ArrowModelFields-property-name",
        "type": "platform",
        "name": "ArrowModelFields.name",
        "content": "ArrowModelFields.name name Used if the model field name is different than the field name in the connectors model or the underlying data source for the field name. For example, if my model field is first_name and the column in a MySQL database is fname, the value of the name property should be fname. String"
    },
    {
        "id": "ArrowModelFields-property-readonly-platform",
        "url": "ArrowModelFields-property-readonly",
        "type": "platform",
        "name": "ArrowModelFields.readonly",
        "content": "ArrowModelFields.readonly readonly If true the field will be read-only and any attempt to write the field value will fail. Boolean false"
    },
    {
        "id": "ArrowModelFields-property-required-platform",
        "url": "ArrowModelFields-property-required",
        "type": "platform",
        "name": "ArrowModelFields.required",
        "content": "ArrowModelFields.required required Specifies whether the field is required or not. Set to true if the field is required. Boolean false"
    },
    {
        "id": "ArrowModelFields-property-set-platform",
        "url": "ArrowModelFields-property-set",
        "type": "platform",
        "name": "ArrowModelFields.set",
        "content": "ArrowModelFields.set set A function used to set the value of a property that will be sent to the connector. The function is passed the value of the property, name of the property and the model instance. Return the value you want to return to the connector. Function"
    },
    {
        "id": "ArrowModelFields-property-type-platform",
        "url": "ArrowModelFields-property-type",
        "type": "platform",
        "name": "ArrowModelFields.type",
        "content": "ArrowModelFields.type type The field type (e.g., string). Type can be any valid JavaScript primitive type. Type can be specified as a string (e.g., string) or by the type class (e.g., String). String"
    },
    {
        "id": "ArrowModelFields-property-validator-platform",
        "url": "ArrowModelFields-property-validator",
        "type": "platform",
        "name": "ArrowModelFields.validator",
        "content": "ArrowModelFields.validator validator A function or regular expression that validates the value of the field. The function is passed the data to validate and should return either null or undefined if the validation succeeds. Any other return value means the validation failed, and the return value will be used in the exception message. If a regular expression is used, it should evaluate to either true or false. Function/RegExp"
    },
    {
        "name": "ArrowModelMetadata",
        "id": "ArrowModelMetadata-platform",
        "url": "ArrowModelMetadata",
        "type": "platform",
        "content": "ArrowModelMetadata A dictionary describing the join operation for composite models. "
    },
    {
        "id": "ArrowModelMetadata-property-inner_join-platform",
        "url": "ArrowModelMetadata-property-inner_join",
        "type": "platform",
        "name": "ArrowModelMetadata.inner_join",
        "content": "ArrowModelMetadata.inner_join inner_join Performs an inner join, where only records that have matches are returned. ArrowJoinObject"
    },
    {
        "id": "ArrowModelMetadata-property-left_join-platform",
        "url": "ArrowModelMetadata-property-left_join",
        "type": "platform",
        "name": "ArrowModelMetadata.left_join",
        "content": "ArrowModelMetadata.left_join left_join Performs a left join, where all models in the primary model are returned regardless if a match was found in the secondary models. ArrowJoinObject"
    },
    {
        "name": "ArrowJoinObject",
        "id": "ArrowJoinObject-platform",
        "url": "ArrowJoinObject",
        "type": "platform",
        "content": "ArrowJoinObject Object describing the join operation. "
    },
    {
        "id": "ArrowJoinObject-property-join_properties-platform",
        "url": "ArrowJoinObject-property-join_properties",
        "type": "platform",
        "name": "ArrowJoinObject.join_properties",
        "content": "ArrowJoinObject.join_properties join_properties Collection of key-value pairs that determine the keys in each model to perform the join operation. The key is the property of the model defined in this object and the value is the property to join in another model (or the main model for left joins). Object"
    },
    {
        "id": "ArrowJoinObject-property-model-platform",
        "url": "ArrowJoinObject-property-model",
        "type": "platform",
        "name": "ArrowJoinObject.model",
        "content": "ArrowJoinObject.model model Name of the secondary model to join with this model. String"
    },
    {
        "id": "ArrowJoinObject-property-multiple-platform",
        "url": "ArrowJoinObject-property-multiple",
        "type": "platform",
        "name": "ArrowJoinObject.multiple",
        "content": "ArrowJoinObject.multiple multiple Determines if the match is one-to-one (false) or one-to-many (true). Boolean false"
    },
    {
        "name": "Arrow.ORMError",
        "id": "Arrow.ORMError-platform",
        "url": "Arrow.ORMError",
        "type": "platform",
        "content": "Arrow.ORMError JavaScript Error object that will capture a stack trace. "
    },
    {
        "id": "Arrow.ORMError-property-message-platform",
        "url": "Arrow.ORMError-property-message",
        "type": "platform",
        "name": "Arrow.ORMError.message",
        "content": "Arrow.ORMError.message message Error message. String"
    },
    {
        "id": "Arrow.ORMError-property-stack-platform",
        "url": "Arrow.ORMError-property-stack",
        "type": "platform",
        "name": "Arrow.ORMError.stack",
        "content": "Arrow.ORMError.stack stack Stack trace captured when the error occurred. String"
    },
    {
        "id": "Arrow.ORMError-method-ORMError-platform",
        "url": "Arrow.ORMError-method-ORMError",
        "type": "platform",
        "name": "Arrow.ORMError.ORMError",
        "content": "Arrow.ORMError.ORMError ORMError Constructor. message String Error message. return Arrow.ORMError "
    },
    {
        "name": "Arrow.ValidationError",
        "id": "Arrow.ValidationError-platform",
        "url": "Arrow.ValidationError",
        "type": "platform",
        "content": "Arrow.ValidationError JavaScript Error object that will capture a stack trace. "
    },
    {
        "id": "Arrow.ValidationError-property-field-platform",
        "url": "Arrow.ValidationError-property-field",
        "type": "platform",
        "name": "Arrow.ValidationError.field",
        "content": "Arrow.ValidationError.field field Name of the field that failed validation. String"
    },
    {
        "id": "Arrow.ValidationError-property-message-platform",
        "url": "Arrow.ValidationError-property-message",
        "type": "platform",
        "name": "Arrow.ValidationError.message",
        "content": "Arrow.ValidationError.message message Error message. String"
    },
    {
        "id": "Arrow.ValidationError-property-stack-platform",
        "url": "Arrow.ValidationError-property-stack",
        "type": "platform",
        "name": "Arrow.ValidationError.stack",
        "content": "Arrow.ValidationError.stack stack Stack trace captured when the error occurred. String"
    },
    {
        "id": "Arrow.ValidationError-method-ValidationError-platform",
        "url": "Arrow.ValidationError-method-ValidationError",
        "type": "platform",
        "name": "Arrow.ValidationError.ValidationError",
        "content": "Arrow.ValidationError.ValidationError ValidationError Constructor. field String Field name that failed validation. message String Error message. return Arrow.ValidationError "
    },
    {
        "name": "Arrow.Capabilities",
        "id": "Arrow.Capabilities-platform",
        "url": "Arrow.Capabilities",
        "type": "platform",
        "content": "Arrow.Capabilities Defines various connector specific capabilities; these are used by the validator to help developer's add new functionality to their connectors. "
    },
    {
        "id": "Arrow.Capabilities-property-AddsCustomTypes-platform",
        "url": "Arrow.Capabilities-property-AddsCustomTypes",
        "type": "platform",
        "name": "Arrow.Capabilities.AddsCustomTypes",
        "content": "Arrow.Capabilities.AddsCustomTypes AddsCustomTypes Connectors can provide custom types of objects, such as a MongoDB ObjectID. String 'AddsCustomTypes'"
    },
    {
        "id": "Arrow.Capabilities-property-AuthenticatesThroughConnector-platform",
        "url": "Arrow.Capabilities-property-AuthenticatesThroughConnector",
        "type": "platform",
        "name": "Arrow.Capabilities.AuthenticatesThroughConnector",
        "content": "Arrow.Capabilities.AuthenticatesThroughConnector AuthenticatesThroughConnector In addition to (or in place of) authenticating users in Arrow, the connector itself can validate a user when a request is made to one of the connector's exposed methods. This is done through the user of headers. For example, the Salesforce connector allows you to pass a Salesforce username, password, and token, or an access token. Then all queries are made as this provided user, allowing the connector to leverage Salesforce's access controls very easily. String 'AuthenticatesThroughConnector'"
    },
    {
        "id": "Arrow.Capabilities-property-CanCreate-platform",
        "url": "Arrow.Capabilities-property-CanCreate",
        "type": "platform",
        "name": "Arrow.Capabilities.CanCreate",
        "content": "Arrow.Capabilities.CanCreate CanCreate Enables a \"create\" method on this connector's models. String 'CanCreate'"
    },
    {
        "id": "Arrow.Capabilities-property-CanDelete-platform",
        "url": "Arrow.Capabilities-property-CanDelete",
        "type": "platform",
        "name": "Arrow.Capabilities.CanDelete",
        "content": "Arrow.Capabilities.CanDelete CanDelete Enables several methods such as delete and deleteAll on this connector's models. String 'CanDelete'"
    },
    {
        "id": "Arrow.Capabilities-property-CanRetrieve-platform",
        "url": "Arrow.Capabilities-property-CanRetrieve",
        "type": "platform",
        "name": "Arrow.Capabilities.CanRetrieve",
        "content": "Arrow.Capabilities.CanRetrieve CanRetrieve Enables several methods such as findAll, findByID, or query on this connector's models. String 'CanRetrieve'"
    },
    {
        "id": "Arrow.Capabilities-property-CanUpdate-platform",
        "url": "Arrow.Capabilities-property-CanUpdate",
        "type": "platform",
        "name": "Arrow.Capabilities.CanUpdate",
        "content": "Arrow.Capabilities.CanUpdate CanUpdate Enables an \"update\" method on this connector's models. String 'CanUpdate'"
    },
    {
        "id": "Arrow.Capabilities-property-ConnectsToADataSource-platform",
        "url": "Arrow.Capabilities-property-ConnectsToADataSource",
        "type": "platform",
        "name": "Arrow.Capabilities.ConnectsToADataSource",
        "content": "Arrow.Capabilities.ConnectsToADataSource ConnectsToADataSource Specifies that the first time the connector is used, it will need to connect to a particular data source before it can be used. For example, the MySQL connector connects to a MySQL server. String 'ConnectsToADataSource'"
    },
    {
        "id": "Arrow.Capabilities-property-ContainsModels-platform",
        "url": "Arrow.Capabilities-property-ContainsModels",
        "type": "platform",
        "name": "Arrow.Capabilities.ContainsModels",
        "content": "Arrow.Capabilities.ContainsModels ContainsModels Connectors can contain static models, defined in their \"models\" directory. String 'ContainsModels'"
    },
    {
        "id": "Arrow.Capabilities-property-GeneratesModels-platform",
        "url": "Arrow.Capabilities-property-GeneratesModels",
        "type": "platform",
        "name": "Arrow.Capabilities.GeneratesModels",
        "content": "Arrow.Capabilities.GeneratesModels GeneratesModels Connectors can dynamically create models based upon loaded schema from their data sources. String 'GeneratesModels'"
    },
    {
        "id": "Arrow.Capabilities-property-ValidatesConfiguration-platform",
        "url": "Arrow.Capabilities-property-ValidatesConfiguration",
        "type": "platform",
        "name": "Arrow.Capabilities.ValidatesConfiguration",
        "content": "Arrow.Capabilities.ValidatesConfiguration ValidatesConfiguration Define validation on your validation files to ensure you get the data you need to run. For example, a MongoDB connector could require a valid URL. String 'ValidatesConfiguration'"
    },
    {
        "name": "Arrow.API",
        "id": "Arrow.API-platform",
        "url": "Arrow.API",
        "type": "platform",
        "content": "Arrow.API An API provides a way for a client to access your application, execute custom logic and internally access the application's models and APIs, then return data back to the client application. Use an API to perform a custom operation on model data that is not exposed as one of the standardized methods. Create an API Endpoint To create an API, define a new API instance with the API constructor, then add the instance to the server instance and bind the API instance to the Arrow server's app instance. Pass an implementation object, Arrow configuration object and Arrow instance to the constructor. Set any API properties on the implementation object (except the ones marked non-creation), but the following properties are required to be set: action, description, group and path. After creating the API instance, add the API instance to the Arrow instance by calling the Arrow instance's addAPI() method, then call the API instance's bind() method and pass it an app instance. var Arrow = require('arrow'); var server = new Arrow(); // since the API relies on a model, // need to wait for the model to be loaded before creating the API server.on('starting', function() { var fooAPI = new Arrow.API({ group: 'foo', path: '/api/foo/', method: 'GET', description: 'Get all the Foo objects', model: 'foo', action: function(request, response, next) { request.model.findAll(function(err, results) { if (err) { next(err); } else { next(null, results); } }); } }, server.config, server); server.add(fooAPI); fooAPI.bind(server.app); } server.start(); Alternatively, you can create an API definition file that is automatically loaded by the Arrow Project. For details, see the Arrow APIs guide. Invoke an API Endpoint To invoke an API endpoint within the application, use the Arrow instance's getAPI() method. An API is identified by its path and method (HTTP verb), or its nickname if you defined one when creating the API. After retrieving the API instance, call its execute() method. server.getAPI('foo', 'GET').execute({}, function (err, results) { if (err) { server.logger.error(err); } else { // do something with results } }); "
    },
    {
        "id": "Arrow.API-property-action-platform",
        "url": "Arrow.API-property-action",
        "type": "platform",
        "name": "Arrow.API.action",
        "content": "Arrow.API.action action Logic to execute when the endpoint is invoked by the client application. The function is passed a request object, response object and next() function. You should always make sure that the action function calls the next() function regardless if the result is a success or an error. Function"
    },
    {
        "id": "Arrow.API-property-after-platform",
        "url": "Arrow.API-property-after",
        "type": "platform",
        "name": "Arrow.API.after",
        "content": "Arrow.API.after after One or more Blocks to be executed after the request. Blocks are referenced by their name property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. Specify either after or post but not both. String/Array"
    },
    {
        "id": "Arrow.API-property-app-platform",
        "url": "Arrow.API-property-app",
        "type": "platform",
        "name": "Arrow.API.app",
        "content": "Arrow.API.app app Express app instance. Object"
    },
    {
        "id": "Arrow.API-property-before-platform",
        "url": "Arrow.API-property-before",
        "type": "platform",
        "name": "Arrow.API.before",
        "content": "Arrow.API.before before One or more Blocks to be executed before the request. Blocks are referenced by their name property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. Specify either before or pre but not both. String/Array"
    },
    {
        "id": "Arrow.API-property-config-platform",
        "url": "Arrow.API-property-config",
        "type": "platform",
        "name": "Arrow.API.config",
        "content": "Arrow.API.config config Configuration object used to initialize the API instance. Object"
    },
    {
        "id": "Arrow.API-property-constructor-platform",
        "url": "Arrow.API-property-constructor",
        "type": "platform",
        "name": "Arrow.API.constructor",
        "content": "Arrow.API.constructor constructor Custom constructor to execute custom initialization logic. The new API instance is passed to this in the function. Function"
    },
    {
        "id": "Arrow.API-property-description-platform",
        "url": "Arrow.API-property-description",
        "type": "platform",
        "name": "Arrow.API.description",
        "content": "Arrow.API.description description Human-readable description of the API, which is used by the generated API documentation. String"
    },
    {
        "id": "Arrow.API-property-filename-platform",
        "url": "Arrow.API-property-filename",
        "type": "platform",
        "name": "Arrow.API.filename",
        "content": "Arrow.API.filename filename File used to load the API instance. String"
    },
    {
        "id": "Arrow.API-property-group-platform",
        "url": "Arrow.API-property-group",
        "type": "platform",
        "name": "Arrow.API.group",
        "content": "Arrow.API.group group Logical name for the API grouping. String"
    },
    {
        "id": "Arrow.API-property-method-platform",
        "url": "Arrow.API-property-method",
        "type": "platform",
        "name": "Arrow.API.method",
        "content": "Arrow.API.method method HTTP verb: GET, PUT, POST or DELETE. String"
    },
    {
        "id": "Arrow.API-property-model-platform",
        "url": "Arrow.API-property-model",
        "type": "platform",
        "name": "Arrow.API.model",
        "content": "Arrow.API.model model The model to use for the request. Passed as the model property in the request and response objects of the action function. Arrow.Model"
    },
    {
        "id": "Arrow.API-property-nickname-platform",
        "url": "Arrow.API-property-nickname",
        "type": "platform",
        "name": "Arrow.API.nickname",
        "content": "Arrow.API.nickname nickname Alternative identifier for the API. By default, the API is identified by its path and HTTP verb. If you do not specify a nickname, this property will be set to the path. String"
    },
    {
        "id": "Arrow.API-property-parameters-platform",
        "url": "Arrow.API-property-parameters",
        "type": "platform",
        "name": "Arrow.API.parameters",
        "content": "Arrow.API.parameters parameters Input parameters required to execute the API endpoint. This is an object of key-value pairs, where the key is the name of the parameter and the value is an object with the following properties: optional (Boolean): Determines if the parameter is optional (true) or required (false). type (String): the type of input parameter: path or query. description (String): used for generating API documentation. Object"
    },
    {
        "id": "Arrow.API-property-path-platform",
        "url": "Arrow.API-property-path",
        "type": "platform",
        "name": "Arrow.API.path",
        "content": "Arrow.API.path path API endpoint. String"
    },
    {
        "id": "Arrow.API-property-plural-platform",
        "url": "Arrow.API-property-plural",
        "type": "platform",
        "name": "Arrow.API.plural",
        "content": "Arrow.API.plural plural A string used as the property name when your API endpoint returns an array. By default, the plural value is the plural of the model name. For example, if your model is named car, the default plural would be cars. String"
    },
    {
        "id": "Arrow.API-property-post-platform",
        "url": "Arrow.API-property-post",
        "type": "platform",
        "name": "Arrow.API.post",
        "content": "Arrow.API.post post One or more Blocks to be executed after the request. Blocks are referenced by their name property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. Specify either after or post but not both. String/Array"
    },
    {
        "id": "Arrow.API-property-pre-platform",
        "url": "Arrow.API-property-pre",
        "type": "platform",
        "name": "Arrow.API.pre",
        "content": "Arrow.API.pre pre One or more Blocks to be executed before the request. Blocks are referenced by their name property. If you want to execute multiple blocks, you should specify them as an array of block names. If multiple blocks are specified, they are executed in the order specified. Specify either before or pre but not both. String/Array"
    },
    {
        "id": "Arrow.API-property-response-platform",
        "url": "Arrow.API-property-response",
        "type": "platform",
        "name": "Arrow.API.response",
        "content": "Arrow.API.response response The model to use for the response. Only use the property if your request and response models are different. Passed as the modelResponse property in the request and response objects of the action function. Arrow.Model"
    },
    {
        "id": "Arrow.API-property-route-platform",
        "url": "Arrow.API-property-route",
        "type": "platform",
        "name": "Arrow.API.route",
        "content": "Arrow.API.route route Express route instance that binds the endpoint to the logic. Object"
    },
    {
        "id": "Arrow.API-property-singular-platform",
        "url": "Arrow.API-property-singular",
        "type": "platform",
        "name": "Arrow.API.singular",
        "content": "Arrow.API.singular singular A string used as the property name when your API endpoint returns a single record. By default, the singular value is the name of the model. String"
    },
    {
        "id": "Arrow.API-property-timestamp-platform",
        "url": "Arrow.API-property-timestamp",
        "type": "platform",
        "name": "Arrow.API.timestamp",
        "content": "Arrow.API.timestamp timestamp Datetime when the route was last synced. String"
    },
    {
        "id": "Arrow.API-method-constructor-platform",
        "url": "Arrow.API-method-constructor",
        "type": "platform",
        "name": "Arrow.API.constructor",
        "content": "Arrow.API.constructor constructor Creates a new API instance. impl Dictionary Implementation object. Set any API properties on the object except the ones marked non-creation. The following properties must be set: action, description, group and path. config Object Arrow configuration object. arrow Arrow Arrow instance. return Arrow.API "
    },
    {
        "id": "Arrow.API-method-bind-platform",
        "url": "Arrow.API-method-bind",
        "type": "platform",
        "name": "Arrow.API.bind",
        "content": "Arrow.API.bind bind Binds this API to the app instance app Object App instance. return void"
    },
    {
        "id": "Arrow.API-method-execute-platform",
        "url": "Arrow.API-method-execute",
        "type": "platform",
        "name": "Arrow.API.execute",
        "content": "Arrow.API.execute execute Executes this API with the specified parameters. Results are sent to to the callback. params Object API parameters. callback Function Callback passed an Error object (or null if successful) and the results. return void"
    },
    {
        "id": "Arrow.API-method-executeAfterEvent-platform",
        "url": "Arrow.API-method-executeAfterEvent",
        "type": "platform",
        "name": "Arrow.API.executeAfterEvent",
        "content": "Arrow.API.executeAfterEvent executeAfterEvent Handles sending pubsub event if afterEvent property is set on the API req Object resp Object callback Object return void"
    },
    {
        "id": "Arrow.API-method-executeBeforeEvent-platform",
        "url": "Arrow.API-method-executeBeforeEvent",
        "type": "platform",
        "name": "Arrow.API.executeBeforeEvent",
        "content": "Arrow.API.executeBeforeEvent executeBeforeEvent Handles sending pubsub event if beforeEvent property is set on the API req Object resp Object callback Object return void"
    },
    {
        "id": "Arrow.API-method-executeEventTransform-platform",
        "url": "Arrow.API-method-executeEventTransform",
        "type": "platform",
        "name": "Arrow.API.executeEventTransform",
        "content": "Arrow.API.executeEventTransform executeEventTransform Handles event transformation if a eventTransformer property is set on the API when Object name Object data Object req Object resp Object callback Object return void"
    },
    {
        "id": "Arrow.API-method-extend-platform",
        "url": "Arrow.API-method-extend",
        "type": "platform",
        "name": "Arrow.API.extend",
        "content": "Arrow.API.extend extend Returns a constructor function to generate a new API by extending this instance. Pass the constructor an Arrow configuration object, Arrow instance, and optionally a filename. impl Dictionary Implementation object. return Function "
    },
    {
        "id": "Arrow.API-method-getRequestURL-platform",
        "url": "Arrow.API-method-getRequestURL",
        "type": "platform",
        "name": "Arrow.API.getRequestURL",
        "content": "Arrow.API.getRequestURL getRequestURL for a request, return a url req Object return void"
    },
    {
        "id": "Arrow.API-method-reload-platform",
        "url": "Arrow.API-method-reload",
        "type": "platform",
        "name": "Arrow.API.reload",
        "content": "Arrow.API.reload reload Reloads the API for the Arrow instance. arrow Object Arrow instance. callback Function Callback passed an Error object (or null if successful) and the reloaded API. return void"
    },
    {
        "id": "Arrow.API-method-remove-platform",
        "url": "Arrow.API-method-remove",
        "type": "platform",
        "name": "Arrow.API.remove",
        "content": "Arrow.API.remove remove Removes the API from the Arrow instance. arrow Object Arrow instance. callback Function Callback passed an Error object (or null if successful) and the removed API. return void"
    },
    {
        "name": "Arrow",
        "id": "Arrow-platform",
        "url": "Arrow",
        "type": "platform",
        "content": "Arrow The top-level module for managing Arrow Projects. An Arrow Project is a Node.js server application that runs in the API Runtime Services. To create a server, load the Arrow module, then use the Arrow constructor to create an Arrow instance and invoke its start() method. var Arrow = require('arrow'), server = new Arrow(); // Add event listeners or invoke APIs on the Arrow instance var myModel = Arrow.createModel('foo', {...}); server.addModel(myModel); server.on('starting', function () { server.logger.trace('Starting server...'); }); server.start(); Components An Arrow Project is comprised of several components. You can either define the components using JavaScript files placed in specific directories, which are automatically loaded when creating an Arrow instance, or programmatically create components after initializing an Arrow instance. For information about the project structure of Arrow Projects, see Arrow Builder guides. Express and Third-Party Middleware Arrow uses Express for its web framework. By default, Arrow creates an Express app instance when creating an Arrow instance, then binds its API endpoints to the app instance. You can access the Express app instance using the app property of the Arrow instance, then invoke Express API calls on the app instance. server.app.all('/api/*', function (req, res, next) { req.server.logger.info('Intercepted the request!'); next(); }); Do not pass the error code to the response object's send() method. Use the status() method instead. If you pass a number value to the send() method, an error will be thrown. // Throws an error res.send(500); // Invoke the following methods instead. res.status(500).send('Uh oh. Something bad happened.'); Arrow also loads the body-parser, cookie-parser and busboy modules to provide additional parsing capabilities as well as the compression module. For Express template engines, Arrow uses ejs, handlebars, marked and react modules. Access the template engines using the Arrow.Middleware API. Connectors Connectors allow an Arrow Project to access data stored in an external source. Connectors are structured like Arrow Projects where they have their own models, dependencies and configuration files. You can either use an existing connector or create your own connector. Models Models provide an interface for the Arrow Project to access data. By default, the application will generate standardized endpoints for a client to access the data from the Arrow Project. APIs APIs provide a way for a client to access your application, execute custom logic and internally access the application's models, then return data back to the client application. Create an API to execute a custom operation with model data. Blocks Blocks are functions that run before or after an API endpoint is executed. They can be used to modify the API request, to modify the API response or to execute common tasks like audit logging, caching, rate limiting or recording analytics. Multiple blocks can be executed before or after an API request. Blocks are optional. Webs Webs are endpoints that render HTML to the client application. Webs are comprised of routes, renderers, templates and static assets. Routes provide the endpoint to access the Web and logic to access the data. Renderers (or template engines) apply local data to your templates to generate HTML. To access a renderer or create your own renderer, use the Arrow.Middleware API. Templates are the files you want to render. Place all templates in the ./web/views folder with an appropriate extension--either ejs, hbs, html, jsx, md or a custom one that you can define. API Builder Tools selects the renderer engine based on the file extension. Place all assets, such as images, style sheets, static HTML files, etc., in the ./web/public folder. Logger The Arrow.Logger provides a wrapper for bunyan, a JSON logging utility. By default, API Builder Tools creates a logger instance, which can be accessed using the logger property of the Arrow instance. server.logger.trace('breadcrumbs...'); server.logger.info('%s %s', key, value); server.logger.error(err); Lifecycle The following sections describe the sequence of events that occur when initializing and starting an Arrow Project, then making requests to the server. Initialization Sequence When creating a new Arrow instance, the following events occur: Loads the configuration files. Creates an Express app instance unless you pass loadOnly as true in the constructor. Creates the API Builder Console unless its disabled. Creates a Logger instance. Registers the connectors. Loads the model and block files. Loads API and Web files and binds the endpoints to the Express app instance. Fires the loaded event. At this point, you may add event listeners or programmatically add any other Arrow components. Startup Sequence After invoking the start() method on the Arrow instance: Fires the starting event. Registers and binds the model's standardized API endpoints to the Express app instance. Fires the listening event. Binds the server to a port. Fires the listen event. Fires the started event. The client can now make requests to the server. Request Sequence When a client makes a request to the Arrow Project, API Builder Tools first authenticates the request, then proceeds by making a series of middleware calls, where the next() function needs to be called after completing each operation. Authenticate the request. If you are using a custom security plugin, calls the matchURL() and validateRequest() methods if defined. For Models, calls the Connector's startRequest(), loginRequired() and login() methods if defined. Calls any defined pre-Blocks. Calls the API, Model or Router logic. Calls any defined post-Blocks. For Models, calls the Connector's endRequest() method if defined. Fires the after event. Arrow Middleware Calls Each Arrow middleware call (action or execute property) is passed the same three objects: Express Request object Express Response object Middleware function to call next. Always call the next() function to execute the next middleware call in the sequence. In addition to the Express APIs, the request object is also passed a reference to the Arrow instance as the server property. Use the instance to invoke APIs, such as accessing model data or invoking an API endpoint. Both the request and response objects are passed a reference to the Logger instance as the logger property to log messages. For Arrow.API instances, the request and response objects are also passed the model and responseModel properties, which references the models passed to the API constructor. "
    },
    {
        "id": "Arrow-property--platform",
        "url": "Arrow-property-",
        "type": "platform",
        "name": "Arrow.",
        "content": "Arrow. Disconnect all connectors if provided a disconnect method Delete the models associated with the connector (generated and fs) so that we don't run into duplicate errors when loadComponents tries to load fs models. Delete the _createdModelsFromSchema flag so arrow-orm knows to re-grab models from schema (generated). Delete connector.started so startConnector() will kick off Object"
    },
    {
        "id": "Arrow-property-apis-platform",
        "url": "Arrow-property-apis",
        "type": "platform",
        "name": "Arrow.apis",
        "content": "Arrow.apis apis APIs loaded and added to the instance. Array"
    },
    {
        "id": "Arrow-property-app-platform",
        "url": "Arrow-property-app",
        "type": "platform",
        "name": "Arrow.app",
        "content": "Arrow.app app Express app instance. Object"
    },
    {
        "id": "Arrow-property-blocks-platform",
        "url": "Arrow-property-blocks",
        "type": "platform",
        "name": "Arrow.blocks",
        "content": "Arrow.blocks blocks Blocks loaded or added to the instance. Array"
    },
    {
        "id": "Arrow-property-config-platform",
        "url": "Arrow-property-config",
        "type": "platform",
        "name": "Arrow.config",
        "content": "Arrow.config config Configuration object used to initialize the server instance. Object"
    },
    {
        "id": "Arrow-property-express-platform",
        "url": "Arrow-property-express",
        "type": "platform",
        "name": "Arrow.express",
        "content": "Arrow.express express Express module instance. Object"
    },
    {
        "id": "Arrow-property-ignoreDuplicateModels-platform",
        "url": "Arrow-property-ignoreDuplicateModels",
        "type": "platform",
        "name": "Arrow.ignoreDuplicateModels",
        "content": "Arrow.ignoreDuplicateModels ignoreDuplicateModels Set to true to ignore duplicate models. Boolean"
    },
    {
        "id": "Arrow-property-inProduction-platform",
        "url": "Arrow-property-inProduction",
        "type": "platform",
        "name": "Arrow.inProduction",
        "content": "Arrow.inProduction inProduction Set to true if the application was deployed to the production environment. Boolean"
    },
    {
        "id": "Arrow-property-logger-platform",
        "url": "Arrow-property-logger",
        "type": "platform",
        "name": "Arrow.logger",
        "content": "Arrow.logger logger Logger instance. Arrow.Logger"
    },
    {
        "id": "Arrow-property-middleware-platform",
        "url": "Arrow-property-middleware",
        "type": "platform",
        "name": "Arrow.middleware",
        "content": "Arrow.middleware middleware Middleware instance. Arrow.Middleware"
    },
    {
        "id": "Arrow-property-models-platform",
        "url": "Arrow-property-models",
        "type": "platform",
        "name": "Arrow.models",
        "content": "Arrow.models models Models loaded or added to the instance. Array"
    },
    {
        "id": "Arrow-property-port-platform",
        "url": "Arrow-property-port",
        "type": "platform",
        "name": "Arrow.port",
        "content": "Arrow.port port Port number used by the server instance. Number"
    },
    {
        "id": "Arrow-property-routes-platform",
        "url": "Arrow-property-routes",
        "type": "platform",
        "name": "Arrow.routes",
        "content": "Arrow.routes routes Routes loaded to the instance. Array"
    },
    {
        "id": "Arrow-method-constructor-platform",
        "url": "Arrow-method-constructor",
        "type": "platform",
        "name": "Arrow.constructor",
        "content": "Arrow.constructor constructor Loads the configuration files in the ./conf folder and initializes an Arrow instance. config Object Additional configuration parameters, which are merged with the configuration files. loadOnly Boolean Set to true to only load the Arrow components. Does not create the Express app instance or starts the admin console. return Arrow "
    },
    {
        "id": "Arrow-method-addAPI-platform",
        "url": "Arrow-method-addAPI",
        "type": "platform",
        "name": "Arrow.addAPI",
        "content": "Arrow.addAPI addAPI Adds an API on this instance. api Arrow.API API to add. return void"
    },
    {
        "id": "Arrow-method-addBlock-platform",
        "url": "Arrow-method-addBlock",
        "type": "platform",
        "name": "Arrow.addBlock",
        "content": "Arrow.addBlock addBlock Adds the block(s) on this instance. block Arrow.Block/Array Block(s) to add. return void"
    },
    {
        "id": "Arrow-method-addModel-platform",
        "url": "Arrow-method-addModel",
        "type": "platform",
        "name": "Arrow.addModel",
        "content": "Arrow.addModel addModel Adds a model class(es) on this instance. model Arrow.Model/Array Model class(es) to add. return void"
    },
    {
        "id": "Arrow-method-createAPIsFromModel-platform",
        "url": "Arrow-method-createAPIsFromModel",
        "type": "platform",
        "name": "Arrow.createAPIsFromModel",
        "content": "Arrow.createAPIsFromModel createAPIsFromModel Generates the standardized APIs from a particular model. model Object return void"
    },
    {
        "id": "Arrow-method-createAPIsFromModels-platform",
        "url": "Arrow-method-createAPIsFromModels",
        "type": "platform",
        "name": "Arrow.createAPIsFromModels",
        "content": "Arrow.createAPIsFromModels createAPIsFromModels Generates the standardized APIs from all loaded models. return void"
    },
    {
        "id": "Arrow-method-createLogger-platform",
        "url": "Arrow-method-createLogger",
        "type": "platform",
        "name": "Arrow.createLogger",
        "content": "Arrow.createLogger createLogger Creates a logger instance. config Object opts Object Additional initialization options. Refer to the bunyan documentation. return Arrow.Logger "
    },
    {
        "id": "Arrow-method-createModel-platform",
        "url": "Arrow-method-createModel",
        "type": "platform",
        "name": "Arrow.createModel",
        "content": "Arrow.createModel createModel Creates a model class. name String Name of the new Model. definition ArrowModelDefinition Model definition object. return Arrow.Model "
    },
    {
        "id": "Arrow-method-definePubSub-platform",
        "url": "Arrow-method-definePubSub",
        "type": "platform",
        "name": "Arrow.definePubSub",
        "content": "Arrow.definePubSub definePubSub Prepares appc-pubsub for usage within Arrow. Warns the user if it is not installed locally to their project, or not configured properly. appPkg Object return void"
    },
    {
        "id": "Arrow-method-endRequestTransaction-platform",
        "url": "Arrow-method-endRequestTransaction",
        "type": "platform",
        "name": "Arrow.endRequestTransaction",
        "content": "Arrow.endRequestTransaction endRequestTransaction called at the end of a request once it's done sending req Object resp Object return void"
    },
    {
        "id": "Arrow-method-executeSecurityMiddleware-platform",
        "url": "Arrow-method-executeSecurityMiddleware",
        "type": "platform",
        "name": "Arrow.executeSecurityMiddleware",
        "content": "Arrow.executeSecurityMiddleware executeSecurityMiddleware Creates and executes a security middleware call, which authenticates the request. req Object Request object. resp Object Response object. next Function Next function to call. return void"
    },
    {
        "id": "Arrow-method-get-platform",
        "url": "Arrow-method-get",
        "type": "platform",
        "name": "Arrow.get",
        "content": "Arrow.get get Returns a configuration value for the key (or a provided default value if not found). key String Key to retrieve. def Any Default value to return if the key cannot be found. return void"
    },
    {
        "id": "Arrow-method-getAPI-platform",
        "url": "Arrow-method-getAPI",
        "type": "platform",
        "name": "Arrow.getAPI",
        "content": "Arrow.getAPI getAPI Returns an API for the given path and optional method in the case where more than one method. may be invoked on a path. If you defined a nickname when creating the API instance, you may pass the nickname to the function rather than the path and method. path String Path of the API (or its nickname). method String HTTP verb. return Arrow.API "
    },
    {
        "id": "Arrow-method-getAPIs-platform",
        "url": "Arrow-method-getAPIs",
        "type": "platform",
        "name": "Arrow.getAPIs",
        "content": "Arrow.getAPIs getAPIs Gets an array of APIs available to the instance. return Array "
    },
    {
        "id": "Arrow-method-getBlock-platform",
        "url": "Arrow-method-getBlock",
        "type": "platform",
        "name": "Arrow.getBlock",
        "content": "Arrow.getBlock getBlock Gets a block by name. name String Name of the block to retrieve. failIfMissing Boolean Set to true to throw an error if the block could not be found. return Arrow.Block "
    },
    {
        "id": "Arrow-method-getBlocks-platform",
        "url": "Arrow-method-getBlocks",
        "type": "platform",
        "name": "Arrow.getBlocks",
        "content": "Arrow.getBlocks getBlocks Gets all blocks. return Object ArrayArrow.Block> "
    },
    {
        "id": "Arrow-method-getCodeblock-platform",
        "url": "Arrow-method-getCodeblock",
        "type": "platform",
        "name": "Arrow.getCodeblock",
        "content": "Arrow.getCodeblock getCodeblock Gets a codeblock by name. name String Name of the codeblock to retrieve. failIfMissing Boolean Set to true to throw an error if the codeblock could not be found. return Arrow.Codeblock "
    },
    {
        "id": "Arrow-method-getCodeblocks-platform",
        "url": "Arrow-method-getCodeblocks",
        "type": "platform",
        "name": "Arrow.getCodeblocks",
        "content": "Arrow.getCodeblocks getCodeblocks Gets all codeblocks. return Object Array "
    },
    {
        "id": "Arrow-method-getComponentDir-platform",
        "url": "Arrow-method-getComponentDir",
        "type": "platform",
        "name": "Arrow.getComponentDir",
        "content": "Arrow.getComponentDir getComponentDir Returns the full path of the component directory. type String Component type, that is, api, block, model or route. nmd Boolean Set to true if using a node module. return Object String "
    },
    {
        "id": "Arrow-method-getConnector-platform",
        "url": "Arrow-method-getConnector",
        "type": "platform",
        "name": "Arrow.getConnector",
        "content": "Arrow.getConnector getConnector Gets a connector by name. name String Name of the connector to retrieve. failIfMissing Boolean Set to true to throw an error if the connector could not be found. return void"
    },
    {
        "id": "Arrow-method-getConnectors-platform",
        "url": "Arrow-method-getConnectors",
        "type": "platform",
        "name": "Arrow.getConnectors",
        "content": "Arrow.getConnectors getConnectors Gets a list of registered connectors. return Array "
    },
    {
        "id": "Arrow-method-getEndpoint-platform",
        "url": "Arrow-method-getEndpoint",
        "type": "platform",
        "name": "Arrow.getEndpoint",
        "content": "Arrow.getEndpoint getEndpoint Gets an endpoint by path endpoint String The endpoint to get. ie '/greet' return Object or undefined "
    },
    {
        "id": "Arrow-method-getEndpoints-platform",
        "url": "Arrow-method-getEndpoints",
        "type": "platform",
        "name": "Arrow.getEndpoints",
        "content": "Arrow.getEndpoints getEndpoints Gets all loaded endpoints return Object "
    },
    {
        "id": "Arrow-method-getFlow-platform",
        "url": "Arrow-method-getFlow",
        "type": "platform",
        "name": "Arrow.getFlow",
        "content": "Arrow.getFlow getFlow Gets the flow definition by id. flowId String The id of the flow to retrieve. return Object "
    },
    {
        "id": "Arrow-method-getFlows-platform",
        "url": "Arrow-method-getFlows",
        "type": "platform",
        "name": "Arrow.getFlows",
        "content": "Arrow.getFlows getFlows Gets all the flow definitions availabe to the instance. return Object "
    },
    {
        "id": "Arrow-method-getGlobal-platform",
        "url": "Arrow-method-getGlobal",
        "type": "platform",
        "name": "Arrow.getGlobal",
        "content": "Arrow.getGlobal getGlobal Gets a reference to the first instantiated Arrow server. return Arrow "
    },
    {
        "id": "Arrow-method-getMiddleware-platform",
        "url": "Arrow-method-getMiddleware",
        "type": "platform",
        "name": "Arrow.getMiddleware",
        "content": "Arrow.getMiddleware getMiddleware Returns the middleware instance containing the Express app instance. return Arrow.Middleware "
    },
    {
        "id": "Arrow-method-getModel-platform",
        "url": "Arrow-method-getModel",
        "type": "platform",
        "name": "Arrow.getModel",
        "content": "Arrow.getModel getModel Gets a model by name. name String Name of the model to retrieve. failIfMissing Boolean Set to true to throw an error if the model could not be found. return Arrow.Model "
    },
    {
        "id": "Arrow-method-getModels-platform",
        "url": "Arrow-method-getModels",
        "type": "platform",
        "name": "Arrow.getModels",
        "content": "Arrow.getModels getModels Gets all models availabe to the instance. return Array "
    },
    {
        "id": "Arrow-method-getRoute-platform",
        "url": "Arrow-method-getRoute",
        "type": "platform",
        "name": "Arrow.getRoute",
        "content": "Arrow.getRoute getRoute Gets a route by name. name String Name of the route to retrieve. failIfMissing Boolean Set to true to throw an error if the route could not be found. return Arrow.Router "
    },
    {
        "id": "Arrow-method-inspect-platform",
        "url": "Arrow-method-inspect",
        "type": "platform",
        "name": "Arrow.inspect",
        "content": "Arrow.inspect inspect returns an util.inspect description return void"
    },
    {
        "id": "Arrow-method-isModelDuplicate-platform",
        "url": "Arrow-method-isModelDuplicate",
        "type": "platform",
        "name": "Arrow.isModelDuplicate",
        "content": "Arrow.isModelDuplicate isModelDuplicate returns false if the model name passed in does not exist. It handles the fatal error if the model does exist. At the moment it returns true, but it should stop the server modelName Object return void"
    },
    {
        "id": "Arrow-method-loadApi-platform",
        "url": "Arrow-method-loadApi",
        "type": "platform",
        "name": "Arrow.loadApi",
        "content": "Arrow.loadApi loadApi Loads an API from an API file. The file must exist and be a valid API. No error checking is performed. fn String Filename of the API. cb Function Callback passed an Error object (or null if successful), the API instance, and the API class. return void"
    },
    {
        "id": "Arrow-method-loadBlock-platform",
        "url": "Arrow-method-loadBlock",
        "type": "platform",
        "name": "Arrow.loadBlock",
        "content": "Arrow.loadBlock loadBlock Loads a Block from a Block file. The file must exist and be a valid Block. No error checking is performed. fn String Filename of the Block. cb Function Callback passed an Error object (or null if successful) and the Block class. return void"
    },
    {
        "id": "Arrow-method-loadCodeblock-platform",
        "url": "Arrow-method-loadCodeblock",
        "type": "platform",
        "name": "Arrow.loadCodeblock",
        "content": "Arrow.loadCodeblock loadCodeblock Loads a Codeblock from a Codeblock file. The file must exist and be a valid Codeblock. No error checking is performed. fn String Filename of the Codeblock. cb Function Callback passed an Error object (or null if successful) and the Codeblock class. return void"
    },
    {
        "id": "Arrow-method-loadComponents-platform",
        "url": "Arrow-method-loadComponents",
        "type": "platform",
        "name": "Arrow.loadComponents",
        "content": "Arrow.loadComponents loadComponents Loads all project components. callback Function Callback to execute after loading each component. Passed an Error object if any. skipConnectors Boolean Set to true to not load Connectors. return void"
    },
    {
        "id": "Arrow-method-loadConnector-platform",
        "url": "Arrow-method-loadConnector",
        "type": "platform",
        "name": "Arrow.loadConnector",
        "content": "Arrow.loadConnector loadConnector Loads a Connector from a Connector file. The file must exist and be a valid Connector. No error checking is performed. fn String Filename of the Connector. cb Function Callback passed an Error object (or null if successful) and the Connector class. return void"
    },
    {
        "id": "Arrow-method-loadEndpoint-platform",
        "url": "Arrow-method-loadEndpoint",
        "type": "platform",
        "name": "Arrow.loadEndpoint",
        "content": "Arrow.loadEndpoint loadEndpoint Loads an endpoint from a file. fn string [path to file] cb Function [callback to for error handle] return void"
    },
    {
        "id": "Arrow-method-loadFlow-platform",
        "url": "Arrow-method-loadFlow",
        "type": "platform",
        "name": "Arrow.loadFlow",
        "content": "Arrow.loadFlow loadFlow Loads a Flow from a flow file. The file must exist and be a valid Flow. fn String Filename of the flow. cb Function Callback passed an Error object (or null if successful) and the Flow class. return void"
    },
    {
        "id": "Arrow-method-loadModel-platform",
        "url": "Arrow-method-loadModel",
        "type": "platform",
        "name": "Arrow.loadModel",
        "content": "Arrow.loadModel loadModel Loads a Model from a Model file. The file must exist and be a valid Model. No error checking is performed. fn String Filename of the Model. cb Function Callback passed an Error object (or null if successful) and the Model class. return void"
    },
    {
        "id": "Arrow-method-loadModelsForConnector-platform",
        "url": "Arrow-method-loadModelsForConnector",
        "type": "platform",
        "name": "Arrow.loadModelsForConnector",
        "content": "Arrow.loadModelsForConnector loadModelsForConnector Called by a connector to attempt to load any connector bundled models. connectorName String Name of the connector. module Object Connector module instance. dir String Directory of the connector's models. Default is the connector's models folder. return void"
    },
    {
        "id": "Arrow-method-loadRoute-platform",
        "url": "Arrow-method-loadRoute",
        "type": "platform",
        "name": "Arrow.loadRoute",
        "content": "Arrow.loadRoute loadRoute Loads a Route from a Route file. The file must exist and be a valid Route. No error checking is performed. fn String Filename of the Route. cb Function Callback passed an Error object (or null if successful) and the Route class. return void"
    },
    {
        "id": "Arrow-method-registerConnector-platform",
        "url": "Arrow-method-registerConnector",
        "type": "platform",
        "name": "Arrow.registerConnector",
        "content": "Arrow.registerConnector registerConnector Registers a connector. connector Arrow.Connector Connector to register. return void"
    },
    {
        "id": "Arrow-method-registerModelsForConnector-platform",
        "url": "Arrow-method-registerModelsForConnector",
        "type": "platform",
        "name": "Arrow.registerModelsForConnector",
        "content": "Arrow.registerModelsForConnector registerModelsForConnector Dynamically loads the models into the server if the connector updates them dynamically (i.e. after connect has run and started); connector Object models Object return void"
    },
    {
        "id": "Arrow-method-reload-platform",
        "url": "Arrow-method-reload",
        "type": "platform",
        "name": "Arrow.reload",
        "content": "Arrow.reload reload Reloads any changes found in Models, Blocks, Routes or APIs. callback Function Callback to execute after the reload. return void"
    },
    {
        "id": "Arrow-method-removeAPI-platform",
        "url": "Arrow-method-removeAPI",
        "type": "platform",
        "name": "Arrow.removeAPI",
        "content": "Arrow.removeAPI removeAPI Removes an API. api Arrow.API API to remove. return void"
    },
    {
        "id": "Arrow-method-removeAPIByFilename-platform",
        "url": "Arrow-method-removeAPIByFilename",
        "type": "platform",
        "name": "Arrow.removeAPIByFilename",
        "content": "Arrow.removeAPIByFilename removeAPIByFilename Removes an API from the server. filename String Name of the file of the API to remove. callback Function Callback function passed an Error object (or null if successful). return void"
    },
    {
        "id": "Arrow-method-removeBlock-platform",
        "url": "Arrow-method-removeBlock",
        "type": "platform",
        "name": "Arrow.removeBlock",
        "content": "Arrow.removeBlock removeBlock Removes a block. block Arrow.Block Block to remove. return void"
    },
    {
        "id": "Arrow-method-removeConnector-platform",
        "url": "Arrow-method-removeConnector",
        "type": "platform",
        "name": "Arrow.removeConnector",
        "content": "Arrow.removeConnector removeConnector Removes a connector. connector Arrow.Connector Connector to remove. return void"
    },
    {
        "id": "Arrow-method-removeModel-platform",
        "url": "Arrow-method-removeModel",
        "type": "platform",
        "name": "Arrow.removeModel",
        "content": "Arrow.removeModel removeModel Removes a model from this instance. model Arrow.Model Model to remove. return void"
    },
    {
        "id": "Arrow-method-removeRoute-platform",
        "url": "Arrow-method-removeRoute",
        "type": "platform",
        "name": "Arrow.removeRoute",
        "content": "Arrow.removeRoute removeRoute Removes a route. route Arrow.Router Route to remove. return void"
    },
    {
        "id": "Arrow-method-sortAPIsOrRoutes-platform",
        "url": "Arrow-method-sortAPIsOrRoutes",
        "type": "platform",
        "name": "Arrow.sortAPIsOrRoutes",
        "content": "Arrow.sortAPIsOrRoutes sortAPIsOrRoutes Sort the APIs or Routes (we need wildcard paths to be registered later in the process). apisOrRoutes Object return void"
    },
    {
        "id": "Arrow-method-start-platform",
        "url": "Arrow-method-start",
        "type": "platform",
        "name": "Arrow.start",
        "content": "Arrow.start start Starts the server. callback Function Callback passed an Error object. return void"
    },
    {
        "id": "Arrow-method-stop-platform",
        "url": "Arrow-method-stop",
        "type": "platform",
        "name": "Arrow.stop",
        "content": "Arrow.stop stop Stops the Arrow server instance. callback Function Callback to execute after the server stops. return void"
    },
    {
        "id": "Arrow-method-toJSON-platform",
        "url": "Arrow-method-toJSON",
        "type": "platform",
        "name": "Arrow.toJSON",
        "content": "Arrow.toJSON toJSON returns an Arrow toJSON description return void"
    },
    {
        "id": "Arrow-method-trackInstantiations-platform",
        "url": "Arrow-method-trackInstantiations",
        "type": "platform",
        "name": "Arrow.trackInstantiations",
        "content": "Arrow.trackInstantiations trackInstantiations Tracks all instantiations. return void"
    },
    {
        "id": "Arrow-event-after-platform",
        "url": "Arrow-event-after",
        "type": "platform",
        "name": "Arrow.after",
        "content": "Arrow.after after Fired after a request completes. The callback will be passed the request and response objects. "
    },
    {
        "id": "Arrow-event-error-platform",
        "url": "Arrow-event-error",
        "type": "platform",
        "name": "Arrow.error",
        "content": "Arrow.error error Fired if an error occurred when setting up the server. The callback will be passed the error object. "
    },
    {
        "id": "Arrow-event-listen-platform",
        "url": "Arrow-event-listen",
        "type": "platform",
        "name": "Arrow.listen",
        "content": "Arrow.listen listen Fired when the server can accept connections. "
    },
    {
        "id": "Arrow-event-listening-platform",
        "url": "Arrow-event-listening",
        "type": "platform",
        "name": "Arrow.listening",
        "content": "Arrow.listening listening Fired before binding the server to a port. "
    },
    {
        "id": "Arrow-event-loaded-platform",
        "url": "Arrow-event-loaded",
        "type": "platform",
        "name": "Arrow.loaded",
        "content": "Arrow.loaded loaded Fired after initializing the Arrow instance. "
    },
    {
        "id": "Arrow-event-reloaded-platform",
        "url": "Arrow-event-reloaded",
        "type": "platform",
        "name": "Arrow.reloaded",
        "content": "Arrow.reloaded reloaded Fired after reloading an Arrow component. "
    },
    {
        "id": "Arrow-event-started-platform",
        "url": "Arrow-event-started",
        "type": "platform",
        "name": "Arrow.started",
        "content": "Arrow.started started Fired when the start() method completes. "
    },
    {
        "id": "Arrow-event-starting-platform",
        "url": "Arrow-event-starting",
        "type": "platform",
        "name": "Arrow.starting",
        "content": "Arrow.starting starting Fired when the start() method is invoked. "
    },
    {
        "id": "Arrow-event-stopped-platform",
        "url": "Arrow-event-stopped",
        "type": "platform",
        "name": "Arrow.stopped",
        "content": "Arrow.stopped stopped Fired when the stop() method completes. "
    },
    {
        "id": "Arrow-event-stopping-platform",
        "url": "Arrow-event-stopping",
        "type": "platform",
        "name": "Arrow.stopping",
        "content": "Arrow.stopping stopping Fired when the stop() method is invoked. "
    },
    {
        "name": "Arrow.Block",
        "id": "Arrow.Block-platform",
        "url": "Arrow.Block",
        "type": "platform",
        "content": "Arrow.Block A Block is a function that is executed before or after calling an API endpoint. To create a block, pass the constructor an implementation object, Arrow configuration object and Arrow instance to create a block instance, then pass the Block instance to the Arrow instance's addBlock() method. var block = new Arrow.Block({ name: 'blocky', execute: function (request, response, next) { next(); } }); server.addBlock(block); To use a block, assign it to the before or after property of the implementation object passed to the API or Model constructor. A Block is identified by its name property. You may specify more than one block by using an array. The blocks will be executed in order. var fooAPI = new Arrow.API({ group: 'foo', path: '/api/foo/', method: 'GET', description: 'Get all the Foo objects', before: ['block1', 'block2'], model: 'testuser', action: function(request, response, next) { request.model.findAll(function(err, results) { if (err) { next(err); } else { next(null, results); } }); } }, server.config, server); fooAPI.bind(server.app); Alternatively, you can define your Blocks using JavaScript files. For details, see the Arrow Blocks guide. "
    },
    {
        "id": "Arrow.Block-property-arrow-platform",
        "url": "Arrow.Block-property-arrow",
        "type": "platform",
        "name": "Arrow.Block.arrow",
        "content": "Arrow.Block.arrow arrow Arrow instance associated with the Block instance. Arrow"
    },
    {
        "id": "Arrow.Block-property-config-platform",
        "url": "Arrow.Block-property-config",
        "type": "platform",
        "name": "Arrow.Block.config",
        "content": "Arrow.Block.config config Configuration object used to initialize the Block instance. Object"
    },
    {
        "id": "Arrow.Block-property-constructor-platform",
        "url": "Arrow.Block-property-constructor",
        "type": "platform",
        "name": "Arrow.Block.constructor",
        "content": "Arrow.Block.constructor constructor Custom constructor to execute custom initialization logic. The new block instance is passed to this in the function. Function"
    },
    {
        "id": "Arrow.Block-property-description-platform",
        "url": "Arrow.Block-property-description",
        "type": "platform",
        "name": "Arrow.Block.description",
        "content": "Arrow.Block.description description Human-readable description of the block, which is used by the generated API documentation. String"
    },
    {
        "id": "Arrow.Block-property-execute-platform",
        "url": "Arrow.Block-property-execute",
        "type": "platform",
        "name": "Arrow.Block.execute",
        "content": "Arrow.Block.execute execute Logic to execute. The function is passed a request object, response object and next() callback. After the operation completes, call the next() function. Function"
    },
    {
        "id": "Arrow.Block-property-filename-platform",
        "url": "Arrow.Block-property-filename",
        "type": "platform",
        "name": "Arrow.Block.filename",
        "content": "Arrow.Block.filename filename File used to load the Block instance. String"
    },
    {
        "id": "Arrow.Block-property-name-platform",
        "url": "Arrow.Block-property-name",
        "type": "platform",
        "name": "Arrow.Block.name",
        "content": "Arrow.Block.name name Name used to identify the block. String"
    },
    {
        "id": "Arrow.Block-method-constructor-platform",
        "url": "Arrow.Block-method-constructor",
        "type": "platform",
        "name": "Arrow.Block.constructor",
        "content": "Arrow.Block.constructor constructor Creates an new instance of a Block. impl Dictionary Implementation object. Set any Block properties on the object except the ones marked non-creation. The name property must be set. config Object Arrow configuration object. arrow Arrow Arrow instance. return Arrow.Block "
    },
    {
        "id": "Arrow.Block-method-extend-platform",
        "url": "Arrow.Block-method-extend",
        "type": "platform",
        "name": "Arrow.Block.extend",
        "content": "Arrow.Block.extend extend Returns a constructor function to generate a new Block. Pass the constructor an Arrow configuration object and Arrow instance. impl Dictionary Implementation object. return Function "
    },
    {
        "id": "Arrow.Block-method-getMiddleware-platform",
        "url": "Arrow.Block-method-getMiddleware",
        "type": "platform",
        "name": "Arrow.Block.getMiddleware",
        "content": "Arrow.Block.getMiddleware getMiddleware Gets the middleware block that provides access to the block's execute implementation. Pass the function returned by this method a request object, response object, and the function to call next. return Function "
    },
    {
        "name": "Arrow.Logger",
        "id": "Arrow.Logger-platform",
        "url": "Arrow.Logger",
        "type": "platform",
        "content": "Arrow.Logger The Arrow Logger class provides a wrapper for bunyan, a JSON logging utility. You can access a local instance of the log utility using the logger property of the Arrow instance. "
    },
    {
        "id": "Arrow.Logger-method-debug-platform",
        "url": "Arrow.Logger-method-debug",
        "type": "platform",
        "name": "Arrow.Logger.debug",
        "content": "Arrow.Logger.debug debug Logs a message with a debug-level severity. params ...Object String, formatted-string with variables, object or Error object. return Boolean/void If no arguments are passed, returns a boolean indicating if the debug level is enabled. "
    },
    {
        "id": "Arrow.Logger-method-error-platform",
        "url": "Arrow.Logger-method-error",
        "type": "platform",
        "name": "Arrow.Logger.error",
        "content": "Arrow.Logger.error error Logs a message with an error-level severity. params ...Object String, formatted-string with variables, object or Error object. return Boolean/void If no arguments are passed, returns a boolean indicating if the error level is enabled. "
    },
    {
        "id": "Arrow.Logger-method-fatal-platform",
        "url": "Arrow.Logger-method-fatal",
        "type": "platform",
        "name": "Arrow.Logger.fatal",
        "content": "Arrow.Logger.fatal fatal Logs a message with a fatal-level severity. params ...Object String, formatted-string with variables, object or Error object. return Boolean/void If no arguments are passed, returns a boolean indicating if the fatal level is enabled. "
    },
    {
        "id": "Arrow.Logger-method-info-platform",
        "url": "Arrow.Logger-method-info",
        "type": "platform",
        "name": "Arrow.Logger.info",
        "content": "Arrow.Logger.info info Logs a message with an info-level severity. params ...Object String, formatted-string with variables, object or Error object. return Boolean/void If no arguments are passed, returns a boolean indicating if the info level is enabled. "
    },
    {
        "id": "Arrow.Logger-method-level-platform",
        "url": "Arrow.Logger-method-level",
        "type": "platform",
        "name": "Arrow.Logger.level",
        "content": "Arrow.Logger.level level Sets or retrieves the log level. level Number/String Level to set. return void"
    },
    {
        "id": "Arrow.Logger-method-levels-platform",
        "url": "Arrow.Logger-method-levels",
        "type": "platform",
        "name": "Arrow.Logger.levels",
        "content": "Arrow.Logger.levels levels Sets or retrieves the log level for a specific stream. stream Number/String Stream to set or retrieve the log level for. level Number/String Level to set. return Array/Number/void If no arguments are passed, retrieves an array of available log levels. If the stream is passed, retrieves the current log level of the stream. "
    },
    {
        "id": "Arrow.Logger-method-stripColors-platform",
        "url": "Arrow.Logger-method-stripColors",
        "type": "platform",
        "name": "Arrow.Logger.stripColors",
        "content": "Arrow.Logger.stripColors stripColors Removes ANSI color codes from the string string String return String "
    },
    {
        "id": "Arrow.Logger-method-trace-platform",
        "url": "Arrow.Logger-method-trace",
        "type": "platform",
        "name": "Arrow.Logger.trace",
        "content": "Arrow.Logger.trace trace Logs a message with a trace-level severity. params ...Object String, formatted-string with variables, object or Error object. return Boolean/void If no arguments are passed, returns a boolean indicating if the trace level is enabled. "
    },
    {
        "id": "Arrow.Logger-method-warn-platform",
        "url": "Arrow.Logger-method-warn",
        "type": "platform",
        "name": "Arrow.Logger.warn",
        "content": "Arrow.Logger.warn warn Logs a message with a warn-level severity. params ...Object String, formatted-string with variables, object or Error object. return Boolean/void If no arguments are passed, returns a boolean indicating if the warn level is enabled. "
    },
    {
        "name": "Arrow.Metadata",
        "id": "Arrow.Metadata-platform",
        "url": "Arrow.Metadata",
        "type": "platform",
        "content": "Arrow.Metadata Collection of metadata objects used for field validation of the connector's configuration object. The Arrow.Connector.fetchMetadata method should return an object with its fields property set to an array of metadata objects used to validate the connector's configuration. Arrow.Connector.extend({ fetchMetadata: function (cb) { cb(null, { fields: [ Arrow.Metadata.Text({ name: 'username', description: 'Username account', default: 'admin', required: true }), // more metadata objects... ] }); }, // more connector methods... }); "
    },
    {
        "name": "ArrowMetadataObject",
        "id": "ArrowMetadataObject-platform",
        "url": "ArrowMetadataObject",
        "type": "platform",
        "content": "ArrowMetadataObject Basic metadata object. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "name": "Arrow.Metadata.Alphanum",
        "id": "Arrow.Metadata.Alphanum-platform",
        "url": "Arrow.Metadata.Alphanum",
        "type": "platform",
        "content": "Arrow.Metadata.Alphanum Metadata object used to evaluate an alphanumeric value. By default, the validator property is set to validate a string containing only letters and digits. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Alphanum-method-constructor-platform",
        "url": "Arrow.Metadata.Alphanum-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Alphanum.constructor",
        "content": "Arrow.Metadata.Alphanum.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Alphanum "
    },
    {
        "name": "Arrow.Metadata.Checkbox",
        "id": "Arrow.Metadata.Checkbox-platform",
        "url": "Arrow.Metadata.Checkbox",
        "type": "platform",
        "content": "Arrow.Metadata.Checkbox Metadata object used to evaluate a checkbox value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "Arrow.Metadata.Checkbox-property-selected-platform",
        "url": "Arrow.Metadata.Checkbox-property-selected",
        "type": "platform",
        "name": "Arrow.Metadata.Checkbox.selected",
        "content": "Arrow.Metadata.Checkbox.selected selected Indicates if the checkbox is selected or not. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Checkbox-method-constructor-platform",
        "url": "Arrow.Metadata.Checkbox-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Checkbox.constructor",
        "content": "Arrow.Metadata.Checkbox.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Checkbox "
    },
    {
        "name": "Arrow.Metadata.CreditCard",
        "id": "Arrow.Metadata.CreditCard-platform",
        "url": "Arrow.Metadata.CreditCard",
        "type": "platform",
        "content": "Arrow.Metadata.CreditCard Metadata object used to evaluate a credit card number value. By default, the validator property is set to validate Visa, MasterCard, American Express, Diners Club, Discover, JCB and Australian BankCard. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.CreditCard-method-constructor-platform",
        "url": "Arrow.Metadata.CreditCard-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.CreditCard.constructor",
        "content": "Arrow.Metadata.CreditCard.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.CreditCard "
    },
    {
        "name": "Arrow.Metadata.DateField",
        "id": "Arrow.Metadata.DateField-platform",
        "url": "Arrow.Metadata.DateField",
        "type": "platform",
        "content": "Arrow.Metadata.DateField Metadata object used to evaluate a date value. The validator property is not implemented. The default value is set to the current datetime. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.DateField-method-constructor-platform",
        "url": "Arrow.Metadata.DateField-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.DateField.constructor",
        "content": "Arrow.Metadata.DateField.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.DateField "
    },
    {
        "name": "Arrow.Metadata.Email",
        "id": "Arrow.Metadata.Email-platform",
        "url": "Arrow.Metadata.Email",
        "type": "platform",
        "content": "Arrow.Metadata.Email Metadata object used to evaluate an e-mail value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Email-method-constructor-platform",
        "url": "Arrow.Metadata.Email-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Email.constructor",
        "content": "Arrow.Metadata.Email.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Email "
    },
    {
        "name": "Arrow.Metadata.File",
        "id": "Arrow.Metadata.File-platform",
        "url": "Arrow.Metadata.File",
        "type": "platform",
        "content": "Arrow.Metadata.File Metadata object used to evaluate a filename value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.File-method-constructor-platform",
        "url": "Arrow.Metadata.File-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.File.constructor",
        "content": "Arrow.Metadata.File.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.File "
    },
    {
        "name": "Arrow.Metadata.Integer",
        "id": "Arrow.Metadata.Integer-platform",
        "url": "Arrow.Metadata.Integer",
        "type": "platform",
        "content": "Arrow.Metadata.Integer Metadata object used to evaluate an integer value. By default, the validator property is set to validate an integer. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Integer-method-constructor-platform",
        "url": "Arrow.Metadata.Integer-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Integer.constructor",
        "content": "Arrow.Metadata.Integer.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Integer "
    },
    {
        "name": "Arrow.Metadata.IPV4",
        "id": "Arrow.Metadata.IPV4-platform",
        "url": "Arrow.Metadata.IPV4",
        "type": "platform",
        "content": "Arrow.Metadata.IPV4 Metadata object used to evaluate an IPv4 value. By default, the validator property is set to validate an IPv4 value. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.IPV4-method-constructor-platform",
        "url": "Arrow.Metadata.IPV4-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.IPV4.constructor",
        "content": "Arrow.Metadata.IPV4.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.IPV4 "
    },
    {
        "name": "Arrow.Metadata.IPV6",
        "id": "Arrow.Metadata.IPV6-platform",
        "url": "Arrow.Metadata.IPV6",
        "type": "platform",
        "content": "Arrow.Metadata.IPV6 Metadata object used to evaluate an IPv6 value. By default, the validator property is set to validate an IPv6 value. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.IPV6-method-constructor-platform",
        "url": "Arrow.Metadata.IPV6-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.IPV6.constructor",
        "content": "Arrow.Metadata.IPV6.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.IPV6 "
    },
    {
        "name": "Arrow.Metadata.NumField",
        "id": "Arrow.Metadata.NumField-platform",
        "url": "Arrow.Metadata.NumField",
        "type": "platform",
        "content": "Arrow.Metadata.NumField Metadata object used to evaluate a floating point value. By default, the validator property is set to validate floating point value. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.NumField-method-constructor-platform",
        "url": "Arrow.Metadata.NumField-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.NumField.constructor",
        "content": "Arrow.Metadata.NumField.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.NumField "
    },
    {
        "name": "Arrow.Metadata.Password",
        "id": "Arrow.Metadata.Password-platform",
        "url": "Arrow.Metadata.Password",
        "type": "platform",
        "content": "Arrow.Metadata.Password Metadata object used to evaluate a password value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Password-method-constructor-platform",
        "url": "Arrow.Metadata.Password-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Password.constructor",
        "content": "Arrow.Metadata.Password.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Password "
    },
    {
        "name": "Arrow.Metadata.Phonenumber",
        "id": "Arrow.Metadata.Phonenumber-platform",
        "url": "Arrow.Metadata.Phonenumber",
        "type": "platform",
        "content": "Arrow.Metadata.Phonenumber Metadata object used to evaluate a phone number value. By default, the validator property is set to validate a phone number value. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Phonenumber-method-constructor-platform",
        "url": "Arrow.Metadata.Phonenumber-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Phonenumber.constructor",
        "content": "Arrow.Metadata.Phonenumber.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Phonenumber "
    },
    {
        "name": "Arrow.Metadata.Radio",
        "id": "Arrow.Metadata.Radio-platform",
        "url": "Arrow.Metadata.Radio",
        "type": "platform",
        "content": "Arrow.Metadata.Radio Metadata object used to evaluate a radio button value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "Arrow.Metadata.Radio-property-selected-platform",
        "url": "Arrow.Metadata.Radio-property-selected",
        "type": "platform",
        "name": "Arrow.Metadata.Radio.selected",
        "content": "Arrow.Metadata.Radio.selected selected Indicates if the radio button is selected or not. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Radio-method-constructor-platform",
        "url": "Arrow.Metadata.Radio-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Radio.constructor",
        "content": "Arrow.Metadata.Radio.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Radio "
    },
    {
        "name": "Arrow.Metadata.RangeField",
        "id": "Arrow.Metadata.RangeField-platform",
        "url": "Arrow.Metadata.RangeField",
        "type": "platform",
        "content": "Arrow.Metadata.RangeField Metadata object used to evaluate a numeric range. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "Arrow.Metadata.RangeField-property-max-platform",
        "url": "Arrow.Metadata.RangeField-property-max",
        "type": "platform",
        "name": "Arrow.Metadata.RangeField.max",
        "content": "Arrow.Metadata.RangeField.max max Maximum value of the number. Default is Number.MAX_VALUE. Number"
    },
    {
        "id": "Arrow.Metadata.RangeField-property-min-platform",
        "url": "Arrow.Metadata.RangeField-property-min",
        "type": "platform",
        "name": "Arrow.Metadata.RangeField.min",
        "content": "Arrow.Metadata.RangeField.min min Minimum value of the number. Default is Number.MIN_VALUE. Number"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.RangeField-method-constructor-platform",
        "url": "Arrow.Metadata.RangeField-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.RangeField.constructor",
        "content": "Arrow.Metadata.RangeField.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.RangeField "
    },
    {
        "name": "Arrow.Metadata.Select",
        "id": "Arrow.Metadata.Select-platform",
        "url": "Arrow.Metadata.Select",
        "type": "platform",
        "content": "Arrow.Metadata.Select Metadata object used to evaluate a select value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Select-method-constructor-platform",
        "url": "Arrow.Metadata.Select-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Select.constructor",
        "content": "Arrow.Metadata.Select.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Select "
    },
    {
        "name": "Arrow.Metadata.Text",
        "id": "Arrow.Metadata.Text-platform",
        "url": "Arrow.Metadata.Text",
        "type": "platform",
        "content": "Arrow.Metadata.Text Metadata object used to evaluate a text value. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Text-method-constructor-platform",
        "url": "Arrow.Metadata.Text-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Text.constructor",
        "content": "Arrow.Metadata.Text.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Text "
    },
    {
        "name": "Arrow.Metadata.Textarea",
        "id": "Arrow.Metadata.Textarea-platform",
        "url": "Arrow.Metadata.Textarea",
        "type": "platform",
        "content": "Arrow.Metadata.Textarea Metadata object used to evaluate a textarea. The validator property is not implemented. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.Textarea-method-constructor-platform",
        "url": "Arrow.Metadata.Textarea-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.Textarea.constructor",
        "content": "Arrow.Metadata.Textarea.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.Textarea "
    },
    {
        "name": "Arrow.Metadata.URL",
        "id": "Arrow.Metadata.URL-platform",
        "url": "Arrow.Metadata.URL",
        "type": "platform",
        "content": "Arrow.Metadata.URL Metadata object used to evaluate an URL. By default, the validator property is set to validate a URL. "
    },
    {
        "id": "ArrowMetadataObject-property-default-platform",
        "url": "ArrowMetadataObject-property-default",
        "type": "platform",
        "name": "ArrowMetadataObject.default",
        "content": "ArrowMetadataObject.default default Default value for the field if undefined. Default is an empty string or zero depending on the metadata. Any"
    },
    {
        "id": "ArrowMetadataObject-property-description-platform",
        "url": "ArrowMetadataObject-property-description",
        "type": "platform",
        "name": "ArrowMetadataObject.description",
        "content": "ArrowMetadataObject.description description Human-readable description of the field. String"
    },
    {
        "id": "ArrowMetadataObject-property-name-platform",
        "url": "ArrowMetadataObject-property-name",
        "type": "platform",
        "name": "ArrowMetadataObject.name",
        "content": "ArrowMetadataObject.name name Field name. String"
    },
    {
        "id": "ArrowMetadataObject-property-required-platform",
        "url": "ArrowMetadataObject-property-required",
        "type": "platform",
        "name": "ArrowMetadataObject.required",
        "content": "ArrowMetadataObject.required required Set to true if the field is required. Default is false. Boolean"
    },
    {
        "id": "ArrowMetadataObject-property-validator-platform",
        "url": "ArrowMetadataObject-property-validator",
        "type": "platform",
        "name": "ArrowMetadataObject.validator",
        "content": "ArrowMetadataObject.validator validator Regular expression used to validate the field value. RegExp"
    },
    {
        "id": "Arrow.Metadata.URL-method-constructor-platform",
        "url": "Arrow.Metadata.URL-method-constructor",
        "type": "platform",
        "name": "Arrow.Metadata.URL.constructor",
        "content": "Arrow.Metadata.URL.constructor constructor Creates a new metadata object. params Object Set any Metadata properties on the object. return Arrow.Metadata.URL "
    },
    {
        "name": "Arrow.Middleware",
        "id": "Arrow.Middleware-platform",
        "url": "Arrow.Middleware",
        "type": "platform",
        "content": "Arrow.Middleware The Middleware class sets up additional features for the Express app instance, such as the adding busboy, body-parser, cookie-parser and compression modules and initializing the renderer engines used by the Arrow Web components. To access the middleware instance, use the Arrow instance's middleware property. Renderer Engines API Builder Tools provides renderer engines for EJS, Handlebars, HTML, Markdown and React templates. The renderer engines are used by the Arrow Web component to render HTML to a web client. To access the renderers, use the getRendererEngine() method and pass it the extension of the renderer engine to retrieve. The renderer engine provides access to the module's APIs. To create a custom renderer engine, create an object that implements the createRenderer() method and specifies the extension. Pass the object to the Middleware instance's registerRendererEngine()) method. For example, to implement a renderer engine for Jade templates: var jade = require('jade'), engine = {}; engine.jade = jade; engine.createRenderer = function (content, filename, app) { return function(filename, opts, callback) { if (!content) { content = require('fs').readFileSync(filename, 'utf8').toString(); } callback(null, jade.render(content, opts)); } }; engine.extension = 'jade'; server.middleware.registerRendererEngine(engine); Any view with a jade extension will be routed to the Jade renderer engine. "
    },
    {
        "id": "Arrow.Middleware-method-getRendererEngine-platform",
        "url": "Arrow.Middleware-method-getRendererEngine",
        "type": "platform",
        "name": "Arrow.Middleware.getRendererEngine",
        "content": "Arrow.Middleware.getRendererEngine getRendererEngine Returns a renderer engine for a given file extension. extension String File extension to get a renderer engine for. Built-in values are ejs, hbs, html, jsx and md. return ArrowRendererEngine "
    },
    {
        "id": "Arrow.Middleware-method-registerRendererEngine-platform",
        "url": "Arrow.Middleware-method-registerRendererEngine",
        "type": "platform",
        "name": "Arrow.Middleware.registerRendererEngine",
        "content": "Arrow.Middleware.registerRendererEngine registerRendererEngine Registers a renderer engine for this instance. engine ArrowRendererEngine Renderer engine. return void"
    },
    {
        "name": "ArrowRendererEngine",
        "id": "ArrowRendererEngine-platform",
        "url": "ArrowRendererEngine",
        "type": "platform",
        "content": "ArrowRendererEngine A renderer engine provides access to the underlying module's APIs in addition to the ones defined here. If you are implementing your own custom renderer engine, you need to implement the createRenderer method and specify the extension. API Builder Tools provides the renderer engines for the following template formats: EJS Handlebars HTML Markdown React "
    },
    {
        "id": "ArrowRendererEngine-property-extension-platform",
        "url": "ArrowRendererEngine-property-extension",
        "type": "platform",
        "name": "ArrowRendererEngine.extension",
        "content": "ArrowRendererEngine.extension extension File extension the renderer engine will handle. String"
    },
    {
        "id": "ArrowRendererEngine-property-skipread-platform",
        "url": "ArrowRendererEngine-property-skipread",
        "type": "platform",
        "name": "ArrowRendererEngine.skipread",
        "content": "ArrowRendererEngine.skipread skipread Set to true to skip reading the file and converting it to a string for the content parameter of the createRenderer() function. Boolean"
    },
    {
        "id": "ArrowRendererEngine-method-createRenderer-platform",
        "url": "ArrowRendererEngine-method-createRenderer",
        "type": "platform",
        "name": "ArrowRendererEngine.createRenderer",
        "content": "ArrowRendererEngine.createRenderer createRenderer Returns a function to generate the HTML. Pass the returned function the path of the template file, a context object (data to pass to the template), and a callback passed an Error object (or null if successful) and the HTML to render. content String Template string to compile and render. Set to null if skipread is true. filename String Path of the template file. app Object Express app instance. return Function "
    },
    {
        "name": "Arrow.Router",
        "id": "Arrow.Router-platform",
        "url": "Arrow.Router",
        "type": "platform",
        "content": "Arrow.Router A Route is one part of the Arrow Web component, which is used to display HTML content to the client application. A Route defines the API endpoint used by the application and the logic to execute to render the view files. Create a Router Endpoint To create a Router, define a new Router instance with the Router constructor, then bind the Router instance to the Arrow server's app instance. Pass an implementation object, Arrow configuration object and Arrow instance to the constructor. Set any Router properties on the implementation object except the ones marked non-creation. The name property must be set. To render a view file, in the action function, invoke the render() method on the response object. Pass the view file, located in the ./web/views folder, to render minus the file extension and the data to apply to the template. API Builder Tools selects the renderer engine to use based on the extension of the view file. After creating the Router instance, call its bind() method and pass it an app instance. var foo = new Arrow.Router({ name: 'foo', path: '/foo', method: 'GET', description: 'Render the foo view', action: function (req, res, next) { res.render('foo', {foobar: 'hello', foobaz: 'world'}); next(); } }, server.config, server); foo.bind(server.app); Alternatively, you can define your Routes using JavaScript files, which are automatically loaded by the Arrow Project. For details, see the Arrow Web guide. "
    },
    {
        "id": "Arrow.Router-property--platform",
        "url": "Arrow.Router-property-",
        "type": "platform",
        "name": "Arrow.Router.",
        "content": "Arrow.Router. Creates a Router. Object"
    },
    {
        "id": "Arrow.Router-property-action-platform",
        "url": "Arrow.Router-property-action",
        "type": "platform",
        "name": "Arrow.Router.action",
        "content": "Arrow.Router.action action Logic to execute when the endpoint is invoked by the client application. The function is passed a request object, response object and next() function. You should always make sure that the action function calls the next() function regardless if the result is a success or an error. Function"
    },
    {
        "id": "Arrow.Router-property-arrow-platform",
        "url": "Arrow.Router-property-arrow",
        "type": "platform",
        "name": "Arrow.Router.arrow",
        "content": "Arrow.Router.arrow arrow Arrow instance associated with the Router instance. Arrow"
    },
    {
        "id": "Arrow.Router-property-config-platform",
        "url": "Arrow.Router-property-config",
        "type": "platform",
        "name": "Arrow.Router.config",
        "content": "Arrow.Router.config config Configuration object used to initialize the Router instance. Object"
    },
    {
        "id": "Arrow.Router-property-description-platform",
        "url": "Arrow.Router-property-description",
        "type": "platform",
        "name": "Arrow.Router.description",
        "content": "Arrow.Router.description description Human-readable description of the API, which is used by the generated API documentation. String"
    },
    {
        "id": "Arrow.Router-property-filename-platform",
        "url": "Arrow.Router-property-filename",
        "type": "platform",
        "name": "Arrow.Router.filename",
        "content": "Arrow.Router.filename filename File used to load the Router instance. String"
    },
    {
        "id": "Arrow.Router-property-method-platform",
        "url": "Arrow.Router-property-method",
        "type": "platform",
        "name": "Arrow.Router.method",
        "content": "Arrow.Router.method method HTTP verb: GET, PUT, POST or DELETE. String"
    },
    {
        "id": "Arrow.Router-property-name-platform",
        "url": "Arrow.Router-property-name",
        "type": "platform",
        "name": "Arrow.Router.name",
        "content": "Arrow.Router.name name Name of the route used for identification. String"
    },
    {
        "id": "Arrow.Router-property-path-platform",
        "url": "Arrow.Router-property-path",
        "type": "platform",
        "name": "Arrow.Router.path",
        "content": "Arrow.Router.path path API endpoint. String"
    },
    {
        "id": "Arrow.Router-property-route-platform",
        "url": "Arrow.Router-property-route",
        "type": "platform",
        "name": "Arrow.Router.route",
        "content": "Arrow.Router.route route Express route instance that binds the endpoint to the logic. Object"
    },
    {
        "id": "Arrow.Router-property-timestamp-platform",
        "url": "Arrow.Router-property-timestamp",
        "type": "platform",
        "name": "Arrow.Router.timestamp",
        "content": "Arrow.Router.timestamp timestamp Datetime when the route was last synced. String"
    },
    {
        "id": "Arrow.Router-method-constructor-platform",
        "url": "Arrow.Router-method-constructor",
        "type": "platform",
        "name": "Arrow.Router.constructor",
        "content": "Arrow.Router.constructor constructor Creates a new Router instance. impl Dictionary Implementation object. Set any Router properties on the object except the ones marked non-creation. The name property must be set. config Object Arrow configuration object. arrow Arrow Arrow instance. return Arrow.Router "
    },
    {
        "id": "Arrow.Router-method-bind-platform",
        "url": "Arrow.Router-method-bind",
        "type": "platform",
        "name": "Arrow.Router.bind",
        "content": "Arrow.Router.bind bind Binds this route to the app instance. app Object App instance. return void"
    },
    {
        "id": "Arrow.Router-method-extend-platform",
        "url": "Arrow.Router-method-extend",
        "type": "platform",
        "name": "Arrow.Router.extend",
        "content": "Arrow.Router.extend extend Returns a constructor function to generate a new Router endpoint. Pass the constructor an Arrow configuration object and Arrow instance. impl Dictionary Implementation object. return Function "
    },
    {
        "id": "Arrow.Router-method-fn-platform",
        "url": "Arrow.Router-method-fn",
        "type": "platform",
        "name": "Arrow.Router.fn",
        "content": "Arrow.Router.fn fn Handles the middleware request, making sure API Builder Tools' security measures are applied and we are set up for handling the request. req Object resp Object next Object return void"
    },
    {
        "id": "Arrow.Router-method-getMiddleware-platform",
        "url": "Arrow.Router-method-getMiddleware",
        "type": "platform",
        "name": "Arrow.Router.getMiddleware",
        "content": "Arrow.Router.getMiddleware getMiddleware Gets the middleware block that provides access to the route's action implementation. Pass the function returned by this method a request object, response object, and the function to call next. return Function "
    },
    {
        "id": "Arrow.Router-method-reload-platform",
        "url": "Arrow.Router-method-reload",
        "type": "platform",
        "name": "Arrow.Router.reload",
        "content": "Arrow.Router.reload reload Reloads the route. Call this function if changes were made to the route. arrow Object Arrow instance. callback Function Callback passed an Error object (or null if successful) and the reloaded route. return void"
    },
    {
        "id": "Arrow.Router-method-remove-platform",
        "url": "Arrow.Router-method-remove",
        "type": "platform",
        "name": "Arrow.Router.remove",
        "content": "Arrow.Router.remove remove Removes the route from the Arrow instance. arrow Object Arrow instance. callback Function Callback passed an Error object (or null if successful) and the removed route. return void"
    },
    {
        "id": "Arrow.Router-method-render-platform",
        "url": "Arrow.Router-method-render",
        "type": "platform",
        "name": "Arrow.Router.render",
        "content": "Arrow.Router.render render do implicit or explicit handling of next in render name Object args Object cb Object return void"
    },
    {
        "name": "EjsRendererEngine",
        "id": "EjsRendererEngine-platform",
        "url": "EjsRendererEngine",
        "type": "platform",
        "content": "EjsRendererEngine Renderer engine for EJS templates. "
    },
    {
        "id": "EjsRendererEngine-property-ejs-platform",
        "url": "EjsRendererEngine-property-ejs",
        "type": "platform",
        "name": "EjsRendererEngine.ejs",
        "content": "EjsRendererEngine.ejs ejs ejs module instance to access its APIs. Object"
    },
    {
        "id": "ArrowRendererEngine-property-extension-platform",
        "url": "ArrowRendererEngine-property-extension",
        "type": "platform",
        "name": "ArrowRendererEngine.extension",
        "content": "ArrowRendererEngine.extension extension File extension the renderer engine will handle. String"
    },
    {
        "id": "ArrowRendererEngine-method-createRenderer-platform",
        "url": "ArrowRendererEngine-method-createRenderer",
        "type": "platform",
        "name": "ArrowRendererEngine.createRenderer",
        "content": "ArrowRendererEngine.createRenderer createRenderer Returns a function to generate the HTML. Pass the returned function the path of the template file, a context object (data to pass to the template), and a callback passed an Error object (or null if successful) and the HTML to render. content String Template string to compile and render. Set to null if skipread is true. filename String Path of the template file. app Object Express app instance. return Function "
    },
    {
        "name": "HandlebarsRendererEngine",
        "id": "HandlebarsRendererEngine-platform",
        "url": "HandlebarsRendererEngine",
        "type": "platform",
        "content": "HandlebarsRendererEngine Renderer engine for Handlebar templates. "
    },
    {
        "id": "HandlebarsRendererEngine-property-Handlebars-platform",
        "url": "HandlebarsRendererEngine-property-Handlebars",
        "type": "platform",
        "name": "HandlebarsRendererEngine.Handlebars",
        "content": "HandlebarsRendererEngine.Handlebars Handlebars handlebars module instance to access its APIs. Object"
    },
    {
        "id": "ArrowRendererEngine-property-extension-platform",
        "url": "ArrowRendererEngine-property-extension",
        "type": "platform",
        "name": "ArrowRendererEngine.extension",
        "content": "ArrowRendererEngine.extension extension File extension the renderer engine will handle. String"
    },
    {
        "id": "ArrowRendererEngine-method-createRenderer-platform",
        "url": "ArrowRendererEngine-method-createRenderer",
        "type": "platform",
        "name": "ArrowRendererEngine.createRenderer",
        "content": "ArrowRendererEngine.createRenderer createRenderer Returns a function to generate the HTML. Pass the returned function the path of the template file, a context object (data to pass to the template), and a callback passed an Error object (or null if successful) and the HTML to render. content String Template string to compile and render. Set to null if skipread is true. filename String Path of the template file. app Object Express app instance. return Function "
    },
    {
        "id": "HandlebarsRendererEngine-method-registerHelper-platform",
        "url": "HandlebarsRendererEngine-method-registerHelper",
        "type": "platform",
        "name": "HandlebarsRendererEngine.registerHelper",
        "content": "HandlebarsRendererEngine.registerHelper registerHelper Registers a handlebar helper function. name String Field name. callback Function Helper function. return void"
    },
    {
        "id": "HandlebarsRendererEngine-method-registerPartial-platform",
        "url": "HandlebarsRendererEngine-method-registerPartial",
        "type": "platform",
        "name": "HandlebarsRendererEngine.registerPartial",
        "content": "HandlebarsRendererEngine.registerPartial registerPartial Registers a partial template. name String Name of the partial template. template String Template string. return void"
    },
    {
        "id": "HandlebarsRendererEngine-method-registerPartials-platform",
        "url": "HandlebarsRendererEngine-method-registerPartials",
        "type": "platform",
        "name": "HandlebarsRendererEngine.registerPartials",
        "content": "HandlebarsRendererEngine.registerPartials registerPartials Loops through a directory and sets up all of the associated files as Handlebar Partials. dir String Path of the directory to use as partials directory watch Boolean Set to true to monitor and update file changes. return void"
    },
    {
        "name": "HtmlRendererEngine",
        "id": "HtmlRendererEngine-platform",
        "url": "HtmlRendererEngine",
        "type": "platform",
        "content": "HtmlRendererEngine Renderer engine for HTML templates. "
    },
    {
        "id": "ArrowRendererEngine-property-extension-platform",
        "url": "ArrowRendererEngine-property-extension",
        "type": "platform",
        "name": "ArrowRendererEngine.extension",
        "content": "ArrowRendererEngine.extension extension File extension the renderer engine will handle. String"
    },
    {
        "id": "ArrowRendererEngine-method-createRenderer-platform",
        "url": "ArrowRendererEngine-method-createRenderer",
        "type": "platform",
        "name": "ArrowRendererEngine.createRenderer",
        "content": "ArrowRendererEngine.createRenderer createRenderer Returns a function to generate the HTML. Pass the returned function the path of the template file, a context object (data to pass to the template), and a callback passed an Error object (or null if successful) and the HTML to render. content String Template string to compile and render. Set to null if skipread is true. filename String Path of the template file. app Object Express app instance. return Function "
    },
    {
        "name": "MarkdownRendererEngine",
        "id": "MarkdownRendererEngine-platform",
        "url": "MarkdownRendererEngine",
        "type": "platform",
        "content": "MarkdownRendererEngine Renderer engine for Markdown templates. "
    },
    {
        "id": "ArrowRendererEngine-property-extension-platform",
        "url": "ArrowRendererEngine-property-extension",
        "type": "platform",
        "name": "ArrowRendererEngine.extension",
        "content": "ArrowRendererEngine.extension extension File extension the renderer engine will handle. String"
    },
    {
        "id": "MarkdownRendererEngine-property-marked-platform",
        "url": "MarkdownRendererEngine-property-marked",
        "type": "platform",
        "name": "MarkdownRendererEngine.marked",
        "content": "MarkdownRendererEngine.marked marked marked module instance to access its APIs. Object"
    },
    {
        "id": "MarkdownRendererEngine-property-renderer-platform",
        "url": "MarkdownRendererEngine-property-renderer",
        "type": "platform",
        "name": "MarkdownRendererEngine.renderer",
        "content": "MarkdownRendererEngine.renderer renderer renderer module instance to access its APIs. Object"
    },
    {
        "id": "ArrowRendererEngine-method-createRenderer-platform",
        "url": "ArrowRendererEngine-method-createRenderer",
        "type": "platform",
        "name": "ArrowRendererEngine.createRenderer",
        "content": "ArrowRendererEngine.createRenderer createRenderer Returns a function to generate the HTML. Pass the returned function the path of the template file, a context object (data to pass to the template), and a callback passed an Error object (or null if successful) and the HTML to render. content String Template string to compile and render. Set to null if skipread is true. filename String Path of the template file. app Object Express app instance. return Function "
    }
]