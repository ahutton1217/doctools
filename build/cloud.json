[
  {
    "tagname": "class",
    "name": "ACLs",
    "doc": "<p>The ACL object implements access control lists for ArrowDB objects. An access\ncontrol list controls read and write access to any ArrowDB objects it's attached\nto. For ACS, read and write permission are defined as follows:</p>\n\n<ul>\n<li><strong>Read permission</strong> includes the ability to show, query and search ArrowDB objects.</li>\n<li><strong>Write permission</strong> includes the ability to update and delete ArrowDB objects.</li>\n</ul>\n\n\n<p>An ACL object includes four attributes:</p>\n\n<ul>\n<li><code>public_read</code> &mdash; String; if <code>true</code>, all users have read access. Default is <code>false</code>.</li>\n<li><code>public_write</code> &mdash; String; if <code>true</code>, all users have write access. Default is <code>false</code>.</li>\n<li><code>reader_ids</code> &mdash; Comma-separated list of users with read access.</li>\n<li><code>writer_ids</code> &mdash; Comma-separated list of users with write access.</li>\n</ul>\n\n\n<p>The object's owner always has read and write permission.  If a new ACS object is not assigned an\nACL, a default ACL is applied that limits read and write abilities to the object's owner.</p>\n\n<p>You assign an ACL to an object via the object's <code>acl_id</code> or <code>acl_name</code> properties. Currently, ACLs\ncan be assigned to the following types of ArrowDB objects: <a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a>, <a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a>,\n<a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>, <a href=\"#!/api/Files\" rel=\"Files\" class=\"docClass\">Files</a>, <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a>, <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a>, <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>, <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a>,\n<a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a> and <a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a>.</p>\n\n<h3>ACL usage scenarios</h3>\n\n<h4>Public read and write</h4>\n\n<p>In the following example User1 creates an ACL object named \"photo_access\" that allows both public reading and writing.\nIt then creates a new <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photo</a> object and assigns to it the \"photo_access\" ACL so\nthat anyone can can update, delete, show, or query the photo.</p>\n\n<pre><code>// Logged in as User1:\nCloud.ACLs.create({\n    name: 'photo_access',\n    public_read: \"true\",\n    public_write: \"true\"\n}, function (e) {});      \n\n// Then create Photo that uses the \"photo_access\" ACL:\nCloud.Photos.create({\n    photo: Titanium.Filesystem.getFile('photo.jpg'),\n    acl_name: 'photo_access'\n}, function (e) { });          \n</code></pre>\n\n<h4>Restrict read access to specific users</h4>\n\n<p>In the following example (continued), User1 updates the \"photo_access\" ACL object to limit\nread access to only User2 and User3 of this ACL object. Subsequently, only the application administrator,\nthe ACL object owner (User1), User2 and User3 can read (show, search, or query) the Photo object;\nwrite permissions have not changed.</p>\n\n<pre><code>// Logged in as User1:\nCloud.ACLs.update({\n    name: 'photo_access',\n    public_read: \"false\",\n    reader_ids: [user2, user3]\n}, function (e) {});      \n</code></pre>\n\n<h4>Restrict write access to specific users</h4>\n\n<p>In the following example (continued), User1 updates the \"photo_access\" ACL object to limit\nwrite access to only User2 and User3. After this update, the application administrator,\nthe ACL object owner (User1), User2 and User3 can write (update/delete) the Photo object.</p>\n\n<pre><code>// Logged in as User1:\nCloud.ACLs.update({\n    name: 'photo_access',\n    public_write: \"false\",\n    writer_ids: [user2, user3]\n}, function (e) {}); \n</code></pre>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>ACL creation date.</p>\n",
          "type": "Date",
          "owner": "ACLs",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>ID of the ACL object, automatically generated by ArrowDB.</p>\n",
          "type": "String",
          "owner": "ACLs",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Name of the ACL object.\nThe <code>name</code> field is not queryable using the query API.</p>\n",
          "type": "String",
          "owner": "ACLs",
          "shortDoc": "Name of the ACL object. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "pretty_json",
          "id": "property-pretty_json",
          "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
          "type": "Boolean",
          "owner": "ACLs",
          "shortDoc": "Determines if the JSON response is formatted for readability (true), or displayed on a\nsingle line (false). ...",
          "html_type": "Boolean",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "public_read",
          "id": "property-public_read",
          "doc": "<p>Determines whether objects controlled by this ArrowDB are publicly readable.</p>\n\n<p>Default is false.</p>\n",
          "type": "String",
          "owner": "ACLs",
          "shortDoc": "Determines whether objects controlled by this ArrowDB are publicly readable. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "public_write",
          "id": "property-public_write",
          "doc": "<p>Determines whether objects controlled by this ArrowDB are publicly writable.</p>\n\n<p>Default is false.</p>\n",
          "type": "String",
          "owner": "ACLs",
          "shortDoc": "Determines whether objects controlled by this ArrowDB are publicly writable. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "readers",
          "id": "property-readers",
          "doc": "<p>List of IDs identifying users who can read objects controlled by this ACL.</p>\n",
          "type": "String[]",
          "owner": "ACLs",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>ACL update date.</p>\n",
          "type": "Date",
          "owner": "ACLs",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Owner of the ACL.</p>\n",
          "type": "Users",
          "owner": "ACLs",
          "html_type": "Users",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/ACLs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "writers",
          "id": "property-writers",
          "doc": "<p>List of IDs identifying users who can update objects controlled by this ACL.</p>\n",
          "type": "String[]",
          "owner": "ACLs",
          "html_type": "String[]",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "add",
          "deprecated": false,
          "id": "method-add",
          "doc": "<p>Adds one or more user(s) to an existing ACL object, identified by its <code>id</code> or <code>name</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "acls/add.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example adds a user to an ACL object and checks the response.</p>\n\n<pre><code>Cloud.ACLs.addUser({\n    name: 'testACL',\n    reader_ids: readers.ids.join(','),\n    writer_ids: writers.ids.join(',')\n}, function (e) {\n    if (e.success) {\n        alert('Added!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=access_photo_album\" -F \"reader_ids[]=4fcdab1f47b7b71933000008\" -F \"writer_ids[]=4fcdab1f47b7b71933000009\" https://api.cloud.appcelerator.com/v1/acls/add.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"addAcl\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"testACL\",\n    @\"reader_ids\": @\"4fcdab1f47b7b71933000008\",\n    @\"writer_ids\": @\"4fcdab1f47b7b71933000009\"\n};\n\n[APSACLs add:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\ndata.put(\"reader_ids\", \"4fcdab1f47b7b71933000008\");\ndata.put(\"writer_ids\", \"4fcdab1f47b7b71933000009\");\n\ntry {\n    APSACLs.addUser(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Added user to ACL!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsAddUser({\n    name: 'testACL',\n    reader_ids: readers.ids.join(','),\n    writer_ids: writers.ids.join(',')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Added!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name of the ACL object.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "id",
              "doc": "<p>ID of the ACL oject.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "reader_ids",
              "doc": "<p>Comma separated list of IDs identifying users who can read objects\ncontrolled by this ACL.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "writer_ids",
              "doc": "<p>Comma separated list of IDs identifying users who can update an object.\ncontrolled by this ACL.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Adds one or more user(s) to an existing ACL object, identified by its id or name. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "check",
          "deprecated": false,
          "id": "method-check",
          "doc": "<p>Checks the permissions a specified user is granted by a specified ACL.\nIn the response, \"read_permission\": \"yes\" means the user has read permission; if\nthis property is omitted or the value is not \"yes\", the user does not have read\npermission.</p>\n\n<p>Similarly, \"write_permission\": \"yes\" means the user has write permission. If the\nproperty is omitted or the value is not \"yes\", the user does not have write\npermission.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "acls/check.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example checks a user's permissions in an ACL and checks the response.</p>\n\n<pre><code>Cloud.ACLs.checkUser({\n    name: 'testACL',\n    user_id: userID\n}, function (e) {\n    if (e.success) {\n        alert('Read Permission: ' + e.permission['read permission'] +\n              '\\nWrite Permission: ' + e.permission['write permission']);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/acls/check.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;name=access_photo_album&amp;user_id=4fcdd3c547b7b71c0b000004\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"checkAcl\"\n  },\n  \"response\": {\n    \"permission\": {\n      \"read_permission\": true,\n      \"write_permission\": false\n    }\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"testACL\",\n    @\"user_id\": @\"4fcdd3c547b7b71c0b000004\"\n};\n\n[APSACLs checkUser:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\ndata.put(\"user_id\", \"4fcdd3c547b7b71c0b000004\");\n\ntry {\n    APSACLs.checkUser(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONObject res = e.getResponse().getJSONObject(\"permission\");\n                    Log.i(\"APSACLs\", \"User permission: \" + res.toString());\n                } catch (JSONException err) {\n                    Log.e(\"APSACLs\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/check.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsCheckUser({\n    name: 'testACL',\n    user_id: userID\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Read Permission: ' +\n            JSON.stringify(result.body.response.permission.read_permission) +\n            '\\nWrite Permission:' +\n            JSON.stringify(result.body.response.permission.write_permission)\n        );\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name of the ACL object.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "id",
              "doc": "<p>ID of the ACL oject.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "user_id",
              "doc": "<p>User ID of the user to check.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "permission",
              "doc": "<p>An object with two properties:</p>\n\n<ul>\n<li><code>read_permission</code>. Indicates whether the user can read objects associated with this ACL.</li>\n<li><code>write_permission</code>. Indicates whether the user can update objects associated with this ACL.</li>\n</ul>\n\n\n<p>Both properties are Booleans.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Checks the permissions a specified user is granted by a specified ACL. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of ACL objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "acls/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of ACL objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"acls/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/acls/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"aclsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of ACL objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"acls/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of ACL objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"acls/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of ACL objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "ACLs",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates an ACL object, which can be used to control access to ArrowDB objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "acls/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates an ACL object and checks the response.</p>\n\n<pre><code>Cloud.ACLs.create({\n    name: 'testACL',\n    reader_ids: readers.ids.join(','),\n    writer_ids: writers.ids.join(','),\n    public_read: \"false\",\n    public_write: \"false\"\n}, function (e) {\n    if (e.success) {\n        alert('Created!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -F \"name=access_photo_album\" -F \"reader_ids[]=4fcdab1f47b7b71933000003\" -F \"reader_ids[]=4fcdab1f47b7b71933000004\" -F \"reader_ids[]=4fcdab2047b7b71933000005\" -F \"writer_ids[]=4fcdab1f47b7b71933000003\" https://api.cloud.appcelerator.com/v1/acls/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createAcl\"\n  },\n  \"response\": {\n    \"acls\": [\n      {\n        \"id\": \"4fcdab2047b7b7193300000c\",\n        \"name\": \"access my album\",\n        \"created_at\": \"2012-06-05T06:45:52+0000\",\n        \"updated_at\": \"2012-06-05T06:45:52+0000\",\n        \"public_read\": false,\n        \"user\": {\n          \"id\": \"4fcdab2047b7b71933000007\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-06-01T06:43:01+0000\",\n          \"updated_at\": \"2012-06-01T06:43:01+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2012-06-01T06:43:01+0000\",\n          \"email\": \"a@mike.com\",\n          \"admin\": \"false\"\n        },\n        \"readers\": [\n          \"4fcdab1f47b7b71933000003\",\n          \"4fcdab1f47b7b71933000004\",\n          \"4fcdab2047b7b71933000005\",\n          \"4fcdab2047b7b71933000007\"\n        ],\n        \"public_write\": false,\n        \"writers\": [\n          \"4fcdab1f47b7b71933000003\",\n          \"4fcdab2047b7b71933000007\"\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"testACL\",\n    @\"reader_ids\": @\"4fcdab1f47b7b71933000003\",\n    @\"reader_ids\": @\"4fcdab1f47b7b71933000003\"\n};\n\n[APSACLs create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\ndata.put(\"reader_ids\", \"4fcdab1f47b7b71933000003,4fcdab1f47b7b71933000004,4fcdab1f47b7b71933000005\");\ndata.put(\"writer_ids\", \"4fcdab1f47b7b71933000003\");\n\ntry {\n    APSACLs.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created ACL!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsCreate({\n    name: 'testACL',\n    reader_ids: readers.ids.join(','),\n    writer_ids: writers.ids.join(','),\n    public_read: \"false\",\n    public_write: \"false\"\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.acls[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name of the ACL object.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "reader_ids",
              "doc": "<p>Comma separated list of IDs identifying users who can read objects\ncontrolled by this ACL.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "writer_ids",
              "doc": "<p>Comma separated list of IDs identifying users who can update an object.\ncontrolled by this ACL.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "public_read",
              "doc": "<p>Determines whether objects controlled by this ArrowDB are publically readable.</p>\n\n<p>Default is false.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "public_write",
              "doc": "<p>Determines whether objects controlled by this ArrowDB are publically writable.</p>\n\n<p>Default is false.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>Specifies the owner of the new URL.</p>\n\n<p>Only allowed if the current login user is an application admin. Otherwise, the\nnew ACL is always owned by the current login user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "acls",
              "doc": "<p>Array containing the created ACL.</p>\n",
              "optional": true,
              "type": "ACLs[]",
              "html_type": "ACLs[]"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Creates an ACL object, which can be used to control access to ArrowDB objects. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes an ACL object with the given <code>id</code> or <code>name</code>.</p>\n\n<p>An application admin can delete any ACL object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "acls/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes an ACL object and checks the response.</p>\n\n<pre><code>Cloud.ACLs.remove({\n    name: 'testACL'\n}, function (e) {\n    if (e.success) {\n        alert('Removed!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"name=access_photo_album\" \"https://api.cloud.appcelerator.com/v1/acls/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"deleteAcl\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"acl_id\": @\"ACL_ID\"\n};\n\n[APSACLs remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\n\ntry {\n    APSACLs.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsDelete({\n    name: 'testACL'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Deleted!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>ID of the ACL oject to delete.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>Name of the ACL object to delete.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the ACL object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to remove an ACL on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Deletes an ACL object with the given id or name. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs a custom query of ACLs. Regular application users can only query ACLs that they have created.\nApplication admins can query ACLs for an arbitrary user by specifying the <code>user_id</code> method parameter.\n(In applications created with ArrowDB 1.1.7 and earlier, any user can query another user's\nACLs, regardless of whether they are an admin or not.)</p>\n\n<p class=\"note\">The <code>name</code> field is not queryable.</p>\n\n\n<ul>\n<li>Applications created with ArrowDB 1.1.5 and later can paginate query results using <code>skip</code>\nand <code>limit</code> parameters. For details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</li>\n<li>Currently you can not query or sort data stored inside an array or hash in custom fields.</li>\n</ul>\n\n\n<p>For general information on queries, see <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "acls/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Use the <a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.Cloud-method-sendRequest\">Modules.Cloud.sendRequest()</a>\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET \"https://api.cloud.appcelerator.com/v1/acls/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryACL\",\n    \"count\": 3\n  },\n  \"response\": {\n    \"acls\": [\n      {\n        \"id\": \"5418475c20110835ae0008ec\",\n        \"name\": \"all2\",\n        \"created_at\": \"2014-09-16T14:21:16+0000\",\n        \"updated_at\": \"2014-09-16T14:21:16+0000\",\n        \"user\": {\n          \"id\": \"54174bab20110835b6000013\",\n          \"created_at\": \"2014-09-15T20:27:23+0000\",\n          \"updated_at\": \"2014-09-15T20:27:24+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2014-09-15T20:27:23+0000\",\n          \"username\": \"admin2\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        },\n        \"public_read\": false,\n        \"readers\": [\n          \"54174bab20110835b6000013\"\n        ],\n        \"public_write\": false,\n        \"writers\": [\n          \"54174bab20110835b6000013\"\n        ]\n      },\n      {\n        \"id\": \"5418475920110835ae0008eb\",\n        \"name\": \"all\",\n        \"created_at\": \"2014-09-16T14:21:13+0000\",\n        \"updated_at\": \"2014-09-16T14:21:13+0000\",\n        \"user\": {\n          \"id\": \"54174bab20110835b6000013\",\n          \"created_at\": \"2014-09-15T20:27:23+0000\",\n          \"updated_at\": \"2014-09-15T20:27:24+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2014-09-15T20:27:23+0000\",\n          \"username\": \"admin2\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        },\n        \"public_read\": false,\n        \"readers\": [\n          \"54174bab20110835b6000013\"\n        ],\n        \"public_write\": false,\n        \"writers\": [\n          \"54174bab20110835b6000013\"\n        ]\n      },\n      {\n        \"id\": \"54133da5ee2fa4caa30003dc\",\n        \"name\": \"erbody2\",\n        \"created_at\": \"2014-09-12T18:38:30+0000\",\n        \"updated_at\": \"2014-09-12T18:38:30+0000\",\n        \"user\": {\n          \"id\": \"54132aa4ee2fa4caa30001ba\",\n          \"created_at\": \"2014-09-12T17:17:24+0000\",\n          \"updated_at\": \"2014-09-12T17:17:24+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2014-09-12T17:17:24+0000\",\n          \"username\": \"tims\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        },\n        \"public_read\": true,\n        \"public_write\": true\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Use the [<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">APSCloud sendRequest</a>]\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Use the <a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloud.html#sendRequest%28java.lang.String,%20java.lang.String,%20java.util.Map,%20com.appcelerator.aps.APSResponseHandler%29\">APSCloud.sendRequest()</a>\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsQuery({}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.acls.forEach(function(acl) {\n            console.log(acl.name);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "count",
              "doc": "<p>Used for paginating queries. If set to <code>true</code>, the response's <code>meta</code> object contains a\n<code>count</code> field that indicates the number of objects that matched the query constraints.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "user_id",
              "doc": "<p>ID of the user whose ACLs should be returned. You must be an application admin to use this\nparameter.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "acls",
              "doc": "<p>List of ACL objects matching the query.</p>\n",
              "optional": true,
              "type": "ACLs[]",
              "html_type": "ACLs[]"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Performs a custom query of ACLs. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "remove",
          "deprecated": false,
          "id": "method-remove",
          "doc": "<p>Removes one or more user(s) from an ACL object with the given <code>id</code> or <code>name</code>.</p>\n\n<p>You can remove users from the <code>readers</code> list, which grants read permission, the\n<code>writers</code> list, which grants update/delete permission, or both.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "acls/remove.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example removes a user from an ACL object and checks the response.</p>\n\n<pre><code>Cloud.ACLs.removeUser({\n    name: 'testACL',\n    reader_ids: readers.ids.join(','),\n    writer_ids: writers.ids.join(',')\n}, function (e) {\n    if (e.success) {\n        alert('Removed!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"name=access_photo_album\" -F \"reader_ids[]=4fcdab1f47b7b71933000008\" -F \"writer_ids[]=4fcdab1f47b7b71933000009\" https://api.cloud.appcelerator.com/v1/acls/remove.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"removeAcl\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"testACL\",\n    @\"reader_ids\": @\"4fcdab1f47b7b71933000003\",\n    @\"reader_ids\": @\"4fcdab1f47b7b71933000003\"\n};\n\n[APSACLs removeUser:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\ndata.put(\"reader_ids\", \"4fcdab1f47b7b71933000008\");\n\ntry {\n    APSACLs.removeUser(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"User removed from ACL!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsRemoveUser({\n    name: 'testACL',\n    reader_ids: readers.ids.join(','),\n    writer_ids: writers.ids.join(',')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('removed!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name of the ACL object.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "id",
              "doc": "<p>ID of the ACL oject.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "reader_ids",
              "doc": "<p>Comma separated list of IDs to remove from the <code>readers</code> list.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "writer_ids",
              "doc": "<p>Comma separated list of IDs to remove from the <code>writers</code> list.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Removes one or more user(s) from an ACL object with the given id or name. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Shows the ACL object with the given <code>id</code> or <code>name</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "acls/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests an ACL object and checks the response.</p>\n\n<pre><code>Cloud.ACLs.show({\n    name: 'testACL'\n}, function (e) {\n    if (e.success) {\n        alert('Shown!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/acls/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;name=access_photo_album\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showAcl\"\n  },\n  \"response\": {\n    \"acls\": [\n      {\n        \"id\": \"4fcdd3c647b7b71c0b00000c\",\n        \"name\": \"access_photo_album\",\n        \"user_id\": \"4fcdd3c647b7b71c0b000007\",\n        \"created_at\": \"2012-06-05T09:39:18+0000\",\n        \"updated_at\": \"2012-06-05T09:39:20+0000\",\n        \"public_read\": false,\n        \"readers\": [\n          \"4fcdd3c547b7b71c0b000003\",\n          \"4fcdd3c547b7b71c0b000004\",\n          \"4fcdd3c547b7b71c0b000005\",\n          \"4fcdd3c547b7b71c0b000006\"\n        ],\n        \"public_write\": false,\n        \"writers\": [\n          \"4fcdd3c547b7b71c0b000003\",\n          \"4fcdd3c547b7b71c0b000004\",\n          \"4fcdd3c547b7b71c0b000005\"\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"testACL\"\n};\n\n[APSACLs show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\n\ntry {\n    APSACLs.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSACLs\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsShow({\n    name: 'testACL'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.acls);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>ID of the ACL oject.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>Name of the ACL object.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "acls",
              "doc": "<p>One element array, containing the ACL object.</p>\n",
              "optional": true,
              "type": "ACLs[]",
              "html_type": "ACLs[]"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Shows the ACL object with the given id or name. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates an ACL object to change its access control list. When updating an ACL,\nyou can change the members of the <code>readers</code> list and the <code>writers</code> list, or change the value\nof the <code>public_read</code> and <code>public_write</code> flags.</p>\n\n<p>An application admin can update any ACL object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "acls/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates an ACL object and checks the response.</p>\n\n<pre><code>Cloud.ACLs.update({\n    name: 'testACL',\n    reader_ids: '',\n    writer_ids: '',\n    public_read: \"true\",\n    public_write: \"true\"\n}, function (e) {\n    if (e.success) {\n        alert('Updated!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X PUT -F \"name=access_photo_album\" -F \"public_read=true\" -F \"public_write=true\" https://api.cloud.appcelerator.com/v1/acls/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateAcl\"\n  },\n  \"response\": {\n    \"acls\": [\n      {\n        \"id\": \"4fcdd3c647b7b71c0b00000c\",\n        \"name\": \"access_photo_album\",\n        \"user_id\": \"4fcdd3c647b7b71c0b000007\",\n        \"created_at\": \"2012-06-05T09:39:18+0000\",\n        \"updated_at\": \"2012-06-05T09:39:20+0000\",\n        \"public_read\": true,\n        \"public_write\": true\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"testACL\",\n    @\"reader_ids\": @\"\",\n    @\"writer_ids\": @\"\",\n    @\"public_read\": @\"true\",\n    @\"public_write\": @\"true\"\n};\n\n[APSACLs update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"access_photo_album\");\ndata.put(\"public_read\", \"true\");\ndata.put(\"public_write\", \"true\");\n\ntry {\n    APSACLs.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSACLs\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSACLs\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSACLs\", \"Exception thrown: \" + e.toString());\n}`\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/ACLs/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.aclsUpdate({\n    name: 'testACL',\n    reader_ids: '',\n    writer_ids: '',\n    public_read: 'true',\n    public_write: 'true'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.acls[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>ID of the ACL oject.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>Name of the ACL object.</p>\n\n<p>Either <code>name</code> or <code>id</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "reader_ids",
              "doc": "<p>Comma separated list of IDs identifying users who can read objects\ncontrolled by this ACL.</p>\n\n<p>To remove all users from the <code>readers</code> list, simply set <code>reader_ids=\"\"</code>.\nThis removes all users except for the owner from the list.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "writer_ids",
              "doc": "<p>Comma separated list of IDs identifying users who can update an object.\ncontrolled by this ACL.</p>\n\n<p>To remove all users from the <code>writers</code> list, simply set <code>writer_ids=\"\"</code>.\nThis removes all users except for the owner from the list.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "public_read",
              "doc": "<p>Determines whether objects controlled by this ArrowDB are publically readable.</p>\n\n<p>Default is false.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "public_write",
              "doc": "<p>Determines whether objects controlled by this ArrowDB are publically writable.</p>\n\n<p>Default is false.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to update the ACL object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to update an ACL object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "acls",
              "doc": "<p>A single-element array containing the updated ArrowDB object.</p>\n",
              "optional": true,
              "type": "ACLs[]",
              "html_type": "ACLs[]"
            }
          ],
          "owner": "ACLs",
          "shortDoc": "Updates an ACL object to change its access control list. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Chats",
    "doc": "<p>The Chats API provides methods for sending chat messages from one user to another user,\nor to a group of users called a <em>chat group</em>.</p>\n\n<p>Chat groups are formed implicitly when users send chat messages. For example, if\nuser A sends a message to users B and C, a chat group is formed with users A, B, and\nC. If user C subsequently sends a message to user B, a second chat group is formed with users B\nand C as members.</p>\n\n<p>If you have configured push notifications for your application, you can optionally\nspecify to a send push notifications to message recipients' devices as well.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "chatgroup",
          "id": "property-chatgroup",
          "doc": "<p>The chat group that the chat belongs to.</p>\n",
          "type": "Hash",
          "owner": "Chats",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this user object.</p>\n",
          "type": "Date",
          "owner": "Chats",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "String/Hash",
          "owner": "Chats",
          "shortDoc": "User defined fields. ...",
          "html_type": "String/Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated unique ID for this chat message.</p>\n",
          "type": "String",
          "owner": "Chats",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "message",
          "id": "property-message",
          "doc": "<p>Chat message.</p>\n",
          "type": "String",
          "owner": "Chats",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>New photo to attach to the chat message.</p>\n",
          "type": "Photos",
          "owner": "Chats",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/Chats.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this user object.</p>\n",
          "type": "Date",
          "owner": "Chats",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Chat objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "chats/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Chat objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"chats/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/chats/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"chatsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Chat objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"chats/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Chat objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"chats/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.chatsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Chat objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Chats",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Sends a chat message to another user or a group of users.</p>\n\n<p>Sending a message creates a new chat group if there is no existing chat group\ncontaining the current user and the designated recipients.</p>\n\n<p>To generate a push notification, include the <code>channel</code> and\n<code>payload</code> parameters.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "chats/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example sends a chat message to a list of users and checks the response.</p>\n\n<pre><code>Cloud.Chats.create({\n    to_ids: ids.join(','),\n    message: 'Good morning'\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.chats.length; i++) {\n            var chat = e.chats[i];\n            alert('Success:\\n' +\n                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\\n' +\n                'Updated: ' + chat.updated_at + '\\n' +\n                'Message: ' + chat.message);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request with <code>response_json_depth</code> set to <em>2</em>:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"message=What's up?\" -F \"photo=@photo.jpg\" -F \"to_ids=54ac083d03545008a500037b,54ac085f035450089a0003ac\" \"http://api.cloud.appcelerator.com/v1/chats/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;response_json_depth=2&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createChatMessage\"\n  },\n  \"response\": {\n    \"chats\": [\n      {\n        \"id\": \"54ac1ba354f9d309ff000032\",\n        \"created_at\": \"2015-01-06T17:30:12+0000\",\n        \"updated_at\": \"2015-01-06T17:30:12+0000\",\n        \"message\": \"Hi again\",\n        \"from\": {\n          \"id\": \"54ac18aa035450089a0003c3\",\n          \"created_at\": \"2015-01-06T17:17:30+0000\",\n          \"updated_at\": \"2015-01-06T17:17:30+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2015-01-06T17:17:30+0000\",\n          \"username\": \"user124\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        },\n        \"photo\": {\n          \"id\": \"54ac1ba354f9d309ff000033\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 302481,\n          \"md5\": \"897273d704b02dec5d069749e2f23d12\",\n          \"created_at\": \"2015-01-06T17:30:12+0000\",\n          \"updated_at\": \"2015-01-06T17:30:12+0000\",\n          \"processed\": false,\n          \"content_type\": \"image/jpeg\",\n          \"user_id\": \"54ac18aa035450089a0003c3\"\n        },\n        \"chat_group\": {\n          \"id\": \"54ac19ae03545008a50003aa\",\n          \"created_at\": \"2015-01-06T17:21:50+0000\",\n          \"updated_at\": \"2015-01-06T17:30:12+0000\",\n          \"message\": \"Hi again\",\n          \"participate_ids\": [\n            \"54ac083d03545008a500037b\",\n            \"54ac085f035450089a0003ac\",\n            \"54ac18aa035450089a0003c3\"\n          ]\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"to_ids\": @[@\"4edef6f7d9ca7247b8000004\", @\"4edf0c20d9ca724a82000003\"],\n    @\"message\": @\"Good morning\"\n};\n\n[APSChats create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"to_ids\", \"4edef6f7d9ca7247b8000004,4edf0c20d9ca724a82000003\");\ndata.put(\"message\", \"Hello!\");\n\ntry {\n    APSChats.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Chat sent!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.chatsCreate({\n    to_ids: ids.join(','),\n    message: 'Good morning'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.chats[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "to_ids",
              "doc": "<p>Comma-separated list of user ID(s) to receive the message. The current user ID and <code>to_ids</code>\ntogether determine which chat group a message belongs to. The chat group is\ncreated if necessary.</p>\n\n<p>You must specify either a <code>to_ids</code> list or the <code>chat_group_id</code> for an existing\nchat group.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "chat_group_id",
              "doc": "<p>Identifies an existing chat group by ID. If you already know the id\nof a <a href=\"#!/api/Chats-property-chatgroup\" rel=\"Chats-property-chatgroup\" class=\"docClass\">chat group</a>, you can use it to specify\nwhich chat group this message should go to.</p>\n\n<p>You must specify either a <code>to_ids</code> list or the <code>chat_group_id</code> for an existing\nchat group.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "message",
              "doc": "<p>Message to send.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach to the chat message.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach to the chat message.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "channel",
              "doc": "<p>Channel for a push notification.</p>\n\n<p>To send a push notification to the recipients after a new chat\nmessage is created, you can pass in the <code>channel</code> and <code>payload</code> parameters.\nFor more information, see <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">PushNotifications.notify</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "payload",
              "doc": "<p>Message payload for push notification.</p>\n\n<p>The message defined in <code>payload</code> will be delivered to all the recipients as long\nas they have <a href=\"#!/api/PushNotifications-method-subscribe\" rel=\"PushNotifications-method-subscribe\" class=\"docClass\">subscribed</a> to the specified channel.</p>\n\n<p>For example, if all of your app's users are subscribed to channel \"Chat\", then\nyou can pass channel -- \"Chat\", and payload:</p>\n\n<pre><code>{\n    \"from\": \"sender user_id\",\n    \"message\": \"Hello everyone!\",\n    \"sound\": \"default\",\n     \"alert\" : \"From Joe: Hello everyone!\"\n}\n</code></pre>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "su_id",
              "doc": "<p>Send on behalf of the identified user.</p>\n\n<p>Current user must be an application admin to send a message on behalf of\nanother user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>To receive a list of participant IDs, set <code>response_json_depth</code> to <strong>2</strong>.\nIf you have already cached all the user objects participating\nin the chat group and wish to receive a smaller JSON response, you can set\n<code>response_json_depth</code> to <strong>1</strong> to remove participant user's info from chat group in\nthe JSON response.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "chats",
              "doc": "<p>Single-element array containing the new chat message.</p>\n",
              "optional": true,
              "type": "Chats[]",
              "html_type": "Chats[]"
            }
          ],
          "owner": "Chats",
          "shortDoc": "Sends a chat message to another user or a group of users. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a chat message.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "chats/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0.</p>\n\n<pre><code>Cloud.Chats.remove({\n    chat_id: savedChatId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"http://api.cloud.appcelerator.com/v1/chats/delete.json?key=&lt;YOUR API APP KEY&gt;&amp;chat_id=4d8bc645d0afbe0363000013\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteChat\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"chat_id\": savedChatId\n};\n\n[APSChats remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"chat_id\", \"4d713b4f6f70951043000001\");\n\ntry {\n    APSChats.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Chat removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.chatsDelete({\n    chat_id: savedChatId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Deleted!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "chat_id",
              "doc": "<p>ID of the chat message to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the Chat object on behalf of. The user must be the sender of the chat\nmessage.</p>\n\n<p>Current user must be an application admin to send a message on behalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Chats",
          "shortDoc": "Deletes a chat message. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "get_chat_groups",
          "deprecated": false,
          "id": "method-get_chat_groups",
          "doc": "<p>Lists chat groups.</p>\n\n<p>If user A sends chat message to user B and C, users A, B and C automatically\nform a chat group. Use this API to get a list of chat groups the current user\nbelongs to.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "chats/get_chat_groups.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a lists of chat groups that the current user belongs to and checks\nthe response.</p>\n\n<pre><code>Cloud.Chats.getChatGroups(function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.chat_groups.length; i++) {\n            var group = e.chat_groups[i];\n            alert('Success:\\n' +\n                'id: ' + group.id + '\\n' +\n                'created_at: ' + group.created_at + '\\n' +\n                'number of users: ' + group.participate_users.length);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>Get a list of chat groups the current user belongs to, sorted by groups with most recent activity first.\n$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/chats/get_chat_groups.json?order=-updated_at&amp;key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"getChatGroups\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 3\n  },\n  \"response\": {\n    \"chat_groups\": [\n      {\n        \"id\": \"4ee04f4dd9ca72680d000009\",\n        \"created_at\": \"2011-12-08T05:46:53+0000\",\n        \"updated_at\": \"2011-12-08T05:46:53+0000\",\n        \"participate_users\": [\n          {\n            \"id\": \"4ee04f4cd9ca72680d000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\"\n          }\n        ]\n      },\n      {\n        \"id\": \"4ee04f4dd9ca72680d000017\",\n        \"created_at\": \"2011-12-08T05:46:53+0000\",\n        \"updated_at\": \"2011-12-08T05:46:53+0000\",\n        \"participate_users\": [\n          {\n            \"id\": \"4ee04f4cd9ca72680d000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000003\",\n            \"first_name\": \"Alice\",\n            \"last_name\": \"Gal\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"alice\",\n            \"email\": \"alice@gal.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000004\",\n            \"first_name\": \"Joe\",\n            \"last_name\": \"Guy\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"joe\",\n            \"email\": \"joe@guy.com\"\n          }\n        ]\n      },\n      {\n        \"id\": \"4ee04f4dd9ca72680d000012\",\n        \"created_at\": \"2011-12-08T05:46:53+0000\",\n        \"updated_at\": \"2011-12-08T05:46:53+0000\",\n        \"participate_users\": [\n          {\n            \"id\": \"4ee04f4cd9ca72680d000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          {\n            \"id\": \"4ee04f4cd9ca72680d000004\",\n            \"first_name\": \"Joe\",\n            \"last_name\": \"Guy\",\n            \"created_at\": \"2011-12-08T05:46:52+0000\",\n            \"updated_at\": \"2011-12-08T05:46:52+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"joe\",\n            \"email\": \"joe@guy.com\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSChats getChatGroups:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu groups\", (unsigned long)((NSArray *) e.response[@\"chat_groups\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSChats.getChatGroups(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject chat_groups = e.getResponse().getJSONArray(\"chat_groups\");\n                    // Do something with the chat_groups array\n                } catch (JSONException err) {\n                    Log.e(\"APSChats\", \"Exception thrown: \" + err.toString())\n                }\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/chatgroup.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.chatsGetChatGroups(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.chat_groups.forEach(function(chat) {\n            console.log(chat);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.\nSee the <a href=\"#!/guide/search_query\">Search and Query guide</a> for more information.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.\nSee the <a href=\"#!/guide/search_query\">Search and Query guide</a> for more information.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in JSON response.\nTo reduce server API calls the JSON response may\ninclude, in addition to the objects returned by the query, other important data related\nto the returned objects, such as object's owner or referencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "chat_groups",
              "doc": "<p>List of chat groups. Each chat group entry has the following fields:</p>\n\n<ul>\n<li><p><code>id</code>. ID of the chat group.</p></li>\n<li><p><code>created_at</code>. Timestamp when the first message in the chat group was sent.</p></li>\n<li><p><code>updated_at</code>.  Timestamp of the most recent message in the chat group.</p></li>\n<li><p><code>participate_users</code>. List of <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> objects for the users in the\n chat group.</p></li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash[]",
              "html_type": "Hash[]"
            }
          ],
          "owner": "Chats",
          "shortDoc": "Lists chat groups. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs a custom query of chat messages with sorting and pagination. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>You can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including a <code>where</code> clause to limit the results to objects whose IDs fall\nwithin a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "chats/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of chat messages and checks the response.</p>\n\n<pre><code>Cloud.Chats.query({\n    participate_ids: ids.join(','),\n    where: {\n        updated_at: { '$gt': last_update_time }\n    }\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.chats.length; i++) {\n            var chat = e.chats[i];\n            alert('Success:\\n' +\n                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\\n' +\n                'Updated: ' + chat.updated_at + '\\n' +\n                'Message: ' + chat.message);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request. Assuming each chat message has an\n<a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">assigned geo location</a>,\nthe following finds all chat messages among users Bob (id: 4ee05d69d9ca726b85000002),\nAlice (id: 4ee05d69d9ca726b85000003), and userJoe (id: 4ee05d69d9ca726b85000004) sent\nafter 2011-11-17T22:53:48+0000, and within 5 miles of latitude 37.12 and longitude -122.23.\nNote that you need to convert miles to radians (5/3959 = 0.00126).</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'participate_ids=4ee05d69d9ca726b85000002,4ee05d69d9ca726b85000003,4ee05d69d9ca726b85000004' --data-urlencode 'where={\"created_at\":{\"$gte\":\"2011-11-17T22:53:48+0000\"}, \"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' --data-urlencode 'order=created_at' \"https://api.cloud.appcelerator.com/v1/chats/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;count=true&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryChatMessages\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"chats\": [\n      {\n        \"id\": \"4ee05d6ad9ca726b85000018\",\n        \"created_at\": \"2011-12-08T06:47:06+0000\",\n        \"updated_at\": \"2011-12-08T06:47:06+0000\",\n        \"message\": \"What's up?\",\n         \"custom_fields\": {\n           \"coordinates\": [-122.23, 37.12] }\n         },\n        \"from\": {\n          \"id\": \"4ee05d69d9ca726b85000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-12-08T06:47:05+0000\",\n          \"updated_at\": \"2011-12-08T06:47:06+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"chat_group\": {\n          \"id\": \"4ee05d6ad9ca726b85000017\",\n          \"created_at\": \"2011-12-08T06:47:06+0000\",\n          \"updated_at\": \"2011-12-08T06:47:06+0000\",\n          \"participate_users\": [\n            {\n              \"id\": \"4ee05d69d9ca726b85000002\",\n              \"first_name\": \"Bob\",\n              \"last_name\": \"Dude\",\n              \"created_at\": \"2011-12-08T06:47:05+0000\",\n              \"updated_at\": \"2011-12-08T06:47:06+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"username\": \"bob\",\n              \"email\": \"bob@dude.com\"\n            },\n            {\n              \"id\": \"4ee05d69d9ca726b85000003\",\n              \"first_name\": \"Alice\",\n              \"last_name\": \"Gal\",\n              \"created_at\": \"2011-12-08T06:47:05+0000\",\n              \"updated_at\": \"2011-12-08T06:47:05+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"username\": \"alice\",\n              \"email\": \"alice@gal.com\"\n            },\n            {\n              \"id\": \"4ee05d69d9ca726b85000004\",\n              \"first_name\": \"Joe\",\n              \"last_name\": \"Guy\",\n              \"created_at\": \"2011-12-08T06:47:05+0000\",\n              \"updated_at\": \"2011-12-08T06:47:05+0000\",\n              \"external_accounts\": [\n\n              ],\n              \"username\": \"joe\",\n              \"email\": \"joe@guy.com\"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"participate_ids\": @[@\"4edef6f7d9ca7247b8000004\", @\"4edf0c20d9ca724a82000003\"],\n    @\"where\": @{\n        @\"updated_at\": @{\n            @\"$gt\": @\"2013-12-26T19:00:00+0000\"\n        }\n    }\n};\n\n[APSChats query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu groups\", (unsigned long)((NSArray *) e.response[@\"chats\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:\n    APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');</p>\n\n<pre><code>HashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\ndata.put(\"participate_ids\", \"4ee05d69d9ca726b85000002,4ee05d69d9ca726b85000003,4ee05d69d9ca726b85000004\");\ndata.put(\"order\", \"created_at\");\n\ntry {\n    APSChats.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray chats = e.getResponse().getJSONArray(\"chats\");\n                    if (chats.length() &lt;= 0) {\n                        Log.i(\"APSChats\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; chats.length(); i++) {\n                            JSONObject chat = chat.getJSONObject(i);\n                            Log.i(\"APSChats\", chat.getString(\"message\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSChats\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSChats\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSChats\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSChats\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Chats/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.chatsQuery({\n    participate_ids: ids.join(','),\n    where: {\n        updated_at: { '$gt': last_update_time }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.chats.forEach(function(chat) {\n            console.log(chat);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "participate_ids",
              "doc": "<p>Comma-separated list of user ID(s) of the users belonging to a chat group. You can use\nthis field to narrow down a query to a certain chat group. The current user can\nonly query chat messages in chat groups he or she is participating in.</p>\n\n<p>For example, suppose that users A, B and C form one chat group, and users B and C form a second chat group without A.\nUser A does not have permission to query chats in the chat group that consists of\nonly users B and C.</p>\n\n<p>You must specify either a <code>participate_ids</code> list or the <code>chat_group_id</code> of an existing\nchat group to query.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "chat_group_id",
              "doc": "<p>A chat group's id. Instead of using a <code>participate_ids</code> list, if you already\nknow the id of a chat group, you can use it to narrow down a query.</p>\n\n<p>You must specify either a <code>participate_ids</code> list or the <code>chat_group_id</code> of an existing\nchat group to query.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>You can query any of the standard values for a Chat object, as well as any\ncustom fields that contain simple values, such as String, Number or Boolean\nvalues.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "chats",
              "doc": "<p>List of chat objects matching the query.</p>\n",
              "optional": true,
              "type": "Chats[]",
              "html_type": "Chats[]"
            }
          ],
          "owner": "Chats",
          "shortDoc": "Performs a custom query of chat messages with sorting and pagination. ...",
          "html_meta": {
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Checkins",
    "doc": "<p>The Checkins API provides methods to create and manage checkins to a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Place</a> or an\n<a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Event</a>.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Message creation date.</p>\n",
          "type": "Date",
          "owner": "Checkins",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "String/Hash",
          "owner": "Checkins",
          "shortDoc": "User defined fields. ...",
          "html_type": "String/Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "event",
          "id": "property-event",
          "doc": "<p>The event object associated with the checkin.</p>\n",
          "type": "Events",
          "owner": "Checkins",
          "html_type": "Events",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated unique ID for this checkin.</p>\n",
          "type": "String",
          "owner": "Checkins",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "message",
          "id": "property-message",
          "doc": "<p>Checkin message.</p>\n",
          "type": "String",
          "owner": "Checkins",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>The primary photo for the checkin.</p>\n",
          "type": "Photos",
          "owner": "Checkins",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "place",
          "id": "property-place",
          "doc": "<p>The place object associated with the checkin.</p>\n",
          "type": "Places",
          "owner": "Checkins",
          "html_type": "Places",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>Comma-separated list of tags associated with this checkin.</p>\n",
          "type": "String",
          "owner": "Checkins",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Message update date.</p>\n",
          "type": "Date",
          "owner": "Checkins",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/Checkins.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Checkin owner.</p>\n",
          "type": "Users",
          "owner": "Checkins",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Checkin objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Checkin objects are deleted. Note that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process. The <a href=\"#!/api/Checkins-property-place\" rel=\"Checkins-property-place\" class=\"docClass\">Place</a>,\n<a href=\"#!/api/Checkins-property-event\" rel=\"Checkins-property-event\" class=\"docClass\">Event</a>, or <a href=\"#!/api/Checkins-property-photo\" rel=\"Checkins-property-photo\" class=\"docClass\">Photo</a> associated with any of the matched objects is\nnot deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "checkins/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Checkin objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"checkins/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Checkin objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/checkins/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Checkin objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"checkins/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Checkin object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Checkin objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"checkins/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Checkin objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.checkinsBatchDelete({\n    where: {\n        favorite_color: 'blue'\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Baleeted!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Checkins objects to delete.\nIf not specified, all Checkins objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Checkins",
          "shortDoc": "Deletes Checkin objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Checkin objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "checkins/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Checkin objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"checkins/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/checkins/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"checkinsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Checkin objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"checkins/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Checkin objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"checkins/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.checkinsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Checkin objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Checkins",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a checkin associated with either a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object.</p>\n\n<p>You should specify either a Places or Events object, but not both. If both are\nprovided, the Places object will be used.</p>\n\n<p>A checkin message is optional. The optional photo parameter contains the\nbinary data stream representing the photo included with the checkin. If a\nphoto is included, the response includes a \"processed\" flag which indicates if\nthe photo has been resized and stored reliably in the Appcelerator Cloud\nServices storage engine. This will be false initially be false.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "checkins/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a checkin and checks the response.</p>\n\n<pre><code>Cloud.Checkins.create({\n    place_id: myPlaceId,\n    message: 'What a great view!',\n    photo: Titanium.Filesystem.getFile('photo.jpg')\n}, function (e) {\n    if (e.success) {\n        var checkin = e.checkins[0];\n        alert('Success:\\\\n' +\n            'id: ' + checkin.id + '\\\\n' +\n            'place: ' + checkin.place.name);\n    } else {\n        alert('Error:\\\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"message=Try the grilled steak burrito\" -F \"place_id=4d6f13e96f70953608000012\" -F \"photo=@photo.jpg\" https://api.cloud.appcelerator.com/v1/checkins/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createCheckin\"\n  },\n  \"response\": {\n    \"checkins\": [\n      {\n        \"id\":\"4d713b4f6f70951043000001\",\n        \"message\":\"Try the grilled steak burrito\",\n        \"created_at\":\"2011-03-04T19:19:43+0000\",\n        \"updated_at\":\"2011-03-04T19:19:43+0000\",\n        \"place\": {\n          \"id\":\"4d6f13e96f70953608000012\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-03T04:07:05+0000\",\n          \"updated_at\":\"2011-03-03T04:07:05+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"lat\":37.784732,\n          \"lng\":-122.395441\n        },\n        \"user\": {\n          \"id\":\"4d6e77386f70950c89000001\",\n          \"first_name\":\"Michael\",\n          \"last_name\":\"Goff\",\n          \"created_at\":\"2011-03-02T16:58:32+0000\",\n          \"updated_at\":\"2011-03-02T17:51:42+0000\"\n        },\n        \"photo\": {\n          \"id\":\"4d713b4f6f70951043000002\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-03-04T19:19:43+0000\",\n          \"updated_at\":\"2011-03-04T19:19:43+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": myPlaceId,\n      @\"message\": @\"What a great view!\",\n      @\"photo\": UIImageJPEGRepresentation(image, 1.0)\n};\n\n[APSCheckins create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d6f13e96f70953608000012\");\n\ntry {\n    APSCheckins.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSCheckins\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSCheckins\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSCheckins\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;'),\n    fs = require('fs');\narrowDBApp.checkinsCreate({\n    place_id: myPlaceId,\n    message: 'What a great view!',\n    photo: fs.createFileStream('photo.jpg')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.checkins);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "place_id",
              "doc": "<p>ID of the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> to check in to.</p>\n\n<p>You can associate a checkin with either a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> to check in to.</p>\n\n<p>You can associate a checkin with either a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "message",
              "doc": "<p>Message to attach to the checkin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for the checkin.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for the checkin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.</p>\n\n<p>In order to reduce server API calls from an application, the JSON response may\ninclude not just the objects that are being queried/searched, but also\nimportant data related to the queried objects, such as the object's owner or\nreferencing objects.</p>\n\n<p>Default depth is 1. Valid values are 1-8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this checkin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the checkin on behalf of.</p>\n\n<p>The current login user must be an application admin to create a checkin on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "checkins",
              "doc": "<p>Single element array containing the newly-created checkin.</p>\n",
              "optional": true,
              "type": "Checkins[]",
              "html_type": "Checkins[]"
            }
          ],
          "owner": "Checkins",
          "shortDoc": "Creates a checkin associated with either a Places or Events object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a checkin.</p>\n\n<p>The <a href=\"#!/api/Checkins-property-place\" rel=\"Checkins-property-place\" class=\"docClass\">Place</a>, <a href=\"#!/api/Checkins-property-event\" rel=\"Checkins-property-event\" class=\"docClass\">Event</a>, or <a href=\"#!/api/Checkins-property-photo\" rel=\"Checkins-property-photo\" class=\"docClass\">Photo</a> associated with the checkin\nis not deleted.</p>\n\n<p>An application admin can delete any Checkin object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "checkins/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a checkin and checks the response.</p>\n\n<pre><code>Cloud.Checkins.remove({\n    checkin_id: myCheckinId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE http://api.cloud.appcelerator.com/v1/checkins/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;checkin_id=4d8bc645d0afbe0363000013\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteCheckin\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"checkin_id\": myCheckinId\n};\n\n[APSCheckins remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"checkin_id\", \"4d713b4f6f70951043000001\");\n\ntry {\n    APSCheckins.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSCheckins\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSCheckins\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSCheckins\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.checkinsDelete({\n    checkin_id: myCheckinId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "checkin_id",
              "doc": "<p>ID of the checkin to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the Checkin object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to delete a Checkin object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "Checkins",
          "shortDoc": "Deletes a checkin. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs a custom query of checkins with sorting and pagination. Currently you\ncan not query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "checkins/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about checkins and checks the response.</p>\n\n<pre><code>Cloud.Checkins.query({\n    page: 1,\n    per_page: 20,\n    order: '-updated_at'\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.checkins.length; i++) {\n            var checkin = e.checkins[i];\n            alert('Success:\\n' +\n               'id: ' + checkin.id + '\\n' +\n               'place: ' + checkin.place.name + '\\n' +\n               'updated_at: ' + checkin.updated_at + '\\n' +\n               'user: ' + checkin.user.first_name + ' ' + checkin.user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>The following cURL request searches checkins by location, if your app assigned a geographic\nlocation to each checkin (see <a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">Geographic Coordinates in Custom Fields</a>.</p>\n\n<p>The request includes <code>show_user_like=true</code> as a query string parameter. The sample JSON response\nincludes a single Checkins object that contains <code>\"current_user_liked\":\"true\"</code>,\nindicating that the current user has liked this object.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/checkins/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;show_user_like=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryCheckins\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"checkins\": [\n      {\n        \"id\":\"4d713b4f6f70951043000001\",\n        \"message\":\"Try the grilled steak burrito\",\n        \"created_at\":\"2011-03-04T19:19:43+0000\",\n        \"updated_at\":\"2011-03-04T19:19:43+0000\",\n        \"custom_fields\": {\n          \"coordinates\": [-122.23, 37.12] }\n        },\n        \"current_user_liked\": true,\n        \"place\": {\n          \"id\":\"4d6f13e96f70953608000012\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-03T04:07:05+0000\",\n          \"updated_at\":\"2011-03-03T04:07:05+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"lat\":37.784732,\n          \"lng\":-122.395441\n        },\n        \"user\": {\n          \"id\":\"4d6e77386f70950c89000001\",\n          \"first_name\":\"Michael\",\n          \"last_name\":\"Goff\",\n          \"created_at\":\"2011-03-02T16:58:32+0000\",\n          \"updated_at\":\"2011-03-02T17:51:42+0000\"\n        },\n        \"photo\": {\n          \"id\":\"4d713b4f6f70951043000002\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-03-04T19:19:43+0000\",\n          \"updated_at\":\"2011-03-04T19:19:47+0000\",\n          \"processed\":true,\n          \"content_type\":\"image/jpeg\",\n          \"urls\": {\n            \"square_75\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_square_75.jpg\",\n            \"thumb_100\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_thumb_100.jpg\",\n            \"small_240\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_small_240.jpg\",\n            \"medium_500\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_medium_500.jpg\",\n            \"medium_640\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_medium_640.jpg\",\n            \"large_1024\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_large_1024.jpg\",\n            \"original\":\"http://storage.appcelerator.com/osxW8CUVzwuIlxjJZC1HS8hJdc3mV9ON/photos/4d713b4f6f70951043000002/photo_original.jpg\"\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"page\": @1,\n    @\"per_page\": @20,\n    @\"order\": @\"-updated_at\"\n};\n\n[APSCheckins query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu checkins\", (unsigned long)((NSArray *) e.response[@\"checkins\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'coordinates': {'$nearSphere': [-122.1,37.1], '$maxDistance': 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSCheckins.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray checkins = e.getResponse().getJSONArray(\"checkins\");\n                    if (checkins.length() &lt;= 0) {\n                        Log.i(\"APSCheckins\", \"No Results!\");\n                    } else {\n                        // Do something with the checkins array\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSCheckins\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSCheckins\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSCheckins\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSCheckins\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.checkinsQuery({\n    limit: 20,\n    order: '-updated_at'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.checkins.forEach(function(checkin){\n            console.log(checkin);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5.\nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5.\nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>. For example:</p>\n\n<pre><code>sel={\"all\":[\"username\",\"first_name\",\"confirmed_at\"]}\n</code></pre>\n\n<p>Note: you need to use \"all\" then a list of fields you wan to sel as it applies to the nested json.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Checkin object in the response includes \"current_user_liked: true\"<code>\nif the current user has liked the object. If the user has not liked the object, the\n</code>current_user_liked` field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>. For example:</p>\n\n<pre><code>unsel={\"all\":[\"username\",\"first_name\",\"admin\"]}\n</code></pre>\n\n<p>Note: you need to use \"all\" then a list of fields you wan to unsel as it applies to the nested json.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "checkins",
              "doc": "<p>List of checkins matching the query parameters.</p>\n",
              "optional": true,
              "type": "Checkins[]",
              "html_type": "Checkins[]"
            }
          ],
          "owner": "Checkins",
          "shortDoc": "Performs a custom query of checkins with sorting and pagination. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Returns the contents of the identified checkin.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "checkins/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about a checkin and checks the response.</p>\n\n<pre><code>Cloud.Checkins.show({\n    checkin_id: myCheckinId\n}, function (e) {\n    if (e.success) {\n        var checkin = e.checkins[0];\n        alert('Success:\\n' +\n            'id: ' + checkin.id + '\\n' +\n            'place: ' + checkin.place.name + '\\n' +\n            'updated_at: ' + checkin.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that passes <code>show_user_like=true</code> as a parameter; the Checkin object\nreturned in the JSON response contains <code>\"current_user_liked\": true</code>, indicating that the current user\nliked the retrieved object.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/checkins/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;checkin_id=4d8bc645d0afbe0363000013&amp;show_user_like=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showCheckins\"\n  },\n  \"response\": {\n    \"checkins\": [\n      {\n        \"id\":\"4d8bc645d0afbe0363000013\",\n        \"created_at\":\"2011-03-24T22:31:34+0000\",\n        \"current_user_liked\": true,\n        \"updated_at\":\"2011-03-24T22:31:34+0000\",\n        \"place\": {\n          \"id\":\"4d8bc62ad0afbe0363000012\",\n          \"name\":\"Cocoafish\",\n          \"created_at\":\"2011-03-24T22:31:06+0000\",\n          \"updated_at\":\"2011-03-24T22:31:06+0000\",\n          \"address\":\"58 South Park Ave.\",\n          \"city\":\"San Francisco\",\n          \"state\":\"California\",\n          \"country\":\"United States\",\n          \"website\":\"cocoafish.com\",\n          \"twitter\":\"cocoafish\",\n          \"latitude\":37.782227,\n          \"longitude\":-122.393159\n        },\n        \"user\": {\n          \"id\":\"4d7e6493d0afbe01d8000001\",\n          \"first_name\":\"Mike\",\n          \"last_name\":\"Goff\",\n          \"created_at\":\"2011-03-14T18:55:15+0000\",\n          \"updated_at\":\"2011-03-24T18:11:52+0000\",\n          \"photo\": {\n            \"id\":\"4d88448ed0afbe0e4e000003\",\n            \"filename\":\"photo.jpg\",\n            \"size\":584344,\n            \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\":\"2011-03-22T06:41:18+0000\",\n            \"updated_at\":\"2011-03-22T06:41:24+0000\",\n            \"processed\":true,\n            \"collection_name\":\"_cocoafish_user_profile\",\n            \"content_type\":\"image/jpeg\",\n            \"urls\": {\n            \"square_75\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_square_75.jpg\",\n            \"thumb_100\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_thumb_100.jpg\",\n            \"small_240\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_small_240.jpg\",\n            \"medium_500\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_medium_500.jpg\",\n            \"medium_640\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_medium_640.jpg\",\n            \"large_1024\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_large_1024.jpg\",\n            \"original\":\"http://storage.appcelerator.com/gjvI579NDKJNuhBBj9HGWhbGDISHcCvL/photos/4d88448ed0afbe0e4e000003/photo_original.jpg\"\n                      }\n                    }\n                  },\n                  \"photo\": {\n                    \"id\":\"4d8bc645d0afbe0363000014\",\n                    \"filename\":\"photo.jpg\",\n                    \"size\":584344,\n                    \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n                    \"created_at\":\"2011-03-24T22:31:33+0000\",\n                    \"updated_at\":\"2011-03-24T22:31:33+0000\",\n                    \"processed\":false\n                  }\n                }\n              ]\n            }\n          }\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"checkin_id\": myCheckinId\n};\n\n[APSCheckins show:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Show checkin %@\", ((NSArray *) e.response[@\"checkins\"])[0][@\"id\"] ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"checkin_id\", \"4d713b4f6f70951043000001\");\n\ntry {\n    APSCheckins.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSCheckins\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSCheckins\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSCheckins\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSCheckins\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.checkinsShow({\n    checkin_id: myCheckinId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.checkins);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "checkin_id",
              "doc": "<p>ID of the checkin to show.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Checkin object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "checkins",
              "doc": "<p>Single element array containing the identified checkin.</p>\n",
              "optional": true,
              "type": "Checkins[]",
              "html_type": "Checkins[]"
            }
          ],
          "owner": "Checkins",
          "shortDoc": "Returns the contents of the identified checkin. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates a checkin for the currenty logged in user.</p>\n\n<p>Application admins can update another user's checkin on their behalf by including the\n<code>su_id</code> field in the request.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "checkins/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to update a Checkin object.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"checkins/update.json\",\n    method : \"PUT\",\n    data: {\n        \"checkin_id\": \"4d713b4f6f70951043000001\",\n        \"message\": \"Try the grilled steak burrito with guacamole!\"\n    }\n}, function(e) {\n    if (e.success) {\n        alert(\"All Review objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"message=Try the grilled steak burrito with guacamole!\" -F \"checkin_id=4d713b4f6f70951043000001\" \"https://api.cloud.appcelerator.com/v1/checkins/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updateCheckin\"\n  },\n  \"response\": {\n    \"checkins\": [\n      {\n        \"id\":\"4d713b4f6f70951043000001\",\n        \"message\":\"Try the grilled steak burrito with guacamole!\",\n        \"created_at\":\"2011-03-04T19:19:43+0000\",\n        \"updated_at\":\"2011-03-04T20:31:50+0000\",\n        \"place\": {\n          \"id\":\"4d6f13e96f70953608000012\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-03T04:07:05+0000\",\n          \"updated_at\":\"2011-03-03T04:07:05+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"lat\":37.784732,\n          \"lng\":-122.395441\n        },\n        \"user\": {\n          \"id\":\"4d6e77386f70950c89000001\",\n          \"first_name\":\"Michael\",\n          \"last_name\":\"Goff\",\n          \"created_at\":\"2011-03-02T16:58:32+0000\",\n          \"updated_at\":\"2011-03-02T17:51:42+0000\"\n        },\n        \"photo\": {\n          \"id\":\"4d713b4f6f70951043000002\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-03-04T19:19:43+0000\",\n          \"updated_at\":\"2011-03-04T19:19:43+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to update a Checkin object.</p>\n\n<pre><code>NSDictionary *params = @{\n    @\"checkin_id\": @\"4d713b4f6f70951043000001\",\n    @\"message\": @\"Try the grilled steak burrito with guacamole!\"\n};\n\n[[APSCloud sharedInstance] sendRequest:@\"checkins/update.json\" method:@\"PUT\" data:params handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to update a Checkin object.</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"checkin_id\", \"4d713b4f6f70951043000001\");\ndata.put(\"message\", \"Try the grilled steak burrito with guacamole!\");\n\nAPSCloud.getInstance().sendRequest(\"checkins/update.json\", \"PUT\", data, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(e.getResponseString())\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Checkins/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.checkinsUpdate({\n    'checkin_id': '4d713b4f6f70951043000001',\n    'message': 'Try the grilled steak burrito with guacamole!'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.checkins);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "checkin_id",
              "doc": "<p>ID of the <a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a> to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>ID of the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> to check in to.</p>\n\n<p>You can associate a checkin with either a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> to check in to.</p>\n\n<p>You can associate a checkin with either a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> or <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "message",
              "doc": "<p>Message to attach to the checkin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a> object to attach as the primary photo for the checkin.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a> object to attach as the primary photo for the checkin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "tags",
              "doc": "<p>Comma-separated list of tags for this checkin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>ID of <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> to update the checkin on behalf of.</p>\n\n<p>The current login user must be an application admin to create a checkin on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "checkins",
              "doc": "<p>Single element array containing the updated checkin.</p>\n",
              "optional": true,
              "type": "Checkins[]",
              "html_type": "Checkins[]"
            }
          ],
          "owner": "Checkins",
          "shortDoc": "Updates a checkin for the currenty logged in user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Clients",
    "doc": "<p>The Clients API lets you lookup a user location based on IP address if the\nuser's device fails to provide location information.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/Clients.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/Clients.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [
        {
          "tagname": "method",
          "name": "geolocate",
          "deprecated": false,
          "id": "method-geolocate",
          "doc": "<p>Provides location data about the mobile device or computer your app is\nrunning on based on its IP address. This feature uses <a href=\"https://www.maxmind.com/app/ip-location\">MaxMind\nGeoIP</a> to return the most accurate\nIP-based geolocation data possible. Note that the results are not not based on\nGPS signals nor WiFi triangulation commonly used on mobile devices. See\n<a href=\"https://www.maxmind.com/app/city_accuracy\">MaxMind GeoIP city accuracy</a> for\nmore information. An example use of this data is to verify the country that\nthe app user in, so that access can be given to application data.</p>\n\n<p>An error will be returned of the location cannot be determined from the IP\naddress. A successful lookup will return at minimum a <a href=\"https://www.maxmind.com/app/iso3166\">ISO 3166 country\ncode</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "clients/geolocate.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example locates a client and checks the response.</p>\n\n<pre><code>Cloud.Clients.geolocate({\n    ip_address: clientIPAddress\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'ip_address: ' + e.ip_address + '\\n' +\n            'latitude: ' + e.location.latitude + '\\n' +\n            'longitude: ' + e.location.longitude);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/clients/geolocate.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"geolocateClient\"\n  },\n  \"response\": {\n    \"ip_address\": \"184.72.37.109\",\n    \"location\": {\n      \"country_code\": \"US\",\n      \"city\": \"Seattle\",\n      \"state\": \"WA\",\n      \"postal_code\": \"98144\",\n      \"latitude\": 47.5839,\n      \"longitude\": -122.2995\n    }\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"ip_address\": clientIPAddress\n};\n\n[APSClients geolocate:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSDictionary *loc = e.response[@\"location\"];\n        NSString *message = [NSString stringWithFormat:@\"lat: %@ lon: %@\", loc[@\"latitude\"], loc[@\"longitude\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSClients.geolocate(null, new APSResponseHandler() {\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSClients\", e.getResponseString());\n                } catch (APSCloudException err1) {\n                    Log.e(\"APSClients\", err1.toString());\n                }\n            } else {\n                Log.e(\"APSClients\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSClients\", e.toString());\n        }\n    });\n} catch (APSCloudException err2) {\n    Log.e(\"APSClients\", err2.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Clients/geolocate.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.clientsGeolocate({\n    ip_address: clientIPAddress\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Success:\\n' +\n            'ip_address: ' + result.body.response.ip_address + '\\n' +\n            'latitude: ' + result.body.response.location.latitude + '\\n' +\n            'longitude: ' + result.body.response.location.longitude);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "ip_address",
              "doc": "<p>Alternate IP address to lookup instead of using the device's own address.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "ip_address",
              "doc": "<p>Device IP address.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "location",
              "doc": "<p>Device's approximate location, represented as an object with the following\nproperties:</p>\n\n<ul>\n<li><code>latitude</code> : <code>Number</code></li>\n<li><code>longitude</code> : <code>Number</code></li>\n<li><code>city</code> : <code>String</code></li>\n<li><code>state</code> : <code>String</code></li>\n<li><code>postal_code</code> : <code>String</code></li>\n<li><code>country_code</code> : <code>String</code></li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Clients",
          "shortDoc": "Provides location data about the mobile device or computer your app is\nrunning on based on its IP address. ...",
          "html_meta": {
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "CustomObjects",
    "doc": "<p>The CustomObjects API lets you define your own object types that can be integrated with\nexisting ArrowDB objects. Each CustomObject can have a default primary photo and\nhave associated reviews, comments, and likes.</p>\n\n<p>To distinguish different types of custom ArrowDB objects, you use a unique URL for each class\nof custom object. The URL for a custom object method has the following format:</p>\n\n<!-- Note: Using HTML to have more control over formatting of the URL string.  -->\n\n\n<p><code class=\"prettyprint\">https://api.cloud.appcelerator.com/v1/objects/<em>classname</em>/<em>method</em>.json</code></p>\n\n<p>For example, if your application uses <code>cars</code> and <code>drivers</code> objects, you would use\ndifferent URLs to create them:</p>\n\n<pre><code>https://api.cloud.appcelerator.com/v1/objects/cars/create.json\n\nhttps://api.cloud.appcelerator.com/v1/objects/drivers/create.json\n</code></pre>\n\n<p>When custom objects are returned in a response, the <code>classname</code> is used as a property\nname. For example, if you query a list of custom <code>cars</code> objects, the response would\ninclude a <code>cars</code> array:</p>\n\n<pre><code>response: {\n  \"cars\": [\n    // array of \"cars\" objects\n  ]\n}\n</code></pre>\n\n<p>You define the fields of a custom object by specifying a <code>fields</code> property to the <code>create</code> or <code>update</code> methods.</p>\n\n<p>For instance, if you want to define a car object, you might include the following fields:</p>\n\n<pre><code>{\n    \"make\": \"nissan\",\n    \"color\": \"blue\",\n    \"year\": 2005,\n    \"purchased_at\": \"2011-11-02 17:07:37 -0700\",\n    \"used\": false\n}\n</code></pre>\n\n<p>Supported data types for custom object fields are:</p>\n\n<table class=\"doc-table\">\n<tr><th>Type</th><th>Example</th></tr>\n<tr>\n<td>String&nbsp;&nbsp;&nbsp;&nbsp;</td>\n<td>\"blue\"</td>\n</tr>\n<tr>\n<td>Number&nbsp;&nbsp;&nbsp;&nbsp;</td>\n<td>23 or 1.234</td>\n</tr>\n<tr>\n<td>Date&nbsp;&nbsp;&nbsp;&nbsp;</td>\n<td>\"2011-11-02 17:07:37 -0700\". If a string value matches date format \"yyyy-mm-dd hh:mm:ss +zzzz\" or \"yyyy-mm-ddThh:mm:ss+zzzz\", it will be converted to a Date type on the Appcelerator Cloud Services backend</td>\n</tr>\n</table>\n\n\n<p>Fields can also include more complex data types such as Array and Hash. Hash and Array can be nested inside each other.\nCurrently, data stored inside a Hash is not queryable.</p>\n\n<table class=\"doc-table\">\n        <tr><th>Type</th><th>Example</th></tr>\n        <tr>\n            <td>Hash&nbsp;&nbsp;</td>\n            <td><code>{\"age\":23,\"scores\":{\"math\":90, \"physics\":100}, \"my_favorite_colors\":[\"blue\",\"red\"]}</code></td>\n        </tr>\n        <tr>\n            <td>Array&nbsp;&nbsp;</td>\n            <td><code>[\"nissan\", \"honda\", \"toyota\"]</code> or <code>[2006, 2008], [{\"age\":28}, {\"color\":\"blue\"}]</code></td>\n        </tr>\n</table>\n\n\n<p>Two custom fields have special meaning: <code>tags</code> and <code>coordinates</code>.</p>\n\n<ul>\n<li><p>If <code>fields</code> contains a <code>tags</code> key and you do not pass a separate <code>tags</code> parameter, the values in\n<code>fields.tags</code> will be stored in the object's <code>tags</code> field.</p></li>\n<li><p>To enable geographical search, <code>fields</code> can include a <code>coordinates</code> key to store\ngeographic coordinates. The <code>coordinates</code> value can be a single location:</p>\n\n<pre><code>coordinates: [longitude, latitude]\n</code></pre>\n\n<p>Or multiple locations:</p>\n\n<pre><code> coordinates: [[longitude1,latitude1], [longitude2, latitude2]...].\n</code></pre></li>\n</ul>\n\n\n<p>So for the above example, if we want to store coordinates for the car, we have:</p>\n\n<pre><code>fields: {\n  \"make\": \"nissan\",\n  \"color\": \"blue\",\n  \"year\": 2005,\n  \"purchased_at\": \"2011-11-02 17:07:37 -0700\",\n  \"used\": false,\n  \"coordinates\": [-122.1, 37.1]\n}\n</code></pre>\n\n<p>The fields you define for a custom object are added in to the predefined fields, so\na cars object returned by a query might look like this:</p>\n\n<pre><code>\"cars\": [{\n       \"id\":, \"4ec42de1d9ca72c50700000d\",\n        \"created_at\": \"2011-11-16T21:40:49+0000\",\n        \"updated_at\": \"2011-11-16T21:40:49+0000\",\n       \"make\": \"nissan\",\n       \"color\": \"blue\",\n       \"year\": 2005,\n       \"purchased_at\": \"2011-11-02 17:07:37 -0700\",\n       \"used\": false,\n       \"coordinates\": [-122.1, 37.1]\n}]\n</code></pre>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "acls",
          "id": "property-acls",
          "doc": "<p>Single-element array containing the ACL associated with this object (if any).</p>\n",
          "type": "ACLs[]",
          "owner": "CustomObjects",
          "html_type": "ACLs[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this user object.</p>\n",
          "type": "Date",
          "owner": "CustomObjects",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated unique ID for this object.</p>\n",
          "type": "String",
          "owner": "CustomObjects",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>Primary photo for this object.</p>\n",
          "type": "Photos",
          "owner": "CustomObjects",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>List of tags associated with this object.</p>\n",
          "type": "String[]",
          "owner": "CustomObjects",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this user object.</p>\n",
          "type": "Date",
          "owner": "CustomObjects",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/CustomObjects.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Owner of this object.</p>\n",
          "type": "Users",
          "owner": "CustomObjects",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "admin_drop_collection",
          "deprecated": false,
          "id": "method-admin_drop_collection",
          "doc": "<p>Drops a CustomObjects collection of a specified type. The collection is dropped\nasynchronously in a separate process.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "objects/:classname/admin_drop_collection.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Car objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"objects/cars/admin_drop_collection.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Car objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that drops the CustomObjects collection of type <code>car</code>:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/objects/car/admin_drop_collection.json?key=&lt;API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"dropCollection\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Car objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"objects/cars/admin_drop_collection.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Car objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"objects/cars/admin_drop_collection.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Car objects have been removed.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"REST\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/admin_drop_collection.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsAdminDropCollection({\n    classname: 'cars'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Drops a CustomObjects collection of a specified type. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "batch_create",
          "deprecated": false,
          "id": "method-batch_create",
          "doc": "<p>Creates up to 100 custom objects.  The current user must be an application admin to use this API.</p>\n\n<p>If there is an error inserting one of the objects, the response payload will return a 200 code, the\nnumber of objects created, and the error for creating the first object that failed. The HTTP\nresponse will be 202.</p>\n\n<p>The <code>classname</code> of the object is part of the URL. You do not have to define\n<code>classname</code> ahead of time. It will be created on the fly.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "objects/:classname/batch_create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new custom object and checks the response.</p>\n\n<pre><code>Cloud.sendRequest({\n    url: 'objects/foo/batch_create.json',\n    method: 'POST',\n    data: {\n        json_array: [{'foo': 'bar'}, {'foo':'baz'}]\n    }\n}, function (e) {\n    if (e.success) {\n        console.log(e.meta.message);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that creates a few \"foo\" objects:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST --data-urlencode 'json_array=[{\"foo\":\"bar\"}, {\"foo\":\"baz\"}]'  https://api.cloud.appcelerator.com/v1/objects/foo/batch_create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n\nExample JSON response:\n\n        {\n          \"meta\": {\n            \"code\": 200,\n            \"status\": \"ok\",\n            \"message\": '{\"ok\"=&gt;1, \"n\"=&gt;2, \"nInserted\"=&gt;2}',\n            \"method_name\": \"batchCreate\"\n          },\n        }\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"json_array\": @[\n          @{@\"foo\":@\"bar\"},\n          @{@\"foo\":@\"baz\"}\n      ]\n};\n[[APSCloud sharedInstance] sendRequest:@\"objects/foo/batch_create.json\" method:@\"POST\" data:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"%@\", [e.meta valueForKey:@\"message\"]];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONArray myArray = new JSONArray();\nmyArray.put(new JSONObject(\"{'foo':'bar'}\"));\nmyArray.put(new JSONObject(\"{'foo':'baz'}\"));\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"json_array\", myArray);\n\nAPSCloud.getInstance().sendRequest(\"objects/foo/batch_create.json\", \"POST\", data, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"Created!\"):\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        } else {\n            Log.e(\"APSObjects\", \"ERROR: \" + e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(final APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.post(\n    '/v1/objects/foos/batch_create.json',\n    {\n        json_array: [{'foo': 'bar'}, {'foo':'baz'}]\n    },\n    function(err, result) {\n        if (err) {\n            console.error(err);\n    } else {\n        console.log(result.body.meta.message)\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "json_array",
              "doc": "<p>Array of JSON-encoded objects to create. You may specify up to 100 objects.\nYou do not have to define fields ahead of time,\nsimply set key-value pairs of the fields. Since the data must be encoded as\nJSON, keys must not contain the dot character.</p>\n\n<p>You may pass the following predefined fields: <code>acl_id</code>, <code>photo_id</code> and <code>user_id</code>, to\nattach an ACL, Photo, or User object, respectively. Note that ArrowDB will not check if\nthe ID exists.</p>\n\n<pre><code>json_array = [\n    {\n        custom_field: 'red',\n        acl_id: '1234567890abcdef',\n        photo_id: '0987654321fedcba',\n        user_id: 'ab12cd34ef098765'\n    }\n]\n</code></pre>\n\n<p>The <code>tags</code> field is not supported for the batch create operations.</p>\n",
              "optional": false,
              "type": "Hash[]",
              "html_type": "Hash[]"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "message",
              "doc": "<p><strong>This field is found in the meta payload of the response.</strong></p>\n\n<p>Message describing if the operation was successful or not, including the number of\nobject created.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Creates up to 100 custom objects. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes CustomObjects objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all CustomObject objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>The <a href=\"#!/api/CustomObjects-property-photo\" rel=\"CustomObjects-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "objects/:classname/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Car objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"objects/cars/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Car objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/objects/car/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Car objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"objects/cars/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Car objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"objects/cars/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Car objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsBatchDelete({\n    classname: 'cars',\n    where: {color: 'blue'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for CustomObjects objects to delete.\nIf not specified, all CustomObjects objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Deletes CustomObjects objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of objects of the specified class.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "objects/:classname/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Car objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"objects/cars/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/objects/cars/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"objectsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Car objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"objects/cars/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Car objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"objects/cars/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsCount({\n    classname: 'cars'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of class objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Retrieves the total number of objects of the specified class. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Create a custom object of type <code>classname</code>.</p>\n\n<p>The <code>classname</code> of the object is part of the URL. You do not have to define\n<code>classname</code> ahead of time. It will be created on the fly</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "objects/:classname/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new custom object and checks the response.</p>\n\n<pre><code>Cloud.Objects.create({\n    classname: 'cars',\n    fields: {\n        make: 'nissan',\n        color: 'blue',\n        year: 2005\n    }\n}, function (e) {\n    if (e.success) {\n        var car = e.cars[0];\n        alert('Success:\\n' +\n            'id: ' + car.id + '\\n' +\n            'make: ' + car.make + '\\n' +\n            'color: ' + car.color + '\\n' +\n            'year: ' + car.year + '\\n' +\n            'created_at: ' + car.created_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that creates a \"car\" object with custom coordinates:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"fields={\\\"color\\\":\\\"blue\\\", \\\"make\\\": \\\"nissan\\\", \\\"purchased_at\\\" : \\\"2011-11-02 17:07:37 -0700\\\", \\\"year\\\" : 2005, \\\"used\\\" : false, \\\"coordinates\\\":[-122.1, 37.1]}\"  https://api.cloud.appcelerator.com/v1/objects/car/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n\n    Example JSON response:\n\n        {\n          \"meta\": {\n            \"code\": 200,\n            \"status\": \"ok\",\n            \"method_name\": \"createObject\"\n          },\n          \"response\": {\n            \"car\": [\n              {\n                \"color\": \"blue\",\n                \"make\": \"nissan\",\n                \"purchased_at\": \"2011-11-03T00:07:37+0000\",\n                \"year\": 2005,\n                \"used\": false,\n                \"coordinates\": [\n                  [\n                    -122.1,\n                    37.1\n                  ]\n                ],\n                \"id\": \"4ec42de1d9ca72c50700000d\",\n                \"created_at\": \"2011-11-16T21:40:49+0000\",\n                \"updated_at\": \"2011-11-16T21:40:49+0000\"\n              }\n            ]\n          }\n        }\n</code></pre>\n\n<p>In iOS, you can simply create a NSDictionary to represent a custom object's\nfields. Here is the mapping of data types in iOS:</p>\n\n<table class=\"doc_content_table\">\n    <tr><th>Type</th><th>Example</th><th>iOS Class</th></tr>\n    <tr>\n        <td>String&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>\"blue\"&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>NString</td>\n    </tr>\n    <tr>\n        <td>Number&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>123 or 1.234</td>\n        <td>[NSNumber numberWithInt:] or [NSNumber numberWithDouble:]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    </tr>\n    <tr>\n        <td>Boolean&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>true or false</td>\n        <td>[NSNumber numberWithBoo:]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n    </tr>\n    <tr>\n        <td>Date&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>\"2011-11-02 17:07:37 -0700\")&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>NSDate</td>\n    </tr>\n    <tr>\n        <td>Hash&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>{\"age\": 23, \"color\": \"blue\"}&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>NSDictionary</td>\n    </tr>\n    <tr>\n        <td>Array&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>[123, 234] or [\"mike\", \"joe\"]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>NSArray</td>\n    </tr>\n    <tr>\n        <td>Geo coordinates&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>[lng, lat], e.g. [122.33, 37.48]&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>CLLocation</td>\n    </tr>\n    <tr>\n        <td>null&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>Set a value to null&nbsp;&nbsp;&nbsp;&nbsp;</td>\n        <td>NSNull</td>\n    </tr>\n</table>\n\n\n<p>If you would like to use your own custom data type, you need to provide an\n<code>-(id)JSON</code> encode method in your object class.</p>\n\n<pre><code>@interface MyObject : NSObject {\n    NSString *color;\n    NSNumber *mileage;\n}\n@end\n\n@implementation MyObject\n/*!\n Provide custom and/or encodable object to parse to JSON string.\n @result Object encodable as JSON such as NSDictionary, NSArray, NSString, NSNumber, NSDate or NSNull\n */\n- (id)JSON\n{\n    return [NSDictionary dictionaryWithObjectsAndKeys:self.color, @\"color\", self.mileage, @mileage, nil];\n}\n@end\n\nMyObject *object = [[MyObject alloc] init];\nNSMutableDictionary *customFields = [NSMutableDictionary dictionaryWithCapacity:1];\n[customFields setObject:object forKey:@\"MyObject\"];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"classname\": @\"cars\",\n      @\"fields\": @{\n            @\"make\": @\"nissan\",\n            @\"color\": @\"blue\",\n            @\"year\": @2005\n      }\n};\n\n[APSObjects create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"id: %@\", ((NSArray *)e.response[@\"cars\"])[0][@\"id\"]];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONObject fields = new JSONObject(\"{'color':'blue', 'make': 'nissan', 'purchased_at' : '2011-11-02 17:07:37 -0700', 'year' : 2005, 'used' : false, 'coordinates':[-122.1, 37.1]}\");\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"fields\", fields);\ndata.put(\"classname\", \"cars\");\n\ntry {\n    APSObjects.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\"):\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSObjects\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSObjects\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSObjects\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsCreate({\n    classname: 'cars',\n    fields: {\n        make: 'nissan',\n        color: 'blue',\n        year: 2005\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.cars[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "fields",
              "doc": "<p>JSON encoding of object fields. You don't have to define fields ahead of time,\nsimply set key-value pairs of the fields. Since the data must be encoded as\nJSON, keys must not contain the dot character.</p>\n\n<p>For instance, if you want to define a car object:</p>\n\n<pre><code>{\n   \"make\": \"nissan\",\n   \"color\": \"blue\",\n   \"year\": 2005,\n   \"purchased_at\": \"2011-11-02 17:07:37 -0700\",\n   \"used\": false\n}\n</code></pre>\n\n<p>See the main description for <a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a> for more information on\nfields.</p>\n",
              "optional": false,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "tags",
              "doc": "<p>Comma-separated list of tags associated with this object.</p>\n\n<p>If the <code>tags</code> parameter is omitted and a <code>tags</code> key is included in the\n<code>fields</code> dictionary, <code>fields.tags</code> will be used instead.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for the object.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for the object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the object on behalf of.</p>\n\n<p>The current login user must be an application admin to create an object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "classname",
              "doc": "<p>A single-element array containing the newly-created custom object is\nreturned in the <em>classname</em> property, where <em>classname</em> is the classname\nspecified in the creation URL.</p>\n",
              "optional": true,
              "type": "CustomObjects[]",
              "html_type": "CustomObjects[]"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Create a custom object of type classname. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Only the owner of the object or user who is granted write permission by the\nobject's ACL can delete the object.</p>\n\n<p>The <a href=\"#!/api/CustomObjects-property-photo\" rel=\"CustomObjects-property-photo\" class=\"docClass\">primary photo</a> associated with the CustomObject is not deleted.</p>\n\n<p>An application admin can delete any custom object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "objects/:classname/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a custom object and checks the response.</p>\n\n<pre><code>Cloud.Objects.remove({\n    classname: 'cars',\n    id: savedCar1.id\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/objects/car/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;id=4ec42e91d9ca72c507000010\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"deleteObjects\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"classname\": @\"cars\",\n      @\"id\": savedCarID\n};\n\n[APSObjects remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"4ec42e91d9ca72c507000010\");\ndata.put(\"classname\", \"cars\");\n\ntry {\n    APSObjects.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSObjects\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSObjects\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSObjects\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsDelete({\n    classname: 'cars',\n    id: savedCar1.id\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "id",
              "doc": "<p>The object ID of the custom object to delete.</p>\n\n<p>You must specify either <code>id</code> or <code>ids</code>.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "ids",
              "doc": "<p>A comma-separated list of object IDs of the custom objects to delete.\nYou must specify either <code>id</code> or <code>ids</code>.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the Custom object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to delete a Custom object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Only the owner of the object or user who is granted write permission by the\nobject's ACL can delete the object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Query custom object by specified fields with sorting and paginating.</p>\n\n<p><strong>Notes</strong>:</p>\n\n<ul>\n<li>If a custom object contains fields or values that are greater than 1KB in length, you will\nnot be able to query on that field. For more information, see <a href=\"#!/guide/customfields-section-indexing-size-limit-for-custom-objects-and-fields\">Indexing Size Limit for Custom Objects and Fields</a>.</li>\n<li>Currently, you cannot query or sort data stored inside an array or hash.</li>\n<li>You can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</li>\n</ul>\n\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "objects/:classname/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about custom objects and checks the response.</p>\n\n<pre><code>Cloud.Objects.query({\n    classname: 'cars',\n    page: 1,\n    per_page: 10,\n    where: {\n        color: 'blue'\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.cars.length);\n        for (var i = 0; i &lt; e.cars.length; i++) {\n            var car = e.cars[i];\n            alert('id: ' + cars.id + '\\n' +\n                'make: ' + car.make + '\\n' +\n                'color: ' + car.color + '\\n' +\n                'year: ' + car.year + '\\n' +\n                'created_at: ' + car.created_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"color\":\"blue\",\"coordinates\":{\"$nearSphere\":[-122.1,37.1], \"$maxDistance\" : 0.00126}}' --data-urlencode 'order=-purchased_at' \"https://api.cloud.appcelerator.com/v1/objects/car/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryCustomObjects\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"color\": \"blue\",\n        \"make\": \"toyota\",\n        \"purchased_at\": \"2011-11-19T00:07:37+0000\",\n        \"year\": 2011,\n        \"new\": false,\n        \"coordinates\": [\n          [\n            -122.3,\n            37.2\n          ]\n        ],\n        \"id\": \"4ec563d4d9ca72d25d000012\",\n        \"created_at\": \"2011-11-17T19:43:16+0000\",\n        \"updated_at\": \"2011-11-17T19:43:16+0000\"\n      },\n      {\n        \"color\": \"blue\",\n        \"purchased_at\": \"2011-11-03T00:07:37+0000\",\n        \"coordinates\": [\n          [\n            -122.1,\n            37.1\n          ]\n        ],\n        \"id\": \"4ec42db6d9ca72c50700000b\",\n        \"created_at\": \"2011-11-16T21:40:06+0000\",\n        \"updated_at\": \"2011-11-16T21:40:06+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Appcelerator Cloud Services iOS SDK provided a CCWhere class to build where\nclause in query easily. First you need to instantiate a CCWhere object:</p>\n\n<pre><code>CCWhere *where = [[[CCWhere alloc] init] autorelease];\n</code></pre>\n\n<p>Then you can add your query constrains by calling one of the following\nmethods:</p>\n\n<pre><code>-(void)fieldName:(NSString *)fieldName lessThan:(NSObject *)value;\n-(void)fieldName:(NSString *)fieldName greaterThan:(NSObject *)value;\n-(void)fieldName:(NSString *)fieldName equalTo:(NSObject *)value;\n-(void)fieldName:(NSString *)fieldName notEqualTo:(NSObject *)value;\n-(void)fieldName:(NSString *)fieldName lessThanEqualTo:(NSObject *)value;\n-(void)fieldName:(NSString *)fieldName greaterThanEqualTo:(NSObject *)value;\n-(void)fieldName:(NSString *)fieldName containedIn:(NSArray *)values;\n-(void)fieldName:(NSString *)fieldName notContainedIn:(NSArray *)values;\n-(void)fieldName:(NSString *)fieldName regex:(NSString *)value;\n-(void)fieldName:(NSString *)fieldName nearLat:(double)latitude nearLng:(double)longitude;\n-(void)fieldName:(NSString *)fieldName nearLat:(double)latitude nearLng:(double)longitude maxDistanceKm:(double)distanceKm;\n-(void)fieldName:(NSString *)fieldName nearLat:(double)latitude nearLng:(double)longitude maxDistanceMi:(double)distanceMi;\n</code></pre>\n\n<p>The first parameter is the name of the field you want to query on. Then set\nthe where object along with other query parameters in the paramDict for\nCCRequest.</p>\n\n<pre><code>paramDict = [NSDictionary dictionaryWithObjectsAndKeys:where, @\"where\", @\"mileage,-purchased_at\", @\"order\", nil];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"classname\": @\"cars\",\n      @\"page\": @1,\n      @\"per_page\": @10,\n      @\"where\": @{\n            @\"color\": @\"blue\"\n      }\n};\n\n[APSObjects query:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu cars\", (unsigned long)((NSArray *)e.response[@\"cars\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'color': 'blue'}\");\ndata.put(\"where\", params);\ndata.put(\"classname\", \"cars\");\n\ntry {\n    APSObjects.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray classname = e.getResponse().getJSONArray(\"classname\");\n                    if (classname.length() &lt;= 0) {\n                        Log.i(\"APSObjects\", \"No Results!\");\n                    } else {\n                        // Do something with the classname array\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSObjects\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSObjects\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSObjects\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSObjects\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsQuery({\n    classname: 'cars',\n    limit: 10,\n    where: {\n        color: 'blue'\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.cars.forEach(function(car) {\n            console.log(car);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each CustomObject in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the current user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>Each value in the search query needs to be less that 1024 bytes.\nIf the value is larger than 1024 bytes, the query does not return any results.</p>\n\n<p>In addition to developer created fields, custom objects include\nfour predefined fields that can be queried as well:</p>\n\n<ul>\n<li><p><code>user_id: String</code>.  Object owner's user ID.</p></li>\n<li><p><code>tags_array: String</code>. List of tags.</p></li>\n<li><p><code>created_at: Date</code>. Timestamp when the object was created.</p></li>\n<li><p><code>updated_at: Date</code>. Timestamp when the object was updated.</p></li>\n</ul>\n\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields, specified as a comma-separated list of\nfield names.\nSee the <a href=\"#!/guide/search_query\">Search and Query guide</a> for more information.</p>\n\n<p>Fields with a Hash data type cannot be sorted. Custom objects include\ntwo predefined sortable fields:</p>\n\n<pre><code>`created_at: Date` - Timestamp when the object was created.\n`updated_at: Date` - Timestamp when the object was last updated.\n</code></pre>\n\n<p>For example, if you want to query cars and sort them by <code>make</code> and\n<code>created_at</code>:</p>\n\n<pre><code>\"order\": \"make,created_at\"\n</code></pre>\n\n<p>To reverse the sorting order, simply add <code>-</code> in front of a field. For example,\nto sort results by <code>make</code> in ascending order then by <code>created_at</code> in descending\norder:</p>\n\n<pre><code>\"order\": \"make,-created_at\"\n</code></pre>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "classname",
              "doc": "<p>The <em>classname</em> property stores a list of custom objects matching the\nquery parameters. The <em>classname</em> matches the classname used in the URL.</p>\n",
              "optional": true,
              "type": "Hash[]",
              "html_type": "Hash[]"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Query custom object by specified fields with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Show a custom object's info.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "objects/:classname/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about custom objects and checks the response.</p>\n\n<pre><code>Cloud.Objects.show({\n    classname: 'cars',\n    ids: [ savedCar1.id, savedCar2.id ]\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.cars.length);\n        for (var i = 0; i &lt; e.cars.length; i++) {\n            var car = e.cars[i];\n            alert('id: ' + cars.id + '\\n' +\n                'make: ' + car.make + '\\n' +\n                'color: ' + car.color + '\\n' +\n                'year: ' + car.year + '\\n' +\n                'created_at: ' + car.created_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X GET --data-urlencode 'ids=4ec42e91d9ca72c507000010,4ec42de1d9ca72c50700000d'  \"https://api.cloud.appcelerator.com/v1/objects/car/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showObjects\"\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"color\": \"blue\",\n        \"make\": \"nissan\",\n        \"purchased_at\": \"2011-11-03T00:07:37+0000\",\n        \"year\": 2005,\n        \"used\": false,\n        \"coordinates\": [\n          [\n            -122.1,\n            37.1\n          ]\n        ],\n        \"id\": \"4ec42de1d9ca72c50700000d\",\n        \"created_at\": \"2011-11-16T21:40:49+0000\",\n        \"updated_at\": \"2011-11-16T21:40:49+0000\"\n      },\n      {\n        \"color\": \"red\",\n        \"make\": \"honda\",\n        \"purchased_at\": \"2011-11-09T00:07:37+0000\",\n        \"year\": 2011,\n        \"new\": false,\n        \"coordinates\": [\n          [\n            -123.1,\n            38.1\n          ]\n        ],\n        \"id\": \"4ec42e91d9ca72c507000010\",\n        \"created_at\": \"2011-11-16T21:43:45+0000\",\n        \"updated_at\": \"2011-11-16T21:43:45+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"classname\": @\"cars\",\n      @\"ids\": @[car1ID, car2ID]\n};\n\n[APSObjects show:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Show %lu cars\", (unsigned long)((NSArray *)e.response[@\"cars\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"ids\", \"4ec42e91d9ca72c507000010,4ec42de1d9ca72c50700000d\");\ndata.put(\"classname\", \"cars\");\n\ntry {\n    APSObjects.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSObjects\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSObjects\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSObjects\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSObjects\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsShow({\n    classname: 'cars',\n    ids: [ savedCar1.id, savedCar2.id ]\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.cars.forEach(function(car) {\n            console.log(car);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "id",
              "doc": "<p>The object ID of the custom object to show.</p>\n\n<p>You must specify either <code>id</code> or <code>ids</code>.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "ids",
              "doc": "<p>A comma-separated list of object IDs of the custom objects to show.\nYou must specify either <code>id</code> or <code>ids</code>.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the CustomObject in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "classname",
              "doc": "<p>The <em>classname</em> property stores a list of custom objects matching the specified\nID or IDs, where <em>classname</em> matches the classname used in the URL.</p>\n",
              "optional": true,
              "type": "CustomObjects[]",
              "html_type": "CustomObjects[]"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Show a custom object's info. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Any of the same parameters as <a href=\"/docs/api/v1/custom_objects/create\">Create Custom\nObject</a> can be used to update a custom\nobject. Only the owner of the object or user who is entitled write\npermission(ACL) to the object can update the object.</p>\n\n<p>Application Admin can update any Custom Object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "objects/:classname/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a custom object and checks the response.</p>\n\n<pre><code>Cloud.Objects.update({\n    classname: 'cars',\n    id: savedCar1.id,\n    fields: {\n        color: 'purple',\n        mileage: 10000\n    }\n}, function (e) {\n    if (e.success) {\n        var car = e.cars[0];\n        alert('Success:\\n' +\n            'id: ' + car.id + '\\n' +\n            'make: ' + car.make + '\\n' +\n            'color: ' + car.color + '\\n' +\n            'year: ' + car.year + '\\n' +\n            'mileage: ' + car.mileage + '\\n' +\n            'updated_at: ' + car.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT --data-urlencode 'fields={\"color\":\"purple\", \"purchased_at\":null, \"mileage\":10000}' \"https://api.cloud.appcelerator.com/v1/objects/car/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;id=4ec42de1d9ca72c50700000d\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateCustomObject\"\n  },\n  \"response\": {\n    \"car\": [\n      {\n        \"make\": \"nissan\",\n        \"year\": 2005,\n        \"used\": false,\n        \"color\": \"purple\",\n        \"mileage\": 10000,\n        \"coordinates\": [\n          [\n            -122.1,\n            37.1\n          ]\n        ],\n        \"id\": \"4ec42de1d9ca72c50700000d\",\n        \"created_at\": \"2011-11-16T21:40:49+0000\",\n        \"updated_at\": \"2011-11-16T22:25:23+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Update is almost the same as create. If you wish to remove a field, you can\nset the field to NSNull.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"classname\": @\"cars\",\n      @\"id\": savedCarID,\n      @\"fields\": @{\n            @\"color\": @\"purple\",\n            @\"mileage\": @10000\n      }\n};\n\n[APSObjects update:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"id: %@\", ((NSArray *)e.response[@\"cars\"])[0][@\"id\"]];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONObject fields = new JSONObject(\"{'color': 'purple', 'purchased_at': null, 'mileage': 10000}\");\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"4ec42e91d9ca72c507000010\");\ndata.put(\"classname\", \"cars\");\ndata.put(\"fields\", fields);\n\ntry {\n    APSObjects.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSObjects\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSObjects\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSObjects\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/CustomObjects/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>For Node.js calls, pass the class name to the <code>classname</code> property of the parameters object:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.customObjectsUpdate({\n    classname: 'cars',\n    id: savedCar1.id,\n    fields: {\n        color: 'purple',\n        mileage: 10000\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.cars.forEach(function(car) {\n            console.log(car);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>The object ID of the custom object to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "classname",
              "doc": "<p>Type of custom object. Specified as part of the URL path, not in the\nparameters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "fields",
              "doc": "<p>JSON encoding of object fields to update.</p>\n\n<p>If any of the fields do not exist in the current object, they will be added.\nTo delete an existing field, use {\"field_name\" : null}. For example, the car object created in\n<a href=\"#!/api/CustomObjects-method-create\" rel=\"CustomObjects-method-create\" class=\"docClass\">CustomObject.create</a> is:</p>\n\n<pre><code>{ \"make\": \"nissan\",\n  \"color\": \"blue\",\n  \"year\": 2005,\n  \"purchased_at\": \"2011-11-02 17:07:37 -0700\",\n  \"used\": false,\n  \"coordinates\": [-122.1, 37.1]\n}\n</code></pre>\n\n<p>To change color, remove the <code>purchased_at</code> field and add a new field <code>mileage</code>,\nyou could pass the following JSON object to fields:</p>\n\n<pre><code>{ \"color\": \"purple\",\n  \"purchased_at\": null,\n  \"mileage\": 10000\n}\n</code></pre>\n",
              "optional": false,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "tags",
              "doc": "<p>Comma-separated list of tags to associate with this object, for example, \"hiking,swiming.\"\nReplaces any existing tags.</p>\n\n<p>If the <code>tags</code> parameter is omitted and a <code>tags</code> key is included in the\n<code>fields</code> dictionary, <code>fields.tags</code> will be used instead.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for the object.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for the object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to update the Custom object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to update a Custom object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "classname",
              "doc": "<p>The response object has a <em>classname</em> property, where <em>classname</em> matches the classname used in the URL.</p>\n\n<p>The <em>classname</em> value is a single-element array containing the updated object.</p>\n",
              "optional": true,
              "type": "Hash[]",
              "html_type": "Hash[]"
            }
          ],
          "owner": "CustomObjects",
          "shortDoc": "Any of the same parameters as Create Custom\nObject can be used to update a custom\nobject. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Emails",
    "doc": "<p>The <a href=\"#!/api/Emails-method-email_from_template\" rel=\"Emails-method-email_from_template\" class=\"docClass\">email_from_template</a> method lets you send customized emails to your users. You\ncan send plain text, HTML, or multi-part emails.</p>\n\n<p>Before you can use this method, you must first do the following:</p>\n\n<ul>\n<li>Configure your <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_Cloud_Services-section-39683049_ConfiguringCloudServices-Email\">Email settings</a>\nin <a href=\"https://dashboard.appcelerator.com\">Dashboard</a>, or the Settings tab in <a href=\"https://my.appcelerator.com/apps\">My Apps</a>.</li>\n<li>Create at least one email template, which may contain a plain-text body, an HTML-formatted body, or both. See\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Email_Templates\">Managing Email Templates</a>\nfor details on creating an email template.</li>\n</ul>\n\n\n<p>When you call <a href=\"#!/api/Emails-method-email_from_template\" rel=\"Emails-method-email_from_template\" class=\"docClass\">email_from_template</a>, you specify the name of the template,\nto use, the email recipient(s), and optionally the content type to use when\nsending the email (plain, HTML, or multi-part).</p>\n\n<p><strong> Using placeholder fields</strong></p>\n\n<p>The template's subject and body can contain placeholder fields delineated by double curly brackets\n(<code>{{}}</code>). You include a parameter for each placeholder field in the method call specifying\nthe value to insert. For example, if your email template's subject field contains <strong>Hi <code>{{first_name}}</code>!</strong>,\nyou would include a parameter named <code>first_name</code>, as shown below:</p>\n\n<pre><code>curl -F \"recipients=joe@company.com\" -F \"template=welcome\" -F \"first_name=Joe\" https://api.cloud.appcelerator.com/v1/custom_mailer/email_from_template.json?key=&lt;YOUR APP APP KEY&gt;\n</code></pre>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/Emails.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/Emails.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of email templates.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "email_templates/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of email templates.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"email_templates/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/email_templates/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"email_templatesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Email objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"emails/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Email objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"emails/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.emailsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of email templates. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Emails",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "email_from_template",
          "deprecated": false,
          "id": "method-email_from_template",
          "doc": "<p>Sends an email to a list of email addresses you specify.</p>\n\n<p>When sending an email, you specify the name of an email template created in Dashboard\n(see <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Email_Templates\">Managing Email Templates</a>),\nand one or more email recipients. You can optionally specify the email content type (\nHTML, plain-text, or multipart), as well as values for any placeholder fields\ndefined by the template. The below examples demonstrate these concepts.</p>\n\n<p>An email template's body can contain HTML-formatted or plain-text content\n, or both. When you send an email, you can specify whether the email should be sent\nas HTML, plain text, or multipart using the <code>content_type</code> parameter.\nA multipart email contains both the plain text and HTML versions; which\nversion is displayed is determined by the recipient's email client.</p>\n\n<p>If the <code>content_type</code> parameter is <strong>not</strong> provided in the request, the format\nis automatically chosen based on the following rules:</p>\n\n<ul>\n<li>If the email template contains both HTML and plain-text bodies, it will be sent in a multipart format.</li>\n<li>If the email template contains only an HTML body, it will be sent in an HTML format.</li>\n<li>If the email template contains only a plain-text body. it will be sent in plain-text format.</li>\n</ul>\n\n\n<p>If the <code>content_type</code> parameter is provided in the request, then the following\nmust be true:</p>\n\n<ul>\n<li>If <code>content_type</code> is \"html\", then the email template must define an HTML body.</li>\n<li>If <code>content_type</code> is \"plain\", then the email template must define a plain text body.</li>\n<li>If <code>content_type</code> is \"multipart\", then the email template must define both HTML and plain text body.</li>\n</ul>\n\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "custom_mailer/email_from_template.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example sends an Email to \"joe@company.com\" using an email template named\n\"welcome\" that defines a plain-text body with the following content, including\na placeholder field named <code>{{first_name}}</code>:</p>\n\n<pre><code>Welcome {{first_name}},\n\nThanks for signing up!\n\nThe Management              \n</code></pre>\n\n<p>In addition to the recipient and email template, the <code>Cloud.Emails.send()</code> method\nalso specifies a value for the {{first_name}} placeholder:</p>\n\n<pre><code>Cloud.Emails.send({\n    template: 'welcome',\n    recipients: 'joe@company.com',\n    first_name: \"Joe\"\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>This example sends an Email to \"joe@company.com\" using an email template named\n\"welcome\" that defines a plain-text body with the following content, including\na placeholder field named <code>{{first_name}}</code>:</p>\n\n<pre><code>Welcome {{first_name}},\n\nThanks for signing up!\n\nThe Management            \n</code></pre>\n\n<p>Below is an example cURL request that specifies the email template to use, recipient, and value to\ninsert in the {{first_name}} placeholder field.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"first_name=Joe\" \"recipients=joe@company.com\" -F \"template=welcome\" https://api.cloud.appcelerator.com/v1/custom_mailer/email_from_template.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"emailFromTemplate\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>This example sends an Email to \"joe@company.com\" using an email template named\n\"welcome\" that defines a plain-text body with the following content, including\na placeholder field named <code>{{first_name}}</code>:</p>\n\n<pre><code>Welcome {{first_name}},\n\nThanks for signing up!\n\nThe Management\n</code></pre>\n\n<p>Example iOS APS SDK call that specifies the email template to use, recipient, and value to\ninsert in the {{first_name}} placeholder field:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"template\": @\"welcome\",\n      @\"recipients\": @\"joe@company.com\",\n      @\"first_name\": @\"Joe\"\n};\n\n[APSEmails send:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>This example sends an Email to \"joe@company.com\" using an email template named\n\"welcome\" that defines a plain-text body with the following content, including\na placeholder field named <code>{{first_name}}</code>:</p>\n\n<pre><code>Welcome {{first_name}},\n\nThanks for signing up!\n\nThe Management\n</code></pre>\n\n<p>Example Android APS SDK call that specifies the email template to use, recipient, and value to\ninsert in the {{first_name}} placeholder field:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"recipients\", \"joe@company.com\");\ndata.put(\"template\", \"welcome\");\ndata.put(\"first_name\", \"Joe\");\n\ntry {\n    APSEmails.send(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Alert\").setMessage(\"Sent!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSEmail\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSEmails\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEmails\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Emails/send.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.emailsSend({\n    template: 'welcome',\n    recipients: 'joe@company.com',\n    first_name: \"Joe\"\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('E-mail sent!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "template",
              "doc": "<p>Name of the email template you have created.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "recipients",
              "doc": "<p>Comma separated list of email addresses.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "content_type",
              "doc": "<p>Specifies the email's content-type. The following values are valid:</p>\n\n<ul>\n<li>\"plain\" &mdash; If specified, the email template must define a plain text body.</li>\n<li>\"html\" &mdash; If specified, the email template must define an HTML body.</li>\n<li>\"multipart\" &mdash; If specified, the email template must define both a plain text\n and HTML body.</li>\n</ul>\n\n\n<p>See <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Email_Templates\">Managing Email Templates</a>\nfor details on creating email templates.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "from",
              "doc": "<p>The sender's email address.</p>\n\n<p><strong>Notes</strong>:</p>\n\n<ul>\n<li>If you use Google as your SMTP server, the email will always be sent using the email account\nyou used to configure the SMTP service.</li>\n<li>Some SMTP service provider require the sender's email address to be present.</li>\n</ul>\n\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Emails",
          "shortDoc": "Sends an email to a list of email addresses you specify. ...",
          "html_meta": {
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Events",
    "doc": "<p>The Events API provides methods to create and manage events. Events can be one-time or recurring.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "acls",
          "id": "property-acls",
          "doc": "<p>Array of ACLs associated with this object.</p>\n",
          "type": "ACLs[]",
          "owner": "Events",
          "html_type": "ACLs[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Event creation timestamp.</p>\n",
          "type": "Date",
          "owner": "Events",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "Hash",
          "owner": "Events",
          "shortDoc": "User defined fields. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "details",
          "id": "property-details",
          "doc": "<p>Description of the event.</p>\n",
          "type": "String",
          "owner": "Events",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "duration",
          "id": "property-duration",
          "doc": "<p>Event duration, in seconds.</p>\n",
          "type": "Number",
          "owner": "Events",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ical",
          "id": "property-ical",
          "doc": "<p>Event time and recurrence in iCalendar (RFC 5545) format.</p>\n",
          "type": "String",
          "owner": "Events",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated unique ID for this event.</p>\n",
          "type": "String",
          "owner": "Events",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Event name.</p>\n",
          "type": "String",
          "owner": "Events",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>Primary photo for the event.</p>\n",
          "type": "Photos",
          "owner": "Events",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "place",
          "id": "property-place",
          "doc": "<p>Event location.</p>\n",
          "type": "Places",
          "owner": "Events",
          "html_type": "Places",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "recurring",
          "id": "property-recurring",
          "doc": "<p>Recurrence schedule. Can take the following values: \"daily\", \"weekly\", \"monthly\", or \"yearly\".</p>\n",
          "type": "String",
          "owner": "Events",
          "shortDoc": "Recurrence schedule. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "recurring_count",
          "id": "property-recurring_count",
          "doc": "<p>Number of occurrences for the event.</p>\n",
          "type": "Number",
          "owner": "Events",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "recurring_until",
          "id": "property-recurring_until",
          "doc": "<p>Date of last recurrence.</p>\n",
          "type": "Date",
          "owner": "Events",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "start_time",
          "id": "property-start_time",
          "doc": "<p>Event start time.</p>\n",
          "type": "Date",
          "owner": "Events",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>Array of tags associated with this event.</p>\n",
          "type": "String[]",
          "owner": "Events",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Event modification timestamp.</p>\n",
          "type": "Date",
          "owner": "Events",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/Events.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Event owner.</p>\n",
          "type": "Users",
          "owner": "Events",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Events objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Events objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>Any <a href=\"#!/api/Events-property-place\" rel=\"Events-property-place\" class=\"docClass\">Place</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "events/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Event objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"events/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Event objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/events/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Event objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"events/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Event object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Event objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"events/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Event objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsBatchDelete(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Events objects to delete.\nIf not specified, all Events objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Events",
          "shortDoc": "Deletes Events objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Event objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "events/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Event objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"events/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"eventsCount\",\n    \"count\": 1\n   }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Event objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"events/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Event objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"events/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Event objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Events",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Create an event. Times given with time zones other than UTC (for example PST\nduring daylight savings is -0700) will be converted to UTC. An ical string\nwill be returned to represent the occurrences of the event.</p>\n\n<p>For the event that is set as a recurring event, once created, there will be\nseveral \"event occurrences\" created associating with the event object on\nserver side, one \"event occurrence\" represents a single occurrence of the\nrecurring event. An \"event occurrence\" contains start and end time of the\nevent's occurrence which are calculated according to the \"recurring\" settings\nof the event object.</p>\n\n<p>Instead of computing actual individual occurrences of a recurring event on the\nclient side, you can use event occurrences query api to get a list of\noccurrences associated of a repeating event.</p>\n\n<p>To get all occurrences for a recurring event object, you can call <a href=\"#!/api/Events-method-show_occurrences\" rel=\"Events-method-show_occurrences\" class=\"docClass\">show_occurrences</a>\nevent occurrence](/docs/api/v1/events/show_occurrences) and pass in the\nevent's <code>id</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "events/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new event and checks the response.</p>\n\n<pre><code>Cloud.Events.create({\n    name: 'Celebration',\n    start_time: starttime,\n    duration: 3600,\n    recurring: 'monthly',\n    recurring_count: 5\n}, function (e) {\n    if (e.success) {\n        var event = e.events[0];\n        alert('Success:\\n' +\n            'id: ' + event.id + '\\n' +\n            'name: ' + event.name + '\\n' +\n            'updated_at: ' + event.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=Appcelerator Meetup Group\" -F \"photo=@photo.jpg\" -F \"place_id=4d7e62d6d0afbe04170000a4\" -F \"start_time=2011-03-22T20:59:50+0000\" -F \"duration=3600\" https://api.cloud.appcelerator.com/v1/events/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createEvent\"\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\":\"4d870f8bd0afbe1074000017\",\n        \"name\":\"Appcelerator Meetup Group\",\n        \"created_at\":\"2011-03-21T08:42:51+0000\",\n        \"updated_at\":\"2011-03-21T08:42:51+0000\",\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"duration\": 3600,\n        \"created_at\": \"2011-09-12T20:07:23+0000\",\n        \"updated_at\": \"2011-09-12T20:07:23+0000\",\n        \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=WEEKLY;COUNT=10\",\n        \"recurring\": \"weekly\",\n        \"recurring_count\": 10,\n        \"num_occurrences\": 10,\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        },\n        \"photo\": {\n          \"id\":\"4dcf5385d0afbe1833000009\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-05-15T04:16:05+0000\",\n          \"updated_at\":\"2011-05-15T04:16:05+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"name\": @\"Celebration\",\n      @\"start_time\": @\"2011-05-15T04:16:05+0000\",\n      @\"duration\": @3600,\n      @\"recurring\": @\"monthly\",\n      @\"recurring_count\": @5\n};\n\n[APSEvents create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"start_time\", \"2011-03-22T20:59:50+0000\");\ndata.put(\"duration\", \"3600\");\ndata.put(\"name\", \"Appcelerator Meetup Group\");\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsCreate({\n    name: 'Celebration',\n    start_time: starttime,\n    duration: 3600,\n    recurring: 'monthly',\n    recurring_count: 5\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.events[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Event name.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "start_time",
              "doc": "<p>Event start time.</p>\n",
              "optional": false,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "details",
              "doc": "<p>Description of the event.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "duration",
              "doc": "<p>Event duration, in seconds.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "recurring",
              "doc": "<p>Recurrance schedule. Can take the following values: \"daily\", \"weekly\", \"monthly\", or \"yearly\".</p>\n\n<p>Must be used together with <code>recurring_count</code> or <code>recurring_until</code> to limit the\nnumber of occurances. The total number of occurrences of an event in either\ncase is limited to 1000.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "recurring_count",
              "doc": "<p>Number of occurrences for the event.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "recurring_until",
              "doc": "<p>Date of last recurrance.</p>\n",
              "optional": true,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "place_id",
              "doc": "<p>ID for the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> where the event takes place.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for the event.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for the event.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this event.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this event.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma-separated list of tags associated with this event.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the event on behalf of.</p>\n\n<p>The current login user must be an application admin to create an event on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "events",
              "doc": "<p>Single-element array containing the newly-created event.</p>\n",
              "optional": true,
              "type": "Events[]",
              "html_type": "Events[]"
            }
          ],
          "owner": "Events",
          "shortDoc": "Create an event. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Delete the event with the given <code>id</code>. Only the original submitter can delete\nthe event.</p>\n\n<p>The <a href=\"#!/api/Events-property-place\" rel=\"Events-property-place\" class=\"docClass\">Place</a> associated with the object is not deleted.</p>\n\n<p>Application Admin can delete any Event object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "events/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a event and checks the response.</p>\n\n<pre><code>Cloud.Events.remove({\n    event_id: savedEventId\n}, function (e) {\n    if (e.success) {\n        alert('Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/events/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;event_id=4d86d26ed0afbe107400000f\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteEvent\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"event_id\": savedEventId\n};\n\n[APSEvents remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSEvents\", \"Removed!\");\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSClientError e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsDelete({\n    event_id: savedEventId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "event_id",
              "doc": "<p>ID of the event to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the Event object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to delete an Event object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Events",
          "shortDoc": "Delete the event with the given id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Perform custom query of events with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>In addition to the custom fields, you can query the following event fields:</p>\n\n<table>\n    <tr>\n        <th>Name</th>\n        <th>Type</th>\n        <th>Summary</th>\n    </tr>\n  <tr>\n    <td><code>name</code></td>\n    <td>String</td>\n    <td>Event's name</td>\n  </tr>\n  <tr>\n    <td><code>user_id</code></td>\n    <td>String</td>\n    <td>Event owner's user ID</td>\n  </tr>\n  <tr>\n    <td><code>place_id</code></td>\n    <td>String</td>\n    <td>If an event belongs to a place, the associated place_id</td>\n  </tr>\n  <tr>\n    <td><code>tags_array</code></td>\n    <td>Array</td>\n    <td>Array of tags assigned to the Event.</td>\n  </tr>\n  <tr>\n    <td><code>start_time</code></td>\n    <td>Time</td>\n    <td>Start time of an event</td>\n  </tr>\n  <tr>\n    <td><code>num_occurences</code></td>\n    <td>Integer</td>\n    <td>Number of time the event repeats</td>\n  </tr>\n  <tr>\n    <td><code>lnglat</code></td>\n    <td>Geo location array - [longitude, latitude]</td>\n    <td>If an event belongs to a place, you can use <code>lnglat</code> to query events by place location</td>\n  </tr>\n  <tr>\n    <td><code>created_at</code></td>\n    <td>Date</td>\n    <td>Timestamp when the event was created</td>\n  </tr>\n  <tr>\n    <td><code>updated_at</code></td>\n    <td>Date</td>\n    <td>Timestamp when the event was last updated</td>\n  </tr>\n</table>\n\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "events/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of events and checks the response.</p>\n\n<pre><code>Cloud.Events.query(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.events.length);\n        for (var i = 0; i &lt; e.events.length; i++) {\n            var event = e.events[i];\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + event.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that queries events with name \"meetup\" near latitude 37.12, longitude -122.23 within 5 miles:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"meetup\",\"lnglat\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/events/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryEvents\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\":\"4d870f8bd0afbe1074000017\",\n        \"name\":\"meetup\",\n        \"start_time\":\"2011-03-22T04:00:00+0000\",\n        \"created_at\":\"2011-03-21T08:42:51+0000\",\n        \"updated_at\":\"2011-03-21T08:42:51+0000\"\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSEvents query:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu events\", (unsigned long)((NSArray *)e.response[@\"events\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'name':'meetup','lnglat':{'$nearSphere':[-122.23,37.12], '$maxDistance' : 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSEvents.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray events = e.getResponse().getJSONArray(\"events\");\n                    for (int i = 0; i &lt; events.length(); i++) {\n                        Log.i(\"APSEvents\", events.getJSONObject(i).getString(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        Log.i(\"APSEvents\",\"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsQuery({\n    where: {\n        name:\"meetup\",\n        lnglat: {\n            '$nearSphere':[-122.23,37.12],\n            '$maxDistance' : 0.00126\n        }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.events.forEach(function(evt) {\n            console.log(evt);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n\n\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5.\nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Event in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the current user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Events",
          "shortDoc": "Perform custom query of events with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "query_occurrences",
          "deprecated": false,
          "id": "method-query_occurrences",
          "doc": "<p>Perform custom query of event occurrences with sorting and paginating.</p>\n\n<p>Currently, you can not query or sort data stored inside array or hash in custom\nfields.</p>\n\n<p>In addition to custom fields, you can query the following fields:</p>\n\n<table class=\"doc_content_table\">\n    <tr>\n        <th>Name</th>\n    <th>Type</th>\n        <th>Summary</th>\n    </tr>\n  <tr>\n    <td><code>name</code></td>\n    <td>String</td>\n    <td>Event's name</td>\n  </tr>\n  <tr>\n    <td><code>user_id</code></td>\n    <td>String</td>\n    <td>Event owner's user id</td>\n  </tr>\n  <tr>\n    <td><code>place_id</code></td>\n    <td>String</td>\n    <td>If an event belongs to a place, the associated place_id</td>\n  </tr>\n  <tr>\n    <td><code>start_time</code></td>\n    <td>Time</td>\n    <td>Start time of an event occurrence</td>\n  </tr>\n  <tr>\n    <td><code>end_time</code></td>\n    <td>Time</td>\n    <td>End time of an event occurrence</td>\n  </tr>\n  <tr>\n    <td><code>lnglat</code></td>\n    <td>Geo location array - [longitude, latitude]</td>\n    <td>If an event belongs to a place, you can use <code>lnglat</code> to query events by place location</td>\n  </tr>\n</table>\n\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "events/query/occurrences.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves a list of event occurrences and checks the response.</p>\n\n<pre><code>Cloud.Events.queryOccurrences(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.event_occurrences.length);\n        for (var i = 0; i &lt; e.event_occurrences.length; i++) {\n            var event = e.event_occurrences[i].event;\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that queries event occurrences with name \"meetup\" near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"meetup\",\"lnglat\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/events/query/occurrences.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryEventOccurrences\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"event_occurrences\": [\n      {\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"end_time\": \"2011-03-22T21:59:50+0000\",\n        \"event\": {\n          \"id\": \"4e932f74ad44939896000054\",\n          \"name\": \"meetup\",\n          \"start_time\": \"2011-03-22T20:59:50+0000\",\n          \"duration\": 3600,\n          \"created_at\": \"2012-01-31T04:52:02+0000\",\n          \"updated_at\": \"2012-01-31T04:52:02+0000\",\n          \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=DAILY;COUNT=3\",\n          \"recurring\": \"daily\",\n          \"recurring_count\": 3,\n          \"recurring_until\": \"2011-03-26T20:59:50+0000\",\n          \"num_occurrences\": 3,\n          \"details\": \"food\",\n          \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          },\n          \"place\": {\n            \"id\":\"4d7e62d6d0afbe04170000a4\",\n            \"name\":\"Maya Restaurant\",\n            \"created_at\":\"2011-03-14T18:47:50+0000\",\n            \"updated_at\":\"2011-03-14T18:47:50+0000\",\n            \"address\":\"303 2nd Street\",\n            \"city\":\"San Francisco\",\n            \"state\":\"CA\",\n            \"country\":\"United States\",\n            \"phone\":\"(415) 543-2928\",\n            \"latitude\":37.784732,\n            \"longitude\":-122.395441\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSEvents queryOccurrences:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu event_occurrences\", (unsigned long)((NSArray *)e.response[@\"event_occurrences\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\nJSONObject params = new JSONObject(\"{'name':'meetup','lnglat':{'$nearSphere':[-122.23,37.12], '$maxDistance' : 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSEvents.queryOccurrences(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                       Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/query_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsQueryOccurrences({\n    where: {\n        name:\"meetup\",\n        lnglat: {\n            '$nearSphere':[-122.23,37.12],\n            '$maxDistance' : 0.00126\n        }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.event_occurrences.forEach(function(evt) {\n            console.log(evt);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5. \nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n\n<p class=\"note\">This parameter is only available to ArrowDB applications created before ArrowDB 1.1.5. \nApplications created with ArrowDB 1.1.5 and later must use <a href=\"#!/guide/search_query-section-query-pagination\">ranged-based queries</a> queries\nto paginate their queries.</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>Number of records to skip. Must be used together with <code>limit</code>.\nThe specified value must not be less than 0 or an HTTP 400 error will be returned.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Events",
          "shortDoc": "Perform custom query of event occurrences with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "search",
          "deprecated": true,
          "id": "method-search",
          "doc": "<p>Full text search of events.</p>\n\n<p>Optionally, <code>latitude</code> and <code>longitude</code> can be given to return the list of\nevents starting from a particular location (location is retrieved from place\nif the event is associated with a place). To bound the results within a\ncertain radius (in km) from the starting coordinates, add the <code>distance</code>\nparameter. <code>q</code> can be given to search by event name.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "Use the {@link Events#query} method instead with the `$text` query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.\n"
            }
          },
          "url": "events/search.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example searches for events near a specified location.</p>\n\n<pre><code>Cloud.Events.search({\n    latitude: lat,\n    longitude: lon\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.events.length);\n        for (var i = 0; i &lt; e.events.length; i++) {\n            var event = e.events[i];\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'longitude: ' + event.longitude + '\\n' +\n                  'latitude: ' + event.latitude + '\\n' +\n                  'updated_at: ' + event.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/search.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d7e62d6d0afbe04170000a4\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchEvents\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\": \"4e932f74ad44939896000054\",\n        \"name\": \"Appcelerator Cloud Services\",\n        \"start_time\": \"2011-10-10T17:43:00+0000\",\n        \"duration\": 3000,\n        \"created_at\": \"2011-10-10T17:46:29+0000\",\n        \"updated_at\": \"2011-10-10T17:46:29+0000\",\n        \"ical\": \"DTSTART:20111010T174300Z\\nDURATION:PT50M\\nRRULE:FREQ=WEEKLY;COUNT=5\",\n        \"recurring\": \"weekly\",\n        \"recurring_count\": 5,\n        \"recurring_until\": \"2011-10-10T17:43:00+0000\",\n        \"num_occurrences\": 5,\n        \"details\": \"food\",\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"latitude\": lat,\n      @\"longitude\": lon\n};\n\n[APSEvents search:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu events\", (unsigned long)((NSArray *)e.response[@\"events\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray events = e.getResponse().getJSONArray(\"events\");\n                    final ArrayList&lt;String&gt; objectsList = new ArrayList&lt;String&gt;();\n                    for (int i = 0; i &lt; events.length(); i++) {\n                        Log.i(\"APSEvents\", events.getJSONObject(i).getString(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        Log.i(\"APSEvents\", \"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsSearch({\n    latitude: lat,\n    longitude: long\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.events.forEach(function(evt) {\n            console.log(evt);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "place_id",
              "doc": "<p>Restrict search results to events located in the identified <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_id",
              "doc": "<p>Restrict search results to events owned by the identified <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "latitude",
              "doc": "<p>Latitude of the search starting point.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "longitude",
              "doc": "<p>Longitude of the search starting point.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "distance",
              "doc": "<p>Maximum distance in km from the starting point identified by\n<code>longitude</code>, latitude`.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "start_time",
              "doc": "<p>Only return events that start on or after <code>start_time</code>.</p>\n",
              "optional": true,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "q",
              "doc": "<p>Space-separated list of keywords, used to perform full text search on event\nname and tags.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "events",
              "doc": "<p>List of events matching the search results.</p>\n",
              "optional": true,
              "type": "Events[]",
              "html_type": "Events[]"
            }
          ],
          "owner": "Events",
          "shortDoc": "Full text search of events. ...",
          "html_meta": {
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>Use the <a href=\"#!/api/Events-method-query\" rel=\"Events-method-query\" class=\"docClass\">query</a> method instead with the <code>$text</code> query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.</p>\n</p>\n        </div>\n"
          }
        },
        {
          "tagname": "method",
          "name": "search_occurrences",
          "deprecated": true,
          "id": "method-search_occurrences",
          "doc": "<p>Full text search of event occurrences.</p>\n\n<p>Optionally, <code>latitude</code> and <code>longitude</code> can be given to return the list of\nevent occurrences starting from a particular location (location is retrieved\nfrom place if the event is associated with a place). To bound the results\nwithin a certain radius (in km) from the starting coordinates, add the\n<code>distance</code> parameter. <code>q</code> can be given to search by event name.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "Use the {@link Events#query_occurrences} method instead with the `$text` query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.\n"
            }
          },
          "url": "events/search/occurrences.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves a list of event occurrences and checks the response.</p>\n\n<pre><code>Cloud.Events.searchOccurrences({\n    place_id: savedPlaceId,\n    start_time: startTime\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.event_occurrences.length);\n        for (var i = 0; i &lt; e.event_occurrences.length; i++) {\n            var event = e.event_occurrences[i].event;\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"http://api.cloud.appcelerator.com/v1/events/search/occurrences.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d7e62d6d0afbe04170000a4\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchEventOccurrences\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"event_occurrences\": [\n      {\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"end_time\": \"2011-03-22T21:59:50+0000\",\n        \"event\": {\n          \"id\": \"4f308b26c3666e22a0000019\",\n          \"name\": \"test event 7\",\n          \"start_time\": \"2011-03-22T20:59:50+0000\",\n          \"duration\": 3600,\n          \"created_at\": \"2012-02-07T02:23:34+0000\",\n          \"updated_at\": \"2012-02-07T02:23:34+0000\",\n          \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=DAILY;COUNT=3\",\n          \"recurring\": \"daily\",\n          \"recurring_count\": 3,\n          \"recurring_until\": \"2011-03-26T20:59:50+0000\",\n          \"num_occurrences\": 3,\n          \"details\": \"test details\",\n          \"user\": {\n            \"id\": \"4f308b24c3666e22a0000002\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Dude\",\n            \"created_at\": \"2012-02-07T02:23:32+0000\",\n            \"updated_at\": \"2012-02-07T02:23:34+0000\",\n            \"external_accounts\": [\n\n            ],\n            \"username\": \"bob\",\n            \"email\": \"bob@dude.com\"\n          },\n          \"place\": {\n            \"id\": \"4f308b26c3666e22a0000017\",\n            \"name\": \"test place\",\n            \"created_at\": \"2012-02-07T02:23:34+0000\",\n            \"updated_at\": \"2012-02-07T02:23:34+0000\",\n            \"address\": \"test address\",\n            \"city\": \"test city\",\n            \"latitude\": 37.784732,\n            \"longitude\": -122.393159\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": savedPlaceId,\n      @\"start_time\": @\"2011-05-15T04:16:05+0000\"\n};\n\n[APSEvents searchOccurrences:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu event_occurrences\", (unsigned long)((NSArray *)e.response[@\"event_occurrences\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.searchOccurrences(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/search_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsSearchOccurrences({\n    latitude: lat,\n    longitude: long\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.event_occurrences.forEach(function(evt) {\n            console.log(evt);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "place_id",
              "doc": "<p>Restrict search results to events located in the identified <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_id",
              "doc": "<p>Restrict search results to events owned by the identified <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "latitude",
              "doc": "<p>Latitude of the search starting point.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "longitude",
              "doc": "<p>Longitude of the search starting point.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "distance",
              "doc": "<p>Maximum distance in km from the starting point identified by\n<code>longitude</code>, latitude`.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "start_time",
              "doc": "<p>Only return events that start on or after <code>start_time</code>.</p>\n",
              "optional": true,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "end_time",
              "doc": "<p>Only return events that end on or before <code>end_time</code>.</p>\n",
              "optional": true,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "q",
              "doc": "<p>Space-separated list of keywords, used to perform full text search on event\nname and tags.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "events",
              "doc": "<p>List of events matching the search results.</p>\n",
              "optional": true,
              "type": "Events[]",
              "html_type": "Events[]"
            }
          ],
          "owner": "Events",
          "shortDoc": "Full text search of event occurrences. ...",
          "html_meta": {
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>Use the <a href=\"#!/api/Events-method-query_occurrences\" rel=\"Events-method-query_occurrences\" class=\"docClass\">query_occurrences</a> method instead with the <code>$text</code> query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.</p>\n</p>\n        </div>\n"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Show event(s) with the given IDs.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "events/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a event and checks the response.</p>\n\n<pre><code>Cloud.Events.show({\n    event_id: savedEventId\n}, function (e) {\n    if (e.success) {\n        var event = e.events[0];\n        alert('Success:\\n' +\n            'id: ' + event.id + '\\n' +\n            'name: ' + event.name + '\\n' +\n            'updated_at: ' + event.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;event_id=4d870f8bd0afbe1074000017\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showEvents\"\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\": \"4e932f74ad44939896000054\",\n        \"name\": \"Appcelerator Cloud Services\",\n        \"start_time\": \"2011-10-10T17:43:00+0000\",\n        \"duration\": 3000,\n        \"created_at\": \"2011-10-10T17:46:29+0000\",\n        \"updated_at\": \"2011-10-10T17:46:29+0000\",\n        \"ical\": \"DTSTART:20111010T174300Z\\nDURATION:PT50M\\nRRULE:FREQ=WEEKLY;COUNT=5\",\n        \"recurring\": \"weekly\",\n        \"recurring_count\": 5,\n        \"recurring_until\": \"2011-10-10T17:43:00+0000\",\n        \"num_occurrences\": 5,\n        \"details\": \"food\",\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"place\": {\n          \"id\":\"4d7e62d6d0afbe04170000a4\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-14T18:47:50+0000\",\n          \"updated_at\":\"2011-03-14T18:47:50+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": savedPlaceId\n};\n\n[APSEvents show:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu events\", (unsigned long)((NSArray *)e.response[@\"events\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d870f8bd0afbe1074000017\");\n\ntry {\n    APSEvents.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsShow({\n    event_id: savedEventId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.events[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "event_id",
              "doc": "<p>ID of the event to delete.</p>\n\n<p>Either <code>event_id</code> or <code>event_ids</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_ids",
              "doc": "<p>Comma-separated list of event IDs to show.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the identified objects, but also some important data related\nto the returning objects such as object's owner or referenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Event object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "events",
              "doc": "<p>List of events.</p>\n",
              "optional": true,
              "type": "Events[]",
              "html_type": "Events[]"
            }
          ],
          "owner": "Events",
          "shortDoc": "Show event(s) with the given IDs. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show_occurrences",
          "deprecated": false,
          "id": "method-show_occurrences",
          "doc": "<p>Show the event occurrences of an event with the given <code>event_id</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "events/show/occurrences.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about an event's occurrences and checks the response.</p>\n\n<pre><code>Cloud.Events.showOccurrences({\n    event_id: savedEventId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.event_occurrences.length);\n        for (var i = 0; i &lt; e.event_occurrences.length; i++) {\n            var event = e.event_occurrences[i].event;\n            alert('id: ' + event.id + '\\n' +\n                  'name: ' + event.name + '\\n' +\n                  'start time: ' + event.start_time + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/events/show/occurrences.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;event_id=4d870f8bd0afbe1074000017\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showEventOccurrences\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 1\n  },\n  \"response\": {\n    \"event_occurrences\": [\n      {\n        \"start_time\": \"2011-03-22T20:59:50+0000\",\n        \"end_time\": \"2011-03-22T21:59:50+0000\",\n        \"event\": {\n          \"id\": \"4e932f74ad44939896000054\",\n          \"name\": \"Appcelerator Cloud Services\",\n          \"start_time\": \"2011-03-22T20:59:50+0000\",\n          \"duration\": 3600,\n          \"created_at\": \"2012-01-31T04:52:02+0000\",\n          \"updated_at\": \"2012-01-31T04:52:02+0000\",\n          \"ical\": \"DTSTART:20110322T205950Z\\nDURATION:PT1H\\nRRULE:FREQ=DAILY;COUNT=3\",\n          \"recurring\": \"daily\",\n          \"recurring_count\": 3,\n          \"recurring_until\": \"2011-03-26T20:59:50+0000\",\n          \"num_occurrences\": 3,\n          \"details\": \"food\",\n          \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          },\n          \"place\": {\n            \"id\":\"4d7e62d6d0afbe04170000a4\",\n            \"name\":\"Maya Restaurant\",\n            \"created_at\":\"2011-03-14T18:47:50+0000\",\n            \"updated_at\":\"2011-03-14T18:47:50+0000\",\n            \"address\":\"303 2nd Street\",\n            \"city\":\"San Francisco\",\n            \"state\":\"CA\",\n            \"country\":\"United States\",\n            \"phone\":\"(415) 543-2928\",\n            \"latitude\":37.784732,\n            \"longitude\":-122.395441\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"place_id\": savedPlaceId\n};\n\n[APSEvents showOccurrences:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu event_occurrences\", (unsigned long)((NSArray *)e.response[@\"event_occurrences\"]).count];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d870f8bd0afbe1074000017\");\n\ntry {\n    APSEvents.showOccurrences(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSEvents\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSEvents\", e1.toString());\n                }\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/show_occurrences.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsShowOccurrences({\n    event_id: savedEventId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.event_occurrences[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "event_id",
              "doc": "<p>ID of the event to show occurrences of.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "event_occurences",
              "doc": "<p>An array of event occurrence objects, where each occurrence is represented by\nthree properties:</p>\n\n<ul>\n<li><code>start_time</code>: <code>Date</code>. Start time for the occurrence.</li>\n<li><code>end_time</code>: <code>Date</code>. End time for the occurrence.</li>\n<li><code>event</code>: <code>Events</code>. The event object associated with this occurrence.</li>\n</ul>\n\n\n<p>Since the event information will be the same for each occurrence, you can omit\nthis information by setting <code>response_json_depth</code> to 1.</p>\n",
              "optional": true,
              "type": "Hash[]",
              "html_type": "Hash[]"
            }
          ],
          "owner": "Events",
          "shortDoc": "Show the event occurrences of an event with the given event_id. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Update the event with the given <code>id</code>. Only the original submitter can update\nthe event.</p>\n\n<p>For the event that is set as a recurring event, once created, there will be\nseveral \"event occurrences\" created associating with the event object on\nserver side, one \"event occurrence\" represents a single occurrence of the\nrecurring event. An \"event occurrence\" contains start and end time of the\nevent's occurrence which are calulated according to the \"recurring\" settings\nof the event object.</p>\n\n<p>Instead of computing actual individual occurrences of a recurring event on the\nclient side, you can use event occurrences query API to get a list of\noccurrences associated with a repeating event.</p>\n\n<p>To get all \"event occurrence\" of an recurring event object, you can use\n<a href=\"#!/api/Events-method-show_occurrences\" rel=\"Events-method-show_occurrences\" class=\"docClass\">show_occurrences</a> with the event's <code>id</code>.</p>\n\n<p>All the event occurrences will be recomputed if there is any change to the\nstart_time, duration and/or recurring.</p>\n\n<p>An application admin can update any Event object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "events/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a event and checks the response.</p>\n\n<pre><code>Cloud.Events.update({\n    event_id: savedEventId,\n    name: 'Annual Celebration',\n    start_time: starttime,\n    duration: 3600,\n    recurring: 'monthly',\n    recurring_count: 5\n}, function (e) {\n    if (e.success) {\n        var event = e.events[0];\n        alert('Success:\\n' +\n            'id: ' + event.id + '\\n' +\n            'name: ' + event.name + '\\n' +\n            'updated_at: ' + event.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"event_id=4d870f8bd0afbe1074000017\" -F \"place_id=4d858ca9d0afbe014f000008\" http://api.cloud.appcelerator.com/v1/events/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updateEvent\"\n  },\n  \"response\": {\n    \"events\": [\n      {\n        \"id\":\"4d870f8bd0afbe1074000017\",\n        \"name\":\"Appcelerator Cloud Services Meetup Group\",\n        \"start_time\":\"2011-03-22T04:00:00+0000\",\n        \"created_at\":\"2011-03-21T08:42:51+0000\",\n        \"updated_at\":\"2011-03-21T08:57:00+0000\"\n        \"user\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"end_time\":\"2011-03-22T06:00:00+0000\",\n        \"place\": {\n          \"id\":\"4d858ca9d0afbe014f000008\",\n          \"name\":\"El Farolito Taqueria\",\n          \"created_at\":\"2011-03-20T05:12:09+0000\",\n          \"updated_at\":\"2011-03-20T05:12:09+0000\",\n          \"address\":\"2779 Mission Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 826-4870\",\n          \"latitude\":37.784732,\n          \"longitude\":-122.395441\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n      @\"event_id\": savedEventId,\n      @\"name\": @\"Annual Celebration\",\n      @\"start_time\": @\"2011-05-15T04:16:05+0000\",\n      @\"duration\": @3600,\n      @\"recurring\": @\"yearly\",\n      @\"recurring_count\": @5\n};\n\n[APSEvents update:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal static Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"event_id\", \"4d870f8bd0afbe1074000017\");\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSEvents.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSEvents\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSEvents\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSEvents\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Events/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.eventsUpdate({\n    event_id: savedEventId,\n    name: 'Annual Celebration',\n    start_time: starttime,\n    duration: 3600,\n    recurring: 'monthly',\n    recurring_count: 5\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.events[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "event_id",
              "doc": "<p>ID of the event to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>Updated event name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "start_time",
              "doc": "<p>Updated event start time.</p>\n",
              "optional": true,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "duration",
              "doc": "<p>Updated event duration, in seconds.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "recurring",
              "doc": "<p>New recurrance schedule. Can take the following values: \"daily\", \"weekly\", \"monthly\", or \"yearly\".</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "recurring_count",
              "doc": "<p>Updated number of occurrences for the event.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "recurring_until",
              "doc": "<p>Updated date of last recurrance.</p>\n",
              "optional": true,
              "type": "Date",
              "html_type": "Date"
            },
            {
              "name": "details",
              "doc": "<p>Updated description of the event.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>ID of the place where this event takes place.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to assign as the event's primary photo.</p>\n\n<p>When you use <code>photo</code> parameter to attach a new photo, you can use it with\n<a href=\"/docs/photosizes\">custom resize and sync options</a></p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to use as the event's primary photo.</p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma-separated list of tags associated with this event.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this checkin object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to update the Event object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to update the Event object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "events",
              "doc": "<p>Single-element array containing the updated event object.</p>\n",
              "optional": true,
              "type": "Events[]",
              "html_type": "Events[]"
            }
          ],
          "owner": "Events",
          "shortDoc": "Update the event with the given id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Files",
    "doc": "<p>The Files API lets you store files up to 100MB in the ArrowDB cloud.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this user object.</p>\n",
          "type": "Date",
          "owner": "Files",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated ID for this object.</p>\n",
          "type": "String",
          "owner": "Files",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>File name.</p>\n",
          "type": "String",
          "owner": "Files",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "processed",
          "id": "property-processed",
          "doc": "<p>Flag indicating whether the file has finished uploading and is  available for access.</p>\n",
          "type": "Boolean",
          "owner": "Files",
          "html_type": "Boolean",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "s3_acl",
          "id": "property-s3_acl",
          "doc": "<p>File permission.  Can either by <code>private</code> or <code>public_read</code>.</p>\n",
          "type": "String",
          "owner": "Files",
          "shortDoc": "File permission. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this user object.</p>\n",
          "type": "Date",
          "owner": "Files",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "url",
          "id": "property-url",
          "doc": "<p>URL for accessing the file. Only available when <code>processed</code> is <code>true</code>.\nFor private file permission, the URL is temporary and will expire. Default is five minutes.</p>\n",
          "type": "String",
          "owner": "Files",
          "shortDoc": "URL for accessing the file. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/Files.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Owner of this object.</p>\n",
          "type": "Users",
          "owner": "Files",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Files objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Files objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "files/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all File objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"files/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All File objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/files/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all File objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"files/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All File object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all File objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"files/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All File objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.filesBatchDelete(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Files objects to delete.\nIf not specified, all Files objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Files",
          "shortDoc": "Deletes Files objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of File objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "files/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of File objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"files/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/files/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"data_filesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of File objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"files/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of File objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"files/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.filesCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of File objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Files",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a new file object with a binary attachment or contents of a URL.\nThe size of the file can be up to 100 MB. The response includes a <code>processed</code> flag which indicates\nif the file has been stored reliably in the Appcelerator Cloud Services\nstorage engine. This will initially be <code>false</code>. Once the file is available in\nthe storage engine, the <code>processed</code> flag will be <code>true</code>, and file <code>url</code> will\nbe available.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "files/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new file and checks the response.</p>\n\n<pre><code>Cloud.Files.create({\n    name: 'test.dat',\n    file: Titanium.Filesystem.getFile('test.dat')\n}, function (e) {\n    if (e.success) {\n        var file = e.files[0];\n        alert('Success:\\n' +\n            'id: ' + file.id + '\\n' +\n            'name: ' + file.name + '\\n' +\n            'updated_at: ' + file.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that creates a new file object from a binary attachment:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=my_file\" -F \"file=@resume.pdf\" http://api.cloud.appcelerator.com/v1/files/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"stat\":\"ok\",\n    \"code\":200,\n    \"method\":\"createFile\"\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f05446bc3666eb7ba000001\",\n        \"name\": \"my_file\",\n        \"processed\": false,\n        \"created_at\": \"2012-01-05T06:34:19+0000\",\n        \"updated_at\": \"2012-01-05T06:34:19+0000\",\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Example cURL request that creates a new file from a URL:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=my_file\" -F \"url=http://www.appcelerator.com/wp-content/uploads/blog-traditional-companies.png\" http://api.cloud.appcelerator.com/v1/files/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>The JSON response is identical.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSError* error = nil;\nNSData *fileData = [NSData dataWithContentsOfFile:@\"Test.txt\"\n                              options:0\n                                error: &amp;error];\nif (fileData == nil) {\n  // handle error\n  NSLog(@\"Failed to read file, error %@\", error);\n  return;\n}\nNSDictionary *data = @{\n                         @\"name\" : @\"Test.txt\",\n                         @\"file\" : fileData\n                      };\n[APSFiles create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      NSDictionary *file = files[0];\n      NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                              file[@\"id\"],\n                              file[@\"name\"],\n                              file[@\"updated_at\"]];\n\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                  message:message\n                                 delegate:nil\n                        cancelButtonTitle:@\"OK\"\n                        otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"my_file\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSFiles.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"File Uploaded!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;'),\n    fs = require('fs');\narrowDBApp.filesCreate({\n    name: 'test.dat',\n    file: fs.createReadStream('test.dat')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.files[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>File name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "file",
              "doc": "<p>The attached binary file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.\nNote: one way of uploading files when using Node SDK would look like this:</p>\n\n<pre><code> function upload(req, res) {\n   console.log(req.body.fileName);\n\n   // Create buffer for string and readable stream\n   var buffer = new Buffer(req.body.fileObject, 'ascii');\n   var bufferStream = new stream.PassThrough();\n\n   bufferStream.end(buffer);\n\n   // Setup and login to ArrowDB\n   var ArrowDB = require('arrowdb'),\n   arrowDBApp = new ArrowDB('f4PlGSZdIzFcoqbQYz9ljoHkxDBSJw2x');\n\n   arrowDBApp.usersLogin({\n     login: 'appc_app_user_dev',\n     password: 'vLTIsB1yqQPcupc4PP'\n   }, function(err, result) {\n     if (err) {\n       console.error(err.message);\n     } else {\n       arrowDBApp.sessionCookieString = result.cookieString;\n       sessionID = result.body.meta.session_id;\n\n       var fileInfo = {\n         value: bufferStream,\n         options: {\n             filename: req.body.fileName,\n             knownLength: buffer.length\n         }\n       }\n\n       // On login success create the file\n       arrowDBApp.filesCreate({\n         name: req.body.fileName,\n         file: fileInfo,\n         session_id: sessionID\n      }, function(err, result) {\n        if (err) {\n          console.error(JSON.stringify(err, null, \"\\t\"));\n        } else {\n          console.log(result.body.response.files[0]);\n        }\n      });\n    }\n  });\n}\n</code></pre>\n",
              "optional": true,
              "type": "FileUpload",
              "html_type": "FileUpload"
            },
            {
              "name": "url",
              "doc": "<p>URL of file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "s3_acl",
              "doc": "<p>Permission level of the file.  Set to either:</p>\n\n<ul>\n<li><code>private</code>: Only a logged-in user can access the file.</li>\n<li><code>public_read</code>: Anyone can access the file (default).</li>\n</ul>\n\n\n<p>For private permission, when you retrieve the URL for the file using either the show or\nquery method, the link is temporary and will expire. The default is five minutes.\nWhen exporting data, the exported URL will be a root URL and not a direct URL to the file.</p>\n\n<p>To restrict file access to specific users, use an ACL.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the file on behalf of.</p>\n\n<p>The current login user must be an application admin to create a file on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "files",
              "doc": "<p>Single-element array containing the newly-created file.</p>\n\n<p>Note that the file URL isn't available immediately.</p>\n",
              "optional": true,
              "type": "Files[]",
              "html_type": "Files[]"
            }
          ],
          "owner": "Files",
          "shortDoc": "Creates a new file object with a binary attachment or contents of a URL. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes the file. To delete a file, the current user must be one of the following:</p>\n\n<ul>\n<li>The file's owner</li>\n<li>A user with write priviledges granted by the file's ACL</li>\n<li>An application admin</li>\n</ul>\n\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "files/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a file and checks the response.</p>\n\n<pre><code>Cloud.Files.remove({\n    file_id: savedFileId\n}, function (e) {\n    if (e.success) {\n        alert('Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/files/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;file_id=4f05446bc3666eb7ba000001\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteFile\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"file_id\" : @\"savedFileId\"\n                      };\n[APSFiles remove:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:@\"File Removed\"\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"file_id\", \"4f05446bc3666eb7ba000001\");\n\ntry {\n    APSFiles.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.filesDelete({\n    file_id: savedFileId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "file_id",
              "doc": "<p>ID of the file to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the File object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to delete the File object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Files",
          "shortDoc": "Deletes the file. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Perform custom query of files with sorting and paginating. Currently you can\nnot query or sort data stored inside custom fields that have Hash values.</p>\n\n<p>In addition to custom fields, here is a list of pre-defined fields in the File\nobject that can be queried and sorted:</p>\n\n<ul>\n<li><p><code>user_id: String</code>.  User ID of the File's owner.</p></li>\n<li><p><code>created_at: Date</code>. Timestamp when the file was created.</p></li>\n<li><p><code>updated_at: Date</code>. Timestamp when the file was last updated.</p></li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "files/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of files and checks the response.</p>\n\n<pre><code>Cloud.Files.query({\n    page: 1,\n    per_page: 20\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.files.length);\n        for (var i = 0; i &lt; e.files.length; i++) {\n            var file = e.files[i];\n            alert('id: ' + file.id + '\\n' +\n                'name: ' + file.name + '\\n' +\n                'updated_at: ' + file.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that queries files with name \"Appcelerator Cloud Services\":</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"Appcelerator Cloud Services\"}' \"https://api.cloud.appcelerator.com/v1/files/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>$ curl -b c.txt -c c.txt -X GET --data-urlencode  'where=[\"user_id\":\"4f0fe764d9ca72833d000002\", \"name\":\"my_file\"] \"https://localhost/v1/files/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;order=-created_at&amp;per_page=3\"\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryFiles\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f0fe787d9ca72833d000041\",\n        \"name\": \"my_file\",\n        \"processed\": true,\n        \"created_at\": \"2012-01-13T08:12:55+0000\",\n        \"updated_at\": \"2012-01-13T08:12:59+0000\",\n        \"url\": \"http://storage.appcelerator.comtest.cocoafish.com/Z6F6oHfp3IqPMT54XDbdo6KA/files/2a/26/4f0fe787d9ca72833d000041/cocoafish.pdf\",\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\"    : @1,\n                         @\"per_page\": @20\n                      };\n[APSFiles query:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      for (NSDictionary *file in files) {\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                file[@\"id\"],\n                                file[@\"name\"],\n                                file[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                    message:message\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n      }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'name': 'Appcelerator Cloud Services'}\");\ndata.put(\"where\", params);\n\ntry {\n    APSFiles.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray files = e.getResponse().getJSONArray(\"files\");\n                    if (files.length() &lt;= 0) {\n                        Log.i(\"APSFiles\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; files.length(); i++) {\n                            JSONObject file = files.getJSONObject(i);\n                            Log.i(\"APSFiles\", \"File name: \" + file.getString(\"name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSFiles\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.filesQuery({\n    limit: 10\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.files.forEach(function(file) {\n            console.log(file);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>&lt;Files.skip></p>\n\n<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "expires",
              "doc": "<p>For private file permission, sets the expiration time in seconds for the temporary link\nreferencing the location to access the file. By default, the link expires in five minutes.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "files",
              "doc": "<p>Array of file objects matching the search criteria.</p>\n",
              "optional": true,
              "type": "Files[]",
              "html_type": "Files[]"
            }
          ],
          "owner": "Files",
          "shortDoc": "Perform custom query of files with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Returns information associated with the file.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "files/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a file and checks the response.</p>\n\n<pre><code>Cloud.Files.show({\n    file_id: savedFileId\n}, function (e) {\n    if (e.success) {\n        var file = e.files[0];\n        alert('Success:\\n' +\n            'id: ' + file.id + '\\n' +\n            'name: ' + file.name + '\\n' +\n            'updated_at: ' + file.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/files/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;file_id=4f05446bc3666eb7ba000001\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showFile\"\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f05446bc3666eb7ba000001\",\n        \"name\": \"my_file\",\n        \"processed\": true,\n        \"created_at\": \"2012-01-05T06:34:19+0000\",\n        \"updated_at\": \"2012-01-05T06:34:41+0000\",\n        \"url\": \"http://storage.appcelerator.com/KTSfOLVbzHx3R8s4hRiPvSfS1agjrkb0/files/c9/39/4f05489bc3666eb7aa000001/resume.pdf\"\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"file_id\" : @\"savedFileId\"\n                      };\n[APSFiles show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      NSDictionary *file = files[0];\n      NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                              file[@\"id\"],\n                              file[@\"name\"],\n                              file[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"file_id\", \"4f05446bc3666eb7ba000001\");\n\ntry {\n    APSFiles.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSFiles\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.filesShow({\n    file_id: savedFileId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.files[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "file_id",
              "doc": "<p>ID of the file to retrieve information for.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "expires",
              "doc": "<p>For private file permission, sets the expiration time in seconds for the temporary link\nreferencing the location to access the file. By default, the link expires in five minutes.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "files",
              "doc": "<p>Single-element array containing the requested file object.</p>\n\n<p>Note that the file URL may not be available if the file hasn't finished\nprocessing.</p>\n",
              "optional": true,
              "type": "Files[]",
              "html_type": "Files[]"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Files",
          "shortDoc": "Returns information associated with the file. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates an existing file object with a binary attachment, or contents of a URL. When replacing the existing file with a\nnew one, the object's <code>processing</code> flag is set to <code>false</code>, and its <code>url</code> property will not be valid\nuntil the new file has been processed and uploaded to the Appcelerator Cloud\nServices storage cloud.</p>\n\n<p>Application administrators can update any File object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "files/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a file and checks the response.</p>\n\n<pre><code>Cloud.Files.update({\n    file_id: savedFileId,\n    name: 'Notice'\n}, function (e) {\n    if (e.success) {\n        var file = e.files[0];\n        alert('Success:\\n' +\n            'id: ' + file.id + '\\n' +\n            'name: ' + file.name + '\\n' +\n            'updated_at: ' + file.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that updates an existing file object with a new binary attachment:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X PUT -F \"file=@newresume.pdf\" -F \"name=new_file_name\" -F \"file_id=4f05446bc3666eb7ba000001\" https://api.cloud.appcelerator.com/v1/files/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"updateFile\"\n  },\n  \"response\": {\n    \"files\": [\n      {\n        \"id\": \"4f05446bc3666eb7ba000001\",\n        \"name\": \"new_file_name\",\n        \"processed\": false,\n        \"created_at\": \"2012-01-05T06:34:19+0000\",\n        \"updated_at\": \"2012-01-05T06:34:19+0000\",\n        \"user\": {\n          \"id\": \"4f0fe764d9ca72833d000002\",\n          \"first_name\": \"Abe\",\n          \"last_name\": \"Bob\",\n          \"created_at\": \"2012-01-13T08:12:20+0000\",\n          \"updated_at\": \"2012-01-13T08:12:43+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"email\": \"a@mike.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Example cURL request that updates an existing file object with the contents of a remote URL:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X PUT -F \"url=http://www.appcelerator.com/wp-content/uploads/blog-traditional-companies.png\" -F \"name=new_file_name\" -F \"file_id=4f05446bc3666eb7ba000001\" https://api.cloud.appcelerator.com/v1/files/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>The JSON response is identical.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"file_id\" : @\"savedFileId\",\n                         @\"name\"    : @\"Notice\"\n                      };\n[APSFiles update:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *files = e.response[@\"files\"];\n      NSDictionary *file = files[0];\n      NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                              file[@\"id\"],\n                              file[@\"name\"],\n                              file[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"file_id\", \"4f05446bc3666eb7ba000001\");\ndata.put(\"name\", \"new_file_name\");\ndata.put(\"file\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSFiles.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFiles\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSFiles\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFiles\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Files/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.filesUpdate({\n    file_id: savedFileId,\n    name: 'Notice'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.files[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "file_id",
              "doc": "<p>ID of the file to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>File name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "file",
              "doc": "<p>The attached binary file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n",
              "optional": true,
              "type": "FileUpload",
              "html_type": "FileUpload"
            },
            {
              "name": "url",
              "doc": "<p>URL of file to upload to ArrowDB. You can specify either <code>file</code> or <code>url</code>, but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this file object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "s3_acl",
              "doc": "<p>Permission level of the file.  Set to either:</p>\n\n<ul>\n<li><code>private</code>: Only a logged-in user can access the file.</li>\n<li><code>public_read</code>: Anyone can access the file (default).</li>\n</ul>\n\n\n<p>This can only be set if you also update the <code>file</code> or <code>url</code>.</p>\n\n<p>For private permission, when you retrieve the URL for the file using either the show or\nquery method, the link is temporary and will expire. The default is five minutes.\nWhen exporting data, the exported URL will be a root URL and not a direct URL to the file.</p>\n\n<p>To restrict file access to specific users, use an ACL.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to update the File object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current user must be an application admin to update a File object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "files",
              "doc": "<p>Single-element array containing the updated file object.</p>\n\n<p>Note that the file URL may not be available if the file hasn't finished\nprocessing.</p>\n",
              "optional": true,
              "type": "Files[]",
              "html_type": "Files[]"
            }
          ],
          "owner": "Files",
          "shortDoc": "Updates an existing file object with a binary attachment, or contents of a URL. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Friends",
    "doc": "<p>The Friends API provides methods for managing friendships between the current user and another user.</p>\n\n<p>By default, friendships are two-way (like Facebook): once a friend request\nis made and approved, both users will show up in each others' friend lists.\nThis default behavior can be changed to one-way following (like\nTwitter) in the Cloud > Settings &amp; Configuration tab in <a href=\"https://dashboard.appcelerator.com\">Appcelerator Dashboard</a>\nor the Settings tab <a href=\"https://my.appcelerator.com/apps\">My Apps</a>.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/Friends.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/Friends.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [
        {
          "tagname": "method",
          "name": "add",
          "deprecated": false,
          "id": "method-add",
          "doc": "<p>Add friends to the current user. By default the friend request is two-way\n(like Facebook), so after a friend request is made and approved both users\nwill show up in each others' friend lists. This default can be changed to one-\nway following (like Twitter) in the App Settings for each of your apps.</p>\n\n<p>Two-way or one-way friend requests must be approved by the recipient unless\n<code>approval_required=false</code> is also sent with the request. This allows the user\nto add any user as a friend without requiring approval.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "friends/add.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example adds a friend and checks the response.</p>\n\n<pre><code>Cloud.Friends.add({\n    user_ids: checked.join(\",\")\n}, function (e) {\n    if (e.success) {\n        alert('Friend(s) added');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"user_ids=4e02e027d0afbe41ef000003\" \"https://api.cloud.appcelerator.com/v1/friends/add.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"addFriends\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"user_ids\" : @\"userid1, userid2\"\n                          };\n    [APSFriends append:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Friend(s) Addeed\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_ids\", \"4d6e77386f70950c89000001,5f6e77386f70950c890efew01\");\n\ntry {\n    APSFriends.add(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Friend(s) added\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/add.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.friendsAdd({\n    user_ids: checked.join(\",\")\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Friend(s) added!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_ids",
              "doc": "<p>Comma-separated list consisting of IDs of one or more users to add as\nfriends to the current user. A user cannot add himself or herself as a friend.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "approval_required",
              "doc": "<p>Indicates whether the friend request requires\napproval by the other users.</p>\n\n<p>Default: <code>true</code></p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Friends",
          "shortDoc": "Add friends to the current user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "approve",
          "deprecated": false,
          "id": "method-approve",
          "doc": "<p>Approve an existing friend request. Each user will be added to the other's\nfriend list.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "friends/approve.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example approves pending friend requests and checks the response.</p>\n\n<pre><code>Cloud.Friends.approve({\n    user_ids: checked.join(\",\")\n}, function (e) {\n    if (e.success) {\n        alert('Friend(s) approved');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"user_ids=4e02e022d0afbe41ef000002\" \"https://api.cloud.appcelerator.com/v1/friends/approve.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"approveFriends\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"user_ids\" : @\"userid1, userid2\"\n                          };\n    [APSFriends append:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Friend(s) Approved\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_ids\", \"4d6e77386f70950c89000001,5f6e77386f70950c890efew01\");\n\ntry {\n\n    APSFriends.approve(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray friendRequests = e.getResponse().getJSONArray(\"friend_requests\");\n                    if (friendRequests.length() &lt;= 0) {\n                        Log.i(\"APSFriends\", \"No Results!\");\n                    } else {\n                        Log.i(\"APSFriends\", \"Approve Friend Request!\");\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSFriends\", \"Exception throwm: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/approve.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.friendsApprove({\n    user_ids: checked.join(\",\")\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Friend(s) approved!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_ids",
              "doc": "<p>Comma-separated list consisting of IDs of one or more users to approve as\nfriends to the current user.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Friends",
          "shortDoc": "Approve an existing friend request. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs custom query of Friends objects with sorting and paginating of the current\nlogged-in user or the specified user.  Only an application admin can perform a query against\na specified user using the <code>su_id</code> field.</p>\n\n<p>If one-way friendship is enabled, the query returns the users being followed.  To return\nthe user's followers, set the <code>followers</code> field to true.</p>\n\n<p>You can query or sort based on the data in any of the standard Friend fields.\nYou can also query and sort data based on the values of any custom fields,\nif the values are simple JSON values.</p>\n\n<p>Currently you <strong>cannot</strong> sort or query based on data stored inside array or hash\nobjects in custom fields.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "friends/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve all of the user's friends.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"friends/query.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        var results = e.users\n        // Process the results\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>The following example queries for the user's followers.  Note that this is only relevant\nfor one-way friendships:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt  -X GET --data-urlencode \"followers=true\" \"https://api.cloud.appcelerator.com/v1/friends/query.json?key=&lt;APP_API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryFriends\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 1\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb04ec3aafa0884000497\",\n        \"first_name\": \"Wally\",\n        \"last_name\": \"West\",\n        \"created_at\": \"2014-08-25T21:53:18+0000\",\n        \"updated_at\": \"2014-08-25T22:08:53+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:18+0000\",\n        \"username\": \"kidflash\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 0,\n          \"following\": 1,\n          \"followers\": 1\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve all of the user's friends.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"friends/query.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSArray *results = e.response[@\"users\"];\n        // Process the results\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request that queries for ACLs with the name <code>photo_acls</code>.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"friends/query.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                JSONArray results = e.getResponse().getJSONArray(\"users\");\n                // Process the results\n            } catch (Exception err) {\n                Log.e(\"APSCloud\", \"Exception thrown: \" + err.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.friendsQuery({\n    followers: true\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.friends.forEach(function(friend) {\n            console.log(friend);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "su_id",
              "doc": "<p>ID of the user to search for friends. If friendship is set to one way, by default it\nsearches against users that the identified user is following. You can pass\n<code>followers=true</code> to search the user's followers.\nYou must be an application admin to use this field.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "followers",
              "doc": "<p>If set to true and one-way friendship is enabled, returns the user's followers instead\nof the users being followed.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>List of users matching the query parameters.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "Friends",
          "shortDoc": "Performs custom query of Friends objects with sorting and paginating of the current\nlogged-in user or the specified u...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "remove",
          "deprecated": false,
          "id": "method-remove",
          "doc": "<p>Removes one or more friends from the user's friends list.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "friends/remove.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example removes friends and checks the response.</p>\n\n<pre><code>Cloud.Friends.remove({\n    user_ids: checked.join(\",\")\n}, function (e) {\n    if (e.success) {\n        alert('Friend(s) removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"user_ids=4e02e027d0afbe41ef000003\" \"https://api.cloud.appcelerator.com/v1/friends/remove.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"removeFriends\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"user_ids\" : @\"userid1, userid2\"\n                          };\n    [APSFriends remove:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Friend(s) Removed\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_ids\", \"4d6e77386f70950c89000001,5f6e77386f70950c890efew01\");\n\ntry {\n\n    APSFriends.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Friend(s) removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/remove.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.friendsRemove({\n    user_ids: checked.join(\",\")\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response\n        console.log('Friend(s) removed!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_ids",
              "doc": "<p>Comma-separated list consisting of IDs of one or more users to remove from the current user.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Friends",
          "shortDoc": "Removes one or more friends from the user's friends list. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "requests",
          "deprecated": false,
          "id": "method-requests",
          "doc": "<p>View pending friend requests.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "friends/requests.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example shows pending friend requests and checks the response.</p>\n\n<pre><code>Cloud.Friends.requests(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.friend_requests.length);\n        for (var i = 0; i &lt; e.friend_requests.length; i++) {\n            var user = e.friend_requests[i].user;\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/friends/requests.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"friendRequests\",\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"friend_requests\": [\n      {\n        \"created_at\": \"2011-06-23T06:41:47+0000\",\n        \"updated_at\": \"2011-06-23T06:41:47+0000\",\n        \"id\": \"4e02e02bd0afbe41ef000005\",\n        \"user\": {\n          \"created_at\": \"2011-06-23T06:41:39+0000\",\n          \"updated_at\": \"2011-06-23T06:41:44+0000\",\n          \"username\": \"bob\",\n          \"id\": \"4e02e022d0afbe41ef000002\",\n          \"last_name\": \"Dude\",\n          \"email\": \"bob@dude.com\",\n          \"first_name\": \"Bob\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    [APSFriends requests:nil withBlock:^(APSResponse <em>e) {\n        if (e.success){\n            NSArray </em>friendRequests = e.response[@\"friend_requests\"];</p>\n\n<pre><code>        for (NSDictionary *friendRequest in friendRequests) {\n          NSString *message = [NSString stringWithFormat:@\"id : %@\\n First Name : %@\\nLast Name : %@\\n\",\n                                  friendRequest[@\"id\"],\n                                  friendRequest[@\"first_name\"],\n                                  friendRequest[@\"last_name\"]];\n\n\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                      message:message\n                                     delegate:nil \n                            cancelButtonTitle:@\"OK\" \n                            otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSFriends.requests(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray friendRequests = e.getResponse().getJSONArray(\"friend_requests\");\n                    if (friendRequests.length() &lt;= 0) {\n                        Log.i(\"APSFriends\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; friendRequests.length(); i++) {\n                            JSONObject users = friendRequests.getJSONObject(i);\n                            JSONObject user = users.getJSONObject(\"user\");\n                            Log.i(\"APSFriends\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSFriends\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e1) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/requests.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.friendsRequests(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.friends.forEach(function(friend){\n            console.log(friend.first_name + \" \" + friend.last_name);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "requests_to",
              "doc": "<p>If set to true, returns the users requesting the current user as a friend\nrather than the pending friend requests that the user needs to approve.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being referred to, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "friend_requests",
              "doc": "<p>A list of friend requests, where each friend request is an object with\nthe following members:</p>\n\n<ul>\n<li><p><code>id: String</code>. User ID for user making the request.</p></li>\n<li><p><code>user: Users</code>. User object for the user making the request.</p></li>\n<li><p><code>created_at: Date</code>. Timestamp when the file was created.</p></li>\n<li><p><code>updated_at: Date</code>. Timestamp when the file was last updated.</p></li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash[]",
              "html_type": "Hash[]"
            }
          ],
          "owner": "Friends",
          "shortDoc": "View pending friend requests. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "search",
          "deprecated": true,
          "id": "method-search",
          "doc": "<p>Performs a search for users who are friends of the currently logged-in user. An application admin\ncan search for friends of an arbitrary user by specifing the the <code>user_id</code> field.</p>\n\n<p>Specifying the optional <code>q</code> parameter allows searching by first name, last name, email address,\nor username. If no <code>q</code> parameter is specified, all friends of the specified user are returned.</p>\n\n<p>If one-way friendship is enabled, the search returns the users being followed. To return\nthe user's followers, set the <code>followers</code> field to true.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "Use the {@link Friends#query} method instead with the `$text` query operator."
            }
          },
          "url": "friends/search.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about particular friends and checks the response.</p>\n\n<pre><code>Cloud.Friends.search({\n    user_id: searchID\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/friends/search.json?user_id=4e02e022d0afbe41ef000002&amp;q=alice%40gal.com&amp;key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"total_pages\": 1,\n    \"code\": 200,\n    \"method_name\": \"searchFriends\",\n    \"page\": 1,\n    \"total_results\": 1,\n    \"per_page\": 10,\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"created_at\": \"2011-06-23T06:41:43+0000\",\n        \"updated_at\": \"2011-06-23T06:41:48+0000\",\n        \"username\": \"alice\",\n        \"id\": \"4e02e027d0afbe41ef000003\",\n        \"last_name\": \"Gal\",\n        \"email\": \"alice@gal.com\",\n        \"first_name\": \"Alice\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>  NSDictionary *data = @{\n                           @\"user_id\" : @\"searchUserid\"\n                        };\n  [APSFriends search:data withBlock:^(APSResponse *e) {\n      if (e.success){\n        NSArray *friendRequests = e.response[@\"friend_requests\"];\n        for (NSDictionary *friendRequest in friendRequests) {\n          NSString *message = [NSString stringWithFormat:@\"id : %@\\n First Name : %@\\nLast Name : %@\\n\",\n                                  friendRequest[@\"id\"],\n                                  friendRequest[@\"first_name\"],\n                                  friendRequest[@\"last_name\"]];\n\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n      }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_id\", \"4d6e77386f70950c89000001\");\n\ntry {\n    APSFriends.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    for (int i = 0; i &lt; users.length(); i++) {\n                        JSONObject user = users.getJSONObject(i);\n                        Log.i(\"APSFriends\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSFriends\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSFriends\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSFriends\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Friends/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.friendsSearch({\n    user_id: searchID\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.friends[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_id",
              "doc": "<p>ID of the user to search for friends. <strong>You must be an application admin to use this field.</strong></p>\n\n<p>If friendship is set to one way,\nby default it searches against users that the identified user is <strong>following</strong>. You can\npass <code>followers=true</code> to search the user's followers.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "followers",
              "doc": "<p>If you have friends set to one way, pass <code>followers=true</code> to query user's\nfollowers.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "q",
              "doc": "<p>Space-separated list of keywords used to perform full text search on first name, last name,\nemail address, username and tags.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>List of users matching the search criteria.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "Friends",
          "shortDoc": "Performs a search for users who are friends of the currently logged-in user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>Use the <a href=\"#!/api/Friends-method-query\" rel=\"Friends-method-query\" class=\"docClass\">query</a> method instead with the <code>$text</code> query operator.</p>\n</p>\n        </div>\n"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "GeoFences",
    "doc": "<p class=\"note\">The current user must be an application administrator to create, update or delete a geo-fence object.</p>\n\n\n<p>The GeoFences API lets you manage spatial objects with data. Use this API to have the device\nquery the ArrowDB server to retrieve data based on a location.</p>\n\n<p>To send a push notification based on the user's location, see the \"Location-Based Push\nNotification\" section in <a href=\"#!/api/PushNotifications\" rel=\"PushNotifications\" class=\"docClass\">PushNotifications</a>.</p>\n\n<h3>Parameters</h3>\n\n<p>Datetime fields use the ISO 8601 format, for example, <code>YYYY-MM-DDTHH:mm:ss+ZZZZ</code>.</p>\n\n<p>Geographic coordinates are specified as arrays with the longitude as the first element and latitude as the\nsecond element, that is, <code>[longitude,latitude]</code>.</p>\n\n<p>Distance is specified in radians. To calculate the distance in radians,\ndivide the distance you want by the approximate radius of the Earth in the same\nunits. For example, 10 miles is 10 / 3959, or 2 kilometers is 2 / 6371.</p>\n\n<h2>Getting Started</h2>\n\n<p>To use the GeoFences API, create geo-fence objects with data to download, then have the device\nperiodically check the ArrowDB server for this data.</p>\n\n<p>To create geo-fence objects, use the <a href=\"#!/api/GeoFences-method-create\" rel=\"GeoFences-method-create\" class=\"docClass\">create</a> method and specify the geographic\narea and data to download.</p>\n\n<p>After creating a geo-fence object, the device can periodically query the ArrowDB server to see if\nthere is any available data to retrieve. Use the <a href=\"#!/api/GeoFences-method-query\" rel=\"GeoFences-method-query\" class=\"docClass\">query</a> method to specify a\ngeospatial query with the <code>where</code> parameter.  If the query returns any results, the application\nneeds to process the <code>payload</code> field of the query response.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Date when the geo-fence was created.</p>\n",
          "type": "Date",
          "owner": "GeoFences",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "end_time",
          "id": "property-end_time",
          "doc": "<p>Datetime when the geo-fence expires.</p>\n",
          "type": "Date",
          "owner": "GeoFences",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated ID for this geo-fence.</p>\n",
          "type": "String",
          "owner": "GeoFences",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "loc",
          "id": "property-loc",
          "doc": "<p>JSON-encoded object describing the geographic perimeter of the geo-fence, specified as a circle with\na center point of either <code>place_id</code> or <code>coordinates</code> property and the <code>radius</code> property:</p>\n\n<ul>\n<li><code>place_id</code> (String): Use an ArrowDB <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object as the center of the circle. Specify the\nID of the Place.</li>\n<li><code>coordinates</code> (Array&lt;Number&gt;): Center coordinate of the circle.  Specify a point as <code>[longitude,latitude]</code>.</li>\n<li><code>radius</code> (Number/String): Radius of the bounding circle in radians. To calculate the distance in radians,\ndivide the distance you want by the approximate radius of the Earth in the same\nunits. For example, 10 miles is 10 / 3959 or 2 kilometers is 2 / 6371.  Specify the\nfraction as a string, for example, <code>\"10/3959\"</code> or <code>\"2/6371\"</code>.</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "GeoFences",
          "shortDoc": "JSON-encoded object describing the geographic perimeter of the geo-fence, specified as a circle with\na center point o...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "payload",
          "id": "property-payload",
          "doc": "<p>JSON-encoded data to retrieve if the geo-fence area intersects the device's location.</p>\n",
          "type": "Hash",
          "owner": "GeoFences",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "start_time",
          "id": "property-start_time",
          "doc": "<p>Datetime when to start the geo-fence.</p>\n",
          "type": "Date",
          "owner": "GeoFences",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/GeoFences.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Date when the geo-fence was updated.</p>\n",
          "type": "Date",
          "owner": "GeoFences",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of GeoFence objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "geo_fences/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of GeoFence objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"geofences/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/geo_fences/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"geofencesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of GeoFence objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"geofences/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of GeoFence objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"geofences/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.geoFencesCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of GeoFence objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "GeoFences",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a geo-fence object with an optional start and end time.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "geo_fences/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Titanium SDK 3.2.1 or later.</p>\n\n<p>The following example creates a geo-fence covering a ten-mile area with San\nFrancisco, CA, USA as the center point:</p>\n\n<pre><code>Cloud.GeoFences.create({\n    geo_fence: {\n        \"loc\":{\"coordinates\":[-122.4167,37.7833], \"radius\":\"10/3959\"},\n        \"payload\":{\"alert\":\"24-hour sale at our SF flagship store on 12/26!\"},\n        \"start_time\": \"2014-03-08T00:00\",\n        \"end_time\":\"2014-12-26T19:00\"\n    }\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e.geo_fences));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>The following example creates a geo-fence covering a ten-mile area with San\nFrancisco, CA, USA as the center point:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST -F 'geo_fence={\"loc\":{\"coordinates\":[-122.4167,37.7833], \"radius\":\"10/3959\"}, \"payload\":{\"alert\":\"24-hour sale at our SF flagship store on 12/26!\"}, \"start_time\":\"2013-12-25T00:00\",\"end_time\":\"2013-12-26T19:00\"}' \"http://api.cloud.appcelerator.com/v1/geo_fences/create.json?key=&lt;API_KEY&gt;\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createGeoFence\"\n  },\n  \"response\": {\n    \"geo_fences\": [\n      {\n        \"id\": \"52aa2da0d7de142e0e000040\",\n        \"start_time\": \"2013-12-25T00:00:00+0000\",\n        \"end_time\": \"2013-12-26T19:00:00+0000\",\n        \"loc\": {\n          \"coordinates\": [\n            -122.4167,\n            37.7833\n          ],\n          \"radius\": \"10/3959\"\n        },\n        \"payload\": {\n          \"alert\": \"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        \"created_at\": \"2013-12-12T21:41:52+0000\",\n        \"updated_at\": \"2013-12-12T21:41:52+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"geo_fence\": @{\n        @\"loc\": @{\n            @\"coordinates\": @[@-122.4167,@37.7833],\n            @\"radius\": @\"10/3959\"\n        },\n        @\"payload\": @{\n            @\"alert\":@\"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        @\"start_time\": @\"2014-03-08T00:00\",\n        @\"end_time\": @\"2014-12-26T19:00\"\n    }\n};\n\n[APSGeoFences create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONObject loc = new JSONObject(\"{'coordinates':[-122.4167,37.7833], 'radius':'10/3959'}\");\nJSONObject payload = new JSONObject(\"{'alert':'24-hour sale at our SF flagship store on 12/26!'}\");\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"loc\", loc);\ndata.put(\"payload\", payload);\ndata.put(\"start_time\", \"2014-03-08T00:00\");\ndata.put(\"end_time\", \"2014-12-26T19:00\");\n\ntry {\n    APSGeofences.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.geoFencesCount({\n    geo_fence: {\n        \"loc\":{\"coordinates\":[-122.4167,37.7833], \"radius\":\"10/3959\"},\n        \"payload\":{\"alert\":\"24-hour sale at our SF flagship store on 12/26!\"},\n        \"start_time\": \"2015-12-19T00:00\",\n        \"end_time\":\"2015-12-26T19:00\"\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.geo_fences[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "geo_fence",
              "doc": "<p>JSON object describing the geographic perimeter, data payload, and start and end time\nfor the geo-fence object.  Specify the following propertes:</p>\n\n<ul>\n<li><code>loc</code> (Hash): <strong>Required.</strong> Geographic perimeter.  See <a href=\"#!/api/GeoFences-property-loc\" rel=\"GeoFences-property-loc\" class=\"docClass\">loc</a>.</li>\n<li><code>payload</code> (Hash): <strong>Required.</strong> JSON-encoded data to retrieve if a device intersects\nthe geographic perimeter.</li>\n<li><code>start_time</code> (Date): Datetime to start the geo-fence.</li>\n<li><code>end_time</code> (Date): Datetime to end the geo-fence.</li>\n</ul>\n\n",
              "optional": false,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "geo_fences",
              "doc": "<p>Single-element array containing the newly-created geo-fence object.</p>\n",
              "optional": true,
              "type": "GeoFences[]",
              "html_type": "GeoFences[]"
            }
          ],
          "owner": "GeoFences",
          "shortDoc": "Creates a geo-fence object with an optional start and end time. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes an existing geo-fence object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "geo_fences/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Titanium SDK 3.2.1 or later.</p>\n\n<pre><code>Cloud.GeoFences.remove({\n    id: geoFenceId\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl  -b cookies.txt -c cookies.txt -X DELETE -F 'id=52aa2da0d7de142e0e000040' \"http://api.cloud.appcelerator.com/v1/geo_fences/delete.json?key=&lt;API_KEY&gt;\"\n</code></pre>\n\n<p>Example cURL response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"destroyGeoFence\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"id\": geoFenceId\n};\n\n[APSGeoFences remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"52aa2da0d7de142e0e000040\");\n\ntry {\n    APSGeofences.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.geoFencesDelete({\n    id: geoFenceId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>ID of the geo-fence object to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "GeoFences",
          "shortDoc": "Deletes an existing geo-fence object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Perform custom query of geofences with sorting and paginating.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "geo_fences/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Titanum SDK 3.2.1 or later.</p>\n\n<p>This example searches for geo-fences within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>Cloud.GeoFences.query({\n    where:{\n        \"loc\": {\n            \"$nearSphere\" : {\n                \"$geometry\" : { \"type\" : \"Point\", \"coordinates\" : [-122.2708,37.8044] },\n                    \"$maxDistance\" : 2000\n                }\n            }\n    }\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e.geo_fences));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>This example searches for geo-fences within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X GET -F 'where={\"loc\": { \"$nearSphere\" : { \"$geometry\" : { \"type\" : \"Point\" , \"coordinates\" : [-122.2708,37.8044] } , \"$maxDistance\" : 2000 }}}' \"http://api.cloud.appcelerator.com/v1/geo_fences/query.json?key=&lt;API_KEY&gt;&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryGeoFence\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"geo_fences\": [\n      {\n        \"id\": \"52aa2ebbd7de142e0e000041\",\n        \"start_time\": \"2013-12-25T00:00:00+0000\",\n        \"end_time\": \"2013-12-26T19:00:00+0000\",\n        \"loc\": {\n          \"radius\": \"10/3959\",\n          \"coordinates\": [\n            -122.4167,\n            37.7833\n          ]\n        },\n        \"payload\": {\n          \"alert\": \"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        \"created_at\": \"2013-12-12T21:46:35+0000\",\n        \"updated_at\": \"2013-12-12T22:41:38+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"where\": @{\n        @\"loc\": @{\n            @\"$nearSphere\": @{\n                @\"$geometry\": @{\n                    @\"type\": @\"Point\",\n                    @\"coordinates\": @[@-122.2708, @37.8044]\n                },\n                @\"$maxDistance\" : @2000\n            }\n        }\n    }\n};\n\n[APSGeoFences query:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu geo_fences\", (unsigned long)((NSArray *) e.response[@\"geo_fences\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"'loc': { '$nearSphere' : { '$geometry' : { 'type' : 'Point' , 'coordinates' : [-122.2708,37.8044] } , '$maxDistance' : 2000 }}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSGeofences.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray geo_fences = e.getResponse().getJSONArray(\"geo_fences\");\n                    if (geo_fences.length() &lt;= 0) {\n                        Log.i(\"APSGeofences\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject geo_fence = geo_fences.getJSONObject(i);\n                            Log.i(\"APSGeofences\", geofence.getJSONObject(\"payload\").toString());\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSGeofences\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.geoFencesQuery({\n    where:{\n        \"loc\": {\n            \"$nearSphere\" : {\n                \"$geometry\" : { \"type\" : \"Point\", \"coordinates\" : [-122.2708,37.8044] },\n                    \"$maxDistance\" : 2000\n                }\n            }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.geo_fences[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level for response data.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n\n<p>Response data may include references to other objects, which the server performs\nadditional queries on to include in the response. To reduce server response time,\nset this parameter to a lower value to reduce server API calls.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>A JSON-encoded object that defines the query used.</p>\n\n<p>The following fields can be used for the query:</p>\n\n<ul>\n<li><a href=\"#!/api/GeoFences-property-start_time\" rel=\"GeoFences-property-start_time\" class=\"docClass\">start_time</a></li>\n<li><a href=\"#!/api/GeoFences-property-end_time\" rel=\"GeoFences-property-end_time\" class=\"docClass\">end_time</a></li>\n<li><code>loc</code> : For this property, specify a\n<a href=\"http://docs.mongodb.org/manual/reference/operator/query-geospatial/\">MongoDB Geospatial Query</a>.</li>\n</ul>\n\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "geo_fences",
              "doc": "<p>List of geo-fence objects matching the query parameters.</p>\n",
              "optional": true,
              "type": "GeoFences[]",
              "html_type": "GeoFences[]"
            }
          ],
          "owner": "GeoFences",
          "shortDoc": "Perform custom query of geofences with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates an existing geo-fence object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "geo_fences/update.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Titanium SDK 3.2.1 or later.</p>\n\n<pre><code>Cloud.GeoFences.update({\n    id: geoFenceId\n    geo_fence:{\"loc\":{\"place_id\":\"531a1217447d300f05003b69\",\"radius\":\"2/6371\"}}\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(JSON.stringify(e.geo_fences));\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl  -b cookies.txt -c cookies.txt -X PUT -F 'id=52aa2da0d7de142e0e000040' -F 'geo_fence={\"loc\":{\"place_id\":\"52aa310765fe160b3f000042\",\"radius\":\"2/6371\"}}' \"http://api.cloud.appcelerator.com/v1/geo_fences/update.json?key=&lt;API_KEY&gt;\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateGeoFence\"\n  },\n  \"response\": {\n    \"geo_fences\": [\n      {\n        \"id\": \"52aa2da0d7de142e0e000040\",\n        \"start_time\": \"2013-12-25T00:00:00.000Z\",\n        \"end_time\": \"2013-12-26T19:00:00.000Z\",\n        \"loc\": {\n          \"radius\": \"2/6378\",\n          \"coordinates\": [\n            0,\n            0\n          ],\n          \"place\": {\n            \"id\":  \"52aa310765fe160b3f000042\",\n            \"name\": \"pointOne\",\n            \"created_at\": \"2013-12-12T18:41:52.000Z\",\n            \"updated_at\": \"2013-12-12T18:01:18.000Z\",\n            \"latitude\": 0,\n            \"longitude\": 0,\n            \"custom_fields\": {\n              \"coordinates\": []\n            }\n        },\n        \"payload\": {\n          \"alert\": \"24-hour sale at our SF flagship store on 12/26!\"\n        },\n        \"created_at\": \"2013-12-12T21:41:52.000Z\",\n        \"updated_at\": \"2013-12-12T22:01:18.000Z\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"id\": geoFenceId,\n    @\"geo_fence\": @{\n        @\"loc\": @{\n            @\"place_id\": @\"531a1217447d300f05003b69\",\n            @\"radius\": @\"2/6371\"\n        }\n    }\n};\n\n[APSGeoFences update:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nJSONObject geo_fence = new JSONObject(\"{'loc':{'place_id':'52aa310765fe160b3f000042','radius':'2/6371'}}\");\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"52aa2da0d7de142e0e000040\");\ndata.put(\"geo_fence\", geo_fence);\n\ntry {\n    APSGeofencess.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSGeofences\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSGeofences\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSGeofences\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/GeoFences/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.geoFencesUpdate({\n    id: geoFenceId\n    geo_fence:{\"loc\":{\"place_id\":\"531a1217447d300f05003b69\",\"radius\":\"2/6371\"}}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.geo_fences[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>ID of the geo-fence object to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "geo_fence",
              "doc": "<p>JSON object describing the geographic perimeter, data payload, and start and end time\nfor the geo-fence object.  Specify the following propertes:</p>\n\n<ul>\n<li><code>loc</code> (Hash): <strong>Required.</strong> Geographic perimeter.  See <a href=\"#!/api/GeoFences-property-loc\" rel=\"GeoFences-property-loc\" class=\"docClass\">loc</a>.</li>\n<li><code>payload</code> (Hash): JSON-encoded data to retrieve if a device intersects the geographic\nperimeter.</li>\n<li><code>start_time</code> (Date): Datetime to start the geo-fence.</li>\n<li><code>end_time</code> (Date): Datetime to end the geo-fence.</li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "geo_fences",
              "doc": "<p>Single-element array containing the updated geo-fence object.</p>\n",
              "optional": true,
              "type": "GeoFences[]",
              "html_type": "GeoFences[]"
            }
          ],
          "owner": "GeoFences",
          "shortDoc": "Updates an existing geo-fence object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "KeyValues",
    "doc": "<p>The KeyValues API provides methods to store and retrieve string or binary data up to 2MB.</p>\n\n<p>By default, a key-value pair is publicly readable, but can only be updated or\ndeleted by the object's owner, or an application admin.</p>\n\n<p>Each registered user also has a private key-value store. Objects in the private store\ncan only be accessed by the owner or an application admin.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated ID for this key-value pair.</p>\n",
          "type": "String",
          "owner": "KeyValues",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Name (or key) for this key-value pair.</p>\n",
          "type": "String",
          "owner": "KeyValues",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "type",
          "id": "property-type",
          "doc": "<p>Value type: \"string\" or \"binary\".</p>\n\n<p>If type is omitted, defaults to \"string\".</p>\n",
          "type": "String",
          "owner": "KeyValues",
          "shortDoc": "Value type: \"string\" or \"binary\". ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/KeyValues.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "value",
          "id": "property-value",
          "doc": "<p>String or binary data.</p>\n",
          "type": "String/BinaryData",
          "owner": "KeyValues",
          "html_type": "String/BinaryData",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "append",
          "deprecated": false,
          "id": "method-append",
          "doc": "<p>Add the given <code>value</code> to end of the existing one. Not allowed on key-values\nwith binary data.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "keyvalues/append.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example appends a value to a key-value and checks the response.</p>\n\n<pre><code>Cloud.KeyValues.append({\n    name: 'welcome_message',\n    value: ', take a look around'\n}, function (e) {\n     if (e.success) {\n         var keyvalue = e.keyvalues[0];\n         alert('Success:\\n' +\n             'name: ' + keyvalue.name + '\\n' +\n             'value: ' + keyvalue.value);\n     } else {\n         alert('Error:\\n' +\n             ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n     }\n\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"name=welcome_message\" -F \"value=, take a look around\" https://api.cloud.appcelerator.com/v1/keyvalues/append.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"appendKeyvalue\"\n  },\n  \"response\": {\n    \"keyvalues\": [\n      {\n        \"id\":\"4d897a505c032bae9c434696\",\n        \"name\":\"welcome_message\",\n        \"value\":\"Welcome to the Appcelerator Cloud Services Platform, take a look around\",\n        \"created_at\":\"2011-03-23T08:19:50+0000\",\n        \"updated_at\":\"2011-03-23T08:19:50+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"name\" : @\"welcome_message\",\n                             @\"value\": @\"take a look around\"\n                          };\n    [APSKeyValues append:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            NSArray <em>keyvalues = e.response[@\"keyvalues\"];\n            NSDictionary </em>keyValue = keyvalues[0];\n            NSString *message = [NSString stringWithFormat:@\"Name : %@\\nValue: %@\\n\",\n                                              keyValue[@\"name\"],\n                                              keyValue[@\"value\"]];</p>\n\n<pre><code>        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"welcome_message\");\ndata.put(\"value\", \"take a look around\");\n\ntry {\n    APSKeyValues.append(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                JSONArray keyvalues = responseJSON.getJSONArray(\"keyvalues\");\n            } else {\n                Log.e(\"APSKeyValues\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/append.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesAppend({\n    name: 'welcome_message',\n    value: ', take a look around'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.keyvalues[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name (or key) for the key-value pair.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "value",
              "doc": "<p>Value to append to the current value.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "access_private",
              "doc": "<p>Determines whether to update this key-value in the publically readable store\nor in the user's private store.</p>\n\n<p>Default is false (publically readable).</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>Update the key-value pair on behalf of the identified user.</p>\n\n<p>Login user must be an admin to update a key-value on behalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "keyvalues",
              "doc": "<p>A single-element array containing the updated KeyValue object.</p>\n",
              "optional": true,
              "type": "KeyValues[]",
              "html_type": "KeyValues[]"
            }
          ],
          "owner": "KeyValues",
          "shortDoc": "Add the given value to end of the existing one. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of KeyValue objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "keyvalues/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of KeyValue objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"keyvalues/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/keyvalues/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"keyvaluesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of KeyValue objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"keyvalues/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of KeyValue objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"keyvalues/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of KeyValue objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "KeyValues",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a key-value pair</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "keyvalues/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a key-value and checks the response.</p>\n\n<pre><code>Cloud.KeyValues.remove({\n    name: 'welcome_message'\n}, function (e) {\n     if (e.success) {\n         alert('Success');\n     } else {\n         alert('Error:\\n' +\n             ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n     }\n\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt --request DELETE \"http://api.cloud.appcelerator.com/v1/keyvalues/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;name=welcome_message\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteKeyvalue\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"name\" : @\"welcome_message\"\n                          };\n    [APSKeyValues delete:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:nil\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"welcome_message\");\n\ntry {\n    APSKeyValues.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSKeyValues\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesDelete({\n    name: 'welcome_message'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name (or key) of the key-value pair to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "access_private",
              "doc": "<p>Determines whether to delete this key-value in the publically readable store\nor in the user's private store.</p>\n\n<p>Default is false (publically readable store).</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>Delete the key-value pair on behalf of the identified user.</p>\n\n<p>Login user must be an admin to delete a key-value on behalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "KeyValues",
          "shortDoc": "Deletes a key-value pair ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "get",
          "deprecated": false,
          "id": "method-get",
          "doc": "<p>Gets the value of a key-value pair.</p>\n\n<p>If the value is string, the KeyValue object is returned in JSON format. If the value is\nbinary, the value is returned directly <strong>without</strong> a JSON wrapper and the content type\nis set to \"application/octct-stream\".</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "keyvalues/get.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example gets a key-value and checks the response.</p>\n\n<pre><code>Cloud.KeyValues.get({\n    name: 'welcome_message'\n}, function (e) {\n    if (e.success) {\n        var keyvalue = e.keyvalues[0];\n        alert('Success:\\n' +\n            'name: ' + keyvalue.name + '\\n' +\n            'value: ' + keyvalue.value);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request (String data)</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/keyvalues/get.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;name=welcome_message\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"getKeyvalue\"\n  },\n  \"response\": {\n    \"keyvalues\": [\n      {\n        \"id\":\"4d897a505c032bae9c434696\",\n        \"name\":\"welcome_message\",\n        \"value\":\"Welcome to Appcelerator Cloud Services\",\n        \"created_at\":\"2011-02-08T23:46:01+0000\",\n        \"updated_at\":\"2011-02-08T23:46:01+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Example cURL request (binary data)</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/keyvalues/get.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;name=myimage\" &gt; image.jpg\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{\n                             @\"name\" : @\"welcome_message\"\n                          };\n    [APSKeyValues get:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            NSArray <em>keyvalues = e.response[@\"keyvalues\"];\n            NSDictionary </em>keyValue = keyvalues[0];\n            NSString *message = [NSString stringWithFormat:@\"Name : %@\\nValue: %@\\n\",\n                                              keyValue[@\"name\"],\n                                              keyValue[@\"value\"]];</p>\n\n<pre><code>        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:\n    APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"welcome_message\");\n\ntry {\n    APSKeyValues.get(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject keyvalues = e.getResponse().getJSONArray(\"keyvalues\").getJSONObject(0);\n                } catch (JSONException err) {\n                    Log.e(\"APSKeyValues\", \"Exception thrown: \" + err.toString())\n                }\n            } else {\n                Log.e(\"APSKeyValues\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/get.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesGet({\n    name: 'welcome_message'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.keyvalues[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name (or key) for the key-value pair to retrieve.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "access_private",
              "doc": "<p>Determines whether to retrieve this key-value from the publically readable store\nor from the user's private store.</p>\n\n<p>Default is false (publically readable).</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "user_id",
              "doc": "<p>Retrieve a private key-value pair from the identified user's store.</p>\n\n<p>Login user must be an application admin to retrieve a key-value from another\nuser's store.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "keyvalues",
              "doc": "<p>A single-element array containing the KeyValue object.</p>\n\n<p>Supplied for string values only. For binary objects, the response body is a\nbinary object with a content-type of \"application/octet-stream\".</p>\n",
              "optional": true,
              "type": "KeyValues[]",
              "html_type": "KeyValues[]"
            }
          ],
          "owner": "KeyValues",
          "shortDoc": "Gets the value of a key-value pair. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "incrby",
          "deprecated": false,
          "id": "method-incrby",
          "doc": "<p>Increment the <code>value</code> by the given integer value. Not allowed on key-value pairs with binary\ndata.</p>\n\n<p>If the current value in the key-value is not convertable to an integer, the new\nvalue replaces the existing value.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "keyvalues/incrby.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example increments a key-value and checks the response.</p>\n\n<pre><code>Cloud.KeyValues.increment({\n    name: 'score',\n    value: 1\n}, function (e) {\n     if (e.success) {\n         var keyvalue = e.keyvalues[0];\n         alert('Success:\\n' +\n             'name: ' + keyvalue.name + '\\n' +\n             'value: ' + keyvalue.value);\n     } else {\n         alert('Error:\\n' +\n             ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n     }\n\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"name=score\" -F \"value=1\" https://api.cloud.appcelerator.com/v1/keyvalues/incrby.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"incrKeyValue\"\n  },\n  \"response\": {\n    \"keyvalues\": [\n      {\n        \"id\":\"4d897a505c032bae9c434696\",\n        \"name\":\"score\",\n        \"value\":\"2\",\n        \"created_at\":\"2011-03-23T08:19:50+0000\",\n        \"updated_at\":\"2011-03-23T08:19:50+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary *data = @{\n                             @\"name\" : @\"score\",\n                             @\"value\": @1\n                          };</p>\n\n<pre><code>[APSKeyValues increment:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *keyvalues = e.response[@\"keyvalues\"];\n        NSDictionary *keyValue = keyvalues[0];                        \n        NSString *message = [NSString stringWithFormat:@\"Name : %@\\nValue: %@\\n\", \n                                          keyValue[@\"name\"], \n                                          keyValue[@\"value\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"score\");\ndata.put(\"value\", \"1\");\n\ntry {\n    APSKeyValues.increment(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject keyvalues = e.getResponse().getJSONArray(\"keyvalues\").getJSONObject(0);\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Incremented!\")\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSKeyValues\", \"Exception throw: \" + err.toString())\n                }\n            } else {\n                Log.e(\"APSKeyValues\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/incrby.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesIncrby({\n    name: 'score',\n    value: 1\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.keyvalues[0].value);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name (or key) for the key-value pair.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "value",
              "doc": "<p>Integer value to add to the current value. If a floating point number is\nspecified, any fractional portion is dropped.</p>\n\n<p>If this value cannot be converted to an integer, the existing value is not\nchanged.</p>\n",
              "optional": false,
              "type": "String/Number",
              "html_type": "String/Number"
            },
            {
              "name": "access_private",
              "doc": "<p>Determines whether to update this key-value in the publically readable store\nor in the user's private store.</p>\n\n<p>Default is false (publically readable).</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>Update the key-value pair on behalf of the identified user.</p>\n\n<p>Login user must be an admin to update a key-value on behalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "keyvalues",
              "doc": "<p>A single-element array containing the updated KeyValue object.</p>\n",
              "optional": true,
              "type": "KeyValues[]",
              "html_type": "KeyValues[]"
            }
          ],
          "owner": "KeyValues",
          "shortDoc": "Increment the value by the given integer value. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs a custom query of KeyValues. Currently you can not query or sort data stored inside\nan array or hash in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "keyvalues/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve all KeyValue objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"keyvalues/query.json\",\n    method : \"GET\",\n    data: {\n        //query params go here\n    }\n</code></pre>\n\n<p> }, function(e) {\n        if (e.success) {\n            var results = e.keyvalues\n            // Process the results\n        } else {\n            alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n        }\n    });</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/keyvalues/query.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryKeyValues\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"keyvalues\": [\n      {\n        \"id\": \"53d80c1988971f081c001238\",\n        \"name\": \"goodbye_message\",\n        \"value\": \"Au revoir from Appcelerator Cloud Services\",\n        \"type\": \"string\",\n        \"private\": false,\n        \"created_at\": \"2014-07-29T21:03:21+0000\",\n        \"updated_at\": \"2014-07-29T21:03:21+0000\",\n        \"user\": {\n          \"id\": \"53d7c9d188971f0824001269\",\n          \"created_at\": \"2014-07-29T16:20:33+0000\",\n          \"updated_at\": \"2014-07-29T20:58:11+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2014-07-29T16:20:33+0000\",\n          \"username\": \"jon\",\n          \"admin\": \"true\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          }\n        }\n      },\n      {\n        \"id\": \"53d80b1c485fc30823001231\",\n        \"name\": \"welcome_message\",\n        \"value\": \"Welcome to Appcelerator Cloud Services\",\n        \"type\": \"string\",\n        \"private\": false,\n        \"created_at\": \"2014-07-29T20:59:08+0000\",\n        \"updated_at\": \"2014-07-29T20:59:08+0000\",\n        \"user\": {\n          \"id\": \"53d7c9d188971f0824001269\",\n          \"created_at\": \"2014-07-29T16:20:33+0000\",\n          \"updated_at\": \"2014-07-29T20:58:11+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2014-07-29T16:20:33+0000\",\n          \"username\": \"jon\",\n          \"admin\": \"true\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve all KeyValue objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"keyvalues/query.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSArray *results = e.response[@\"keyvalues\"];\n        // Process the results\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve all KeyValue objects.\n    APSCloud.getInstance().sendRequest(\"keyvalues/query.json\", \"GET\", null, new APSResponseHandler() {\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray results = e.getResponse().getJSONArray(\"keyvalues\");\n                    // Process the results\n                } catch (Exception err) {\n                    Log.e(\"APSCloud\", \"Exception thrown: \" + err.toString());\n                }\n            }\n            else {\n                Log.e(\"APSCloud\", e.getErrorMessage());\n            }\n        }</p>\n\n<pre><code>    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesQuery(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.keyvalues.forEach(function (key) {\n            console.log(key.name + \": \" + key.value);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>You can query any of the standard values for an ACL object, as well as any\ncustom fields that contain simple values, such as String, Number or Boolean\nvalues.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "keyvalues",
              "doc": "<p>List of KeyValues objects matching the query.</p>\n",
              "optional": true,
              "type": "KeyValues[]",
              "html_type": "KeyValues[]"
            }
          ],
          "owner": "KeyValues",
          "shortDoc": "Performs a custom query of KeyValues. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "set",
          "deprecated": false,
          "id": "method-set",
          "doc": "<p>Sets a string or binary value referenced by the key name. The size of the\nvalue can be up to 2M, and the key name length can be up to 256 characters.\nThe default value type is String.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "keyvalues/set.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example sets a key-value and checks the response.</p>\n\n<pre><code>Cloud.KeyValues.set({\n    name: 'welcome_message',\n    value: 'Welcome to Appcelerator Arrow'\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>If type is string\n$ curl -b cookies.txt -c cookies.txt -X PUT -F \"name=welcome_message\" -F \"value=Welcome to Appcelerator Arrow\" https://api.cloud.appcelerator.com/v1/keyvalues/set.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n\nIf type is binary (loading data from a file)\n$ curl -b cookies.txt -c cookies.txt -X PUT -F \"name=binary\" -F \"type=binary\" -F \"value=&lt;photo.jpg\" https://api.cloud.appcelerator.com/v1/keyvalues/set.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"setKeyvalue\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary *data = @{\n                             @\"name\" : @\"welcome_message\",\n                             @\"value\": @\"Welcome to Appcelerator Arrow\"\n                          };</p>\n\n<pre><code>[APSKeyValues set:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *keyvalues = e.response[@\"keyvalues\"];\n        NSDictionary *keyValue = keyvalues[0];                        \n        NSString *message = [NSString stringWithFormat:@\"Name : %@\\nValue: %@\\n\", \n                                          keyValue[@\"name\"], \n                                          keyValue[@\"value\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APSI SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\n// Create dictionary of parameters to be passed with the reques\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"welcome_message\");\ndata.put(\"value\", \"Welcome to Appcelerator Arrow\");\n\ntry {\n    APSKeyValues.set(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Set!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSKeyValues\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSKeyValues\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/KeyValues/set.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.keyValuesSet({\n    name: 'welcome_message',\n    value: 'Welcome to Appcelerator Arrow'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Value set!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>The name, or key, for this key-value pair.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Value type: \"string\" or \"binary\".</p>\n\n<p>Defaults to \"string\".</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "value",
              "doc": "<p>Value to assoicate with the key.</p>\n\n<p>Binary data can be passed as a binary form part. The REST example shows how to\nsend binary data using curl.</p>\n",
              "optional": false,
              "type": "String/BinaryData",
              "html_type": "String/BinaryData"
            },
            {
              "name": "access_private",
              "doc": "<p>Determines whether this key-value is publically readable, or stored in a\nprivate store.</p>\n\n<p>Default is false (publically readable). If set to true, it sets the key/value stored\nin the current user's private key-value store. Otherwise, it sets the public\nkey-value pair which is readable to everyone.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "su_id",
              "doc": "<p>User to create the key-value pair on behalf of.</p>\n\n<p>The current user must be an application admin to set a key-value pair on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "KeyValues",
          "shortDoc": "Sets a string or binary value referenced by the key name. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Likes",
    "doc": "<p>The Likes API lets you add a \"like\" to an existing object. Currently, likes can only be added to\nthe following object types:</p>\n\n<ul>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n</ul>\n\n\n<p>If an object has one or more likes associated to it, it will return a total\nlike count with the object:</p>\n\n<pre><code>\"likes_count\": 2\n</code></pre>\n\n<h2>Determining if the Current User Likes an Object</h2>\n\n<p>To determine if the current user has liked an ArrowDB object, use the <a href=\"#!/api/Likes-method-query\" rel=\"Likes-method-query\" class=\"docClass\">Likes.query</a>\nmethod to retrieve a list of objects the user liked.</p>\n\n<p>If you are executing a <code>query</code> or <code>show</code> method on the ArrowDB object, pass <code>show_user_like=true</code>\nas a parameter to the method. If the current user liked an object returned by\neither of those methods, the response object contains the field <code>\"current_user_liked: true\"</code>.</p>\n\n<p>See the REST API examples for the <a href=\"#!/api/Checkins-method-query\" rel=\"Checkins-method-query\" class=\"docClass\">Checkins.query</a>\nand <a href=\"#!/api/Checkins-method-show\" rel=\"Checkins-method-show\" class=\"docClass\">Checkins.show</a> methods for details.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this liked object.</p>\n",
          "type": "Date",
          "owner": "Likes",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Like Object ID.</p>\n",
          "type": "String",
          "owner": "Likes",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "likeable_id",
          "id": "property-likeable_id",
          "doc": "<p>Object ID of the liked object.</p>\n",
          "type": "String",
          "owner": "Likes",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "likeable_type",
          "id": "property-likeable_type",
          "doc": "<p>Object type of the liked object, which is the name of the object, such as <code>Post</code>, <code>Photo</code>, etc.</p>\n",
          "type": "String",
          "owner": "Likes",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this liked object.</p>\n",
          "type": "Date",
          "owner": "Likes",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/Likes.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>User who generated the like.</p>\n",
          "type": "Users",
          "owner": "Likes",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Adds a \"like\" to an object. Currently, likes can only be associated with one of\nthe following object types, and a user can only like an object once:</p>\n\n<ul>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n</ul>\n\n\n<p>Once an object has one or more likes attached to it, it will return a\ntotal like count with the object:</p>\n\n<pre><code>\"likes_count\": 2\n</code></pre>\n\n<p>You should specify one, and only one, ArrowDB object ID parameter to identify the target object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "likes/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0. The following example increments the like count for the\nspecified Post object.</p>\n\n<pre><code>Cloud.Likes.create({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        var like = e.likes[0];\n        alert('Success:\\n' +\n            'id: ' + like.id + '\\n');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"post_id=4e33a817d9ca724745000003\" https://api.cloud.appcelerator.com/v1/likes/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"createLike\"\n  },\n  \"response\": {\n    \"likes\": [\n      {\n        \"id\": \"4e33a817d9ca724745000006\",\n        \"created_at\": \"2011-07-30T06:43:35+0000\",\n        \"updated_at\": \"2011-07-30T06:43:35+0000\",\n        \"user\": {\n          \"id\": \"4e33a817d9ca724745000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:43:35+0000\",\n          \"updated_at\": \"2011-07-30T06:43:35+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{@\"post_id\":@\"savedPostId\"};\n    [APSLikes create:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            NSArray <em>likes = e.response[@\"likes\"];\n            NSDictionary </em>like = likes[0];\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n\", like[@\"id\"]];</p>\n\n<pre><code>        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\n\ntry {\n    APSLikes.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSLikes\", \"ERROR: \" + e.message());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.likesCreate({\n    post_id: savedPostId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.likes[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>Post object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_id",
              "doc": "<p>Photo object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_id",
              "doc": "<p>User object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>Event object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>Place object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "checkin_id",
              "doc": "<p>Checkin object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "status_id",
              "doc": "<p>Status object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_id",
              "doc": "<p>Review object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_object_id",
              "doc": "<p>Custom object to like.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "likes",
              "doc": "<p>A single-element array, containing the \"like\" object.</p>\n",
              "optional": true,
              "type": "Likes[]",
              "html_type": "Likes[]"
            }
          ],
          "owner": "Likes",
          "shortDoc": "Adds a \"like\" to an object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Delete the like from the target object. Only the original submitter can delete\nthe like.</p>\n\n<p>Specify one and only one of the ID parameters to identify  the target object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "likes/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0. The following example decrements the like count for the\nspecified post.</p>\n\n<pre><code>Cloud.Likes.remove({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/likes/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4e33a817d9ca724745000003\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteLike\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{@\"post_id\":@\"savedPostId\"};\n    [APSLikes remove:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:nil\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }\n    }];</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\n\ntry {\n    APSLikes.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSLikes\", \"\" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSLikes\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.likesDelete({\n    post_id: savedPostId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>Post object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_id",
              "doc": "<p>Photo object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_id",
              "doc": "<p>User object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>Event object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>Place object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "checkin_id",
              "doc": "<p>Checkin object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "status_id",
              "doc": "<p>Status object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_id",
              "doc": "<p>Review object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_object_id",
              "doc": "<p>Custom object to delete \"like\" from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Likes",
          "shortDoc": "Delete the like from the target object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs custom query of likes with sorting and paginating.</p>\n\n<p>You can either query the likes of an object using the object's ID,\nsuch as the <code>post_id</code>, <code>photo_id</code>, etc. parameter, or the likes generated by a user,\nby specifying the <code>user_id</code> parameter.</p>\n\n<p>A non-administrator user can only retrieve results on the likes they generated.</p>\n\n<p>Application administrators can retrieve results on the likes of all users and\nquery likes generated by other users by specifying the <code>user_id</code> parameter.</p>\n\n<p>In addition to custom fields, the following pre-defined fields can be used to\nquery and sort likes:</p>\n\n<ul>\n<li><code>su_id</code> : <code>String</code>. User ID of the User that generated the likes.\nOnly an application admininstrator can query likes of other users.</li>\n<li><code>likeable_type</code> : <code>String</code>. Object type of the like object, which is the name of the object,\nsuch as <code>Post</code>, <code>Photo</code>, etc.</li>\n<li><code>likeable_id</code> : <code>String</code>. Object ID of the like object.</li>\n<li><code>created_at</code> : <code>Date</code>. Timestamp when the like was created.</li>\n<li><code>updated_at</code> : <code>Date</code>. Timestamp when the like was last updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "likes/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This API is currently not supported by the ti.cloud module.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Queries for status likes from the currently logged in user. If you are an administrator,\nyou will retrieve status likes from all users.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET -d 'where={\"likeable_type\":\"Status\"}' \"https://api.cloud.appcelerator.com/v1/likes/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n    \"meta\": {\n        \"code\": 200,\n        \"status\": \"ok\",\n        \"method_name\": \"queryLikes\",\n        \"count\": 100\n    },\n    \"response\": {\n        \"likes\": [\n            {\n                \"id\": \"5397a2c35ceba6088b000003\",\n                \"created_at\": \"2014-06-11T00:28:51+0000\",\n                \"updated_at\": \"2014-06-11T00:28:51+0000\",\n                \"likeable_id\": \"5397a1db5ceba6088b000002\",\n                \"likeable_type\": \"Status\",\n                \"user\": {\n                    \"id\": \"53962f98d298520939000006\",\n                    \"created_at\": \"2014-06-09T22:05:12+0000\",\n                    \"updated_at\": \"2014-06-11T00:22:11+0000\",\n                    \"external_accounts\": [],\n                    \"confirmed_at\": \"2014-06-09T22:05:12+0000\",\n                    \"username\": \"joeuser\",\n                    \"admin\": \"false\",\n                    \"stats\": {\n                        \"photos\": {\n                            \"total_count\": 0\n                        },\n                        \"storage\": {\n                            \"used\": 0\n                        }\n                    }\n                }\n            }\n        ]\n    }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Use the [<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">APSCloud sendRequest</a>]\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Use the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloud.html#sendRequest%28java.lang.String,java.lang.String,java.util.Map,%20com.appcelerator.aps.APSResponseHandler%29\">APSCloud.sendRequest()</a>\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Likes/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.likesDelete({\n    where: {'likeable_type': 'Status'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.likes.forEach(function (like) {\n            console.log(like);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>Limit query to likes on the identified Post object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_id",
              "doc": "<p>Limit query to likes on the identified Photo object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>Limit query to likes on the identified Event object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>Limit query to likes on the identified Place object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "checkin_id",
              "doc": "<p>Limit query to likes on the identified Checkin object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_id",
              "doc": "<p>Limit query to likes on the identified Review object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_object_id",
              "doc": "<p>Limit query to likes on the identified Custom object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_object_id",
              "doc": "<p>Limit query to likes on the identified User object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>Limit query to likes generated by the identified User.\nOnly an application administrator can query likes generated by other users.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "likes",
              "doc": "<p>List of likes matching the query parameters.</p>\n",
              "optional": true,
              "type": "Likes[]",
              "html_type": "Likes[]"
            }
          ],
          "owner": "Likes",
          "shortDoc": "Performs custom query of likes with sorting and paginating. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Logs",
    "doc": "<p>The Logs API provides methods for querying Arrow push notification logs up to 3 months old.\nLogs older than 3 months are purged.</p>\n\n<p>You must be logged in as an application admin to use these methods.</p>\n\n<h3>Log Pagination</h3>\n\n<p>Since the Logs API only supports the <code>where</code> query parameter and not <code>count</code>, <code>limit</code>, <code>skip</code>,\netc., in order to paginate results, execute a\n<a href=\"#!/guide/search_query-section-range-based-query-pagination-examples\">range-based query pagination expression</a>\non the push log's <code>_id</code> field.</p>\n\n<p>For example, by default, the log IDs are presented in descending order. Use the <code>where</code>\nparameter to return logs with an <code>_id</code> less than the last <code>_id</code> value in the previous results to\nretrieve the next list of results.</p>\n\n<pre><code>where={\"_id\": {\"$lt\": last_id }}\n</code></pre>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/Logs.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/Logs.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [
        {
          "tagname": "method",
          "name": "querypushlogdetails",
          "deprecated": false,
          "id": "method-querypushlogdetails",
          "doc": "<p>Performs a custom query for details about a specific Arrow push notification log item specified\nin the query's <code>where</code> clause. Returns a <a href=\"#!/api/PushLogDetails\" rel=\"PushLogDetails\" class=\"docClass\">PushLogDetails</a> object for the specified log item.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "logs/querypushlogdetails.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request that queries push log details for the specified log item.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"logs/querypushlogdetails.json\",\n    method : \"GET\",\n    data: {\n        'where': {'push_id': '54cab4788a1b3c0933bb3bbc'}\n    }\n}, function(e) {// The callback called when the request completes\n    if (e.success) {\n        alert(e.push_log_details[0]);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that queries push log details for the push notification log item\nwith the ID \"53c98055e4b03fa5a90c2942\", which was returned in a previous call to\n<a href=\"#!/api/Logs-method-querypushlogs\" rel=\"Logs-method-querypushlogs\" class=\"docClass\">querypushlogs</a>.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -d 'where={\"push_id\":\"53c98055e4b03fa5a90c2942\"}' -X GET \"http://api.cloud.appcelerator.com/v1/logs/querypushlogdetails.json?key=&lt;APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryPushLogDetails\",\n    \"more\": false\n  },\n  \"response\": {\n    \"push_log_details\": [\n      {\n        \"_id\": \"53c98055e4b03fa5a90c2942\",\n        \"android_types\": [\n          {\n            \"GCM\": 2\n          }\n        ],\n        \"app_id\": \"52b392a7f00ed00b1b000194\",\n        \"channel\": \"#broadcast\",\n        \"created_at\": \"2014-07-18T20:15:17.562Z\",\n        \"device_count\": 2,\n        \"locked_at\": \"2014-07-18T20:15:43.555Z\",\n        \"pem_sent_at\": \"2014-07-18T20:15:43.863Z\",\n        \"push_id\": \"53c980549d8b700fc70008e6\",\n        \"send_status\": 1,\n        \"types\": [\n          {\n            \"android\": 2\n          }\n        ],\n        \"updated_at\": \"2014-07-18T20:15:16.579Z\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the specified push log.</p>\n\n<pre><code>NSDictionary *params = @{\n    @\"where\": @{\n        @\"push_id\" : @\"54cbd82802d20d097b09cf80\"\n    }\n};\n\n[[APSCloud sharedInstance] sendRequest:@\"logs/querypushlogdetails.json\" method:@\"GET\" data:params handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the specified push log.</p>\n\n<pre><code>HashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;();\nJSONObject params = new JSONObject(\"{'push_id': '54cc212e8fc90956e00e3a10'}\");\ndata.put(\"where\", params);\n\nAPSCloud.getInstance().sendRequest(\"logs/querypushlogdetails.json\", \"GET\", data, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(e.getResponse().toString())\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"REST\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogdetails.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.logsQueryPushLogDetails({\n    where: {'push_id': '54cab4788a1b3c0933bb3bbc'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.push_log_details.forEach(function (log) {\n            console.log(log);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Where clause whose value is JSON object consisting of the field name \"push_id\"\nand the ID of the push notification log item to query for, for example:</p>\n\n<pre><code>where={\"push_id\":\"&lt;PUSHLOG_ID&gt;\"}\n</code></pre>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "PushLogDetails",
              "doc": "<p>Single-element array of <a href=\"#!/api/PushLogDetails\" rel=\"PushLogDetails\" class=\"docClass\">PushLogDetails</a> that matched the query.</p>\n",
              "optional": true,
              "type": "PushLogDetails[]",
              "html_type": "PushLogDetails[]"
            }
          ],
          "owner": "Logs",
          "shortDoc": "Performs a custom query for details about a specific Arrow push notification log item specified\nin the query's where ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "querypushlogs",
          "deprecated": false,
          "id": "method-querypushlogs",
          "doc": "<p>Performs a custom query of Arrow push notification logs with sorting and pagination. Returns\na list of <a href=\"#!/api/PushLogs\" rel=\"PushLogs\" class=\"docClass\">PushLogs</a> objects that matched the query parameters.</p>\n\n<p>To get additional details about a specific PushLogs item, pass the value of <a href=\"#!/api/PushLogs-property-_id\" rel=\"PushLogs-property-_id\" class=\"docClass\">PushLogs._id</a> to\na <a href=\"#!/api/Logs-method-querypushlogdetails\" rel=\"Logs-method-querypushlogdetails\" class=\"docClass\">querypushlogdetails</a> query.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "logs/querypushlogs.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request that queries for push logs. The callback outputs the push ID and payload\nif the request was successful.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"logs/querypushlogs.json\",\n    method : \"GET\",\n}, function(e) {\n    if (e.success) {\n        e.push_logs.forEach(function(log){\n            Ti.API.info(log._id + \":\" + JSON.stringify(log.payload));\n        });\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X GET \"http://api.cloud.appcelerator.com/v1/logs/querypushlogs.json?key=&lt;API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryPushLogs\",\n    \"more\": false\n  },\n  \"response\": {\n    \"push_logs\": [\n      {\n        \"_id\": \"539b589fc8499a086d000200\",\n        \"app_id\": \"527032812a30cf5d96000003\",\n        \"created_at\": \"2014-06-13T20:01:35.297Z\",\n        \"expire_after_seconds\": null,\n        \"geo_condition\": null,\n        \"locked_at\": \"2014-06-13T20:01:36.833Z\",\n        \"payload\": \"{\\\"alert\\\":\\\"hello\\\",\\\"sound\\\":\\\"none\\\",\\\"vibrate\\\":false}\",\n        \"to_ids\": null,\n        \"updated_at\": \"2014-06-13T20:01:35.297Z\",\n        \"user_id\": null,\n        \"version\": null\n      },\n      {\n        \"_id\": \"53581c34d8d8f2b28a000098\",\n        \"channel\": \"test\",\n        \"payload\": \"test schedule\",\n        \"geo_condition\": \"{\\\"$geoWithin\\\":{\\\"$centerSphere\\\":[[-122.0507049560547,37.38685989379883],0.00252589]}}\",\n        \"app_id\": \"527032812a30cf5d96000003\",\n        \"push_schedule_id\": \"53581c34d8d8f2b28a000097\",\n        \"scheduled_at\": \"2014-10-24T00:00:00.000Z\",\n        \"created_at\": \"2014-04-23T20:01:56.409Z\",\n        \"updated_at\": \"2014-04-23T20:01:56.409Z\"\n      },\n      {\n        \"_id\": \"53581a8ed8d8f2b28a000096\",\n        \"channel\": \"test\",\n        \"payload\": \"test schedule\",\n        \"app_id\": \"527032812a30cf5d96000003\",\n        \"push_schedule_id\": \"53581a8ed8d8f2b28a000095\",\n        \"scheduled_at\": \"2014-10-24T00:00:00.000Z\",\n        \"created_at\": \"2014-04-23T19:54:54.163Z\",\n        \"updated_at\": \"2014-04-23T19:54:54.163Z\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve all push logs.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"logs/querypushlogs.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve all push logs.</p>\n\n<pre><code>try {\n    APSCloud.getInstance().sendRequest(\"logs/querypushlogs.json\", \"GET\", null, new APSResponseHandler() {\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(e.getResponse().toString())\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            }\n            else {\n                Log.e(\"APSCloud\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSCloud\", \"Error: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Logs/querypushlogs.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.logsQueryPushLogs({\n    where: {'likeable_type': 'Status'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.push_logs.forEach(function (log) {\n            console.log(log);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be JSON encoded.</p>\n\n<p>If <code>where</code> is not specified, query returns all objects.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "PushLogs",
              "doc": "<p>List of PushLogs matching the query.</p>\n",
              "optional": true,
              "type": "PushLogs[]",
              "html_type": "PushLogs[]"
            }
          ],
          "owner": "Logs",
          "shortDoc": "Performs a custom query of Arrow push notification logs with sorting and pagination. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Messages",
    "doc": "<p>The Messages APIs provides methods for sending private messages between users.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "body",
          "id": "property-body",
          "doc": "<p>Message body.</p>\n",
          "type": "String",
          "owner": "Messages",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Message creation date.</p>\n",
          "type": "Date",
          "owner": "Messages",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "from",
          "id": "property-from",
          "doc": "<p>Message sender.</p>\n",
          "type": "Users",
          "owner": "Messages",
          "html_type": "Users",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>ID of the sent message.</p>\n",
          "type": "String",
          "owner": "Messages",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "status",
          "id": "property-status",
          "doc": "<p>Status of the message: in-box messages have status of <code>read</code>, <code>unread</code>, or\n<code>replied</code>.</p>\n",
          "type": "String",
          "owner": "Messages",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "subject",
          "id": "property-subject",
          "doc": "<p>Message subject.</p>\n",
          "type": "String",
          "owner": "Messages",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "thread_id",
          "id": "property-thread_id",
          "doc": "<p>Thread ID of the sent message.</p>\n",
          "type": "String",
          "owner": "Messages",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "to",
          "id": "property-to",
          "doc": "<p>Message recipients.</p>\n",
          "type": "Users[]",
          "owner": "Messages",
          "html_type": "Users[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/Messages.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Message update date.</p>\n",
          "type": "Date",
          "owner": "Messages",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Message objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "messages/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Message objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"messages/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/messages/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"messagesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Message objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"messages/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Message objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"messages/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Message objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Messages",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Sends a message with an optional subject to one or more specified users. The <code>thread_id</code> of\nthe first outgoing message is its own id. Replies to the first or subsequent messages in\nthe thread will all use the id of the first message as their <code>thread_id</code>. The output of this\nAPI method is the copy of the message saved to the sender's sent mail.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new message and checks the response.</p>\n\n<pre><code>Cloud.Messages.create({\n    to_ids: toSet.ids.join(','),\n    body: 'Hello World',\n    subject: 'Test Message'\n}, function (e) {\n    if (e.success) {\n        var message = e.messages[0];\n        alert('Success:\\n' +\n            'id: ' + message.id + '\\n' +\n            'subject: ' + message.subject + '\\n' +\n            'body: ' + message.body + '\\n' +\n            'updated_at: ' + message.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"to_ids=4d71445b6f70951043000006,4d7184f06f70951043000012\" -F \"subject=Sunday Afternoon\" -F \"body=Howabout going to the Academy of Sciences?\" https://api.cloud.appcelerator.com/v1/messages/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createMessage\"\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d85418dd0afbe013e000027\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"sent\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"Howabout going to the Academy of Sciences?\",\n        \"created_at\":\"2011-03-19T23:51:41+0000\",\n        \"updated_at\":\"2011-03-19T23:51:41+0000\",\n        \"from\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n          },\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"to_ids\" : @\"USER_ID1, USER_ID2, USER_ID3\",\n    @\"body\"   : @\"Hello World\",\n    @\"subject\": @\"Test Message\"\n};\n[APSMessages create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *messages = e.response[@\"messages\"];\n        NSDictionary *currentMessage = messages[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                currentMessage[@\"id\"],\n                                currentMessage[@\"subject\"],\n                                currentMessage[@\"body\"],\n                                currentMessage[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\nfinal Activity currentActivity = this;\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"to_ids\", \"4d71445b6f70951043000006,4d7184f06f70951043000012\");\ndata.put(\"body\", \"new message!\");\n\ntry {\n    APSMessages.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSMessages\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesCreate({\n    to_ids: toSet.ids.join(','),\n    body: 'Hello World',\n    subject: 'Test Message'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.messages[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "to_ids",
              "doc": "<p>Comma-separated list of one or more IDs of <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> to send the message to.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "body",
              "doc": "<p>The body of the message.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "subject",
              "doc": "<p>Message subject.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User-defined data. See <a href=\"/#!/guide/customfields\">Custom Objects and Custom Fields</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>ID of the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> to send message on behalf of.</p>\n\n<p>The current login user must be the application admin, in order to send a\nmessage on behalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>A copy of the message as sent.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Sends a message with an optional subject to one or more specified users. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Delete the message with the given <code>id</code>. The message must be in the current\nuser's inbox or sent mail. There is currently no trash folder and deletion is\npermanent.</p>\n\n<p>Application Admin can delete any Message object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a message and checks the response.</p>\n\n<pre><code>Cloud.Messages.remove({\n    message_id: savedMessageId\n}, function (e) {\n    if (e.success) {\n        alert('Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/messages/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;message_id=4d854389d0afbe013e000029\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteMessage\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    // Create dictionary of parameters to be passed with the request\n    NSDictionary <em>data = @{@\"message_id\" : @\"message_Identifier\"};\n    [APSMessages remove:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Message Removed\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }</p>\n\n<pre><code>}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\nfinal Activity currentActivity = this;\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"message_id\", \"4d854389d0afbe013e000029\");\n\ntry {\n    APSMessages.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesDelete({\n    message_id: savedMessageId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "message_id",
              "doc": "<p>ID of the message to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User to delete the Message object on behalf of. The user needs to be either the sender\nor recipient of the message.</p>\n\n<p>The current user must be an application admin to delete a Message object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Delete the message with the given id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete_thread",
          "deprecated": false,
          "id": "method-delete_thread",
          "doc": "<p>Delete all messages in a thread with the given <code>thread_id</code>. The thread must be\nin the current user's inbox or sent mail. There is currently no trash folder\nand deletion is permanent.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/delete/thread.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes all messages in a thread and checks the response.</p>\n\n<pre><code>Cloud.Messages.removeThread({\n    thread_id: savedThreadId\n}, function (e) {\n    if (e.success) {\n        alert('Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/messages/delete/thread.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;thread_id=4d854389d0afbe013e000029\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteMessageThread\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    // Create dictionary of parameters to be passed with the request\n    NSDictionary <em>data = @{@\"thread_id\" : @\"thread_Identifier\"};\n    [APSMessages removeThread:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                        message:@\"Message Removed\"\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        } else {\n            [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                        message:e.errorMessage\n                                       delegate:nil\n                              cancelButtonTitle:@\"OK\"\n                              otherButtonTitles:nil] show];\n        }</p>\n\n<pre><code>}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"thread_id\", \"4d854389d0afbe013e000029\");\n\ntry {\n    APSMessages.removeThread(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSMessages\", \"Thread removed!\");\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n\n<p>}</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/delete_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesDeleteThread({\n    thread_id: savedThreadId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "thread_id",
              "doc": "<p>Thread ID of the message thread to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Delete all messages in a thread with the given thread_id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs a custom query of Messages. Currently you can not query or sort data stored inside\nan array or hash in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "messages/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve messages with the subject \"Sunday Afternoon\".</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"messages/query.json\",\n    method : \"GET\",\n    data: {\n        \"where\" : {\"subject\" : \"Sunday Afternoon\"}\n    }\n}, function(e) {\n    if (e.success) {\n        alert(JSON.stringify(e));\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that returns all messages that have the subject \"Sunday Afternoon\":</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X GET --data-urlencode 'where={\"subject\":\"Sunday Afternoon\"}' \"https://api.cloud.appcelerator.com/v1/messages/query.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryMessages\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\": \"53d8390588971f081c0012ef\",\n        \"from_id\": \"53d7c9d188971f0824001269\",\n        \"to_ids\": [\n          \"53d8372e88971f0824001463\",\n          \"53d8377388971f0824001465\"\n        ],\n        \"thread_id\": \"53d8390588971f081c0012ee\",\n        \"subthread_id\": \"53d8390588971f081c0012ed\",\n        \"status\": \"unread\",\n        \"subject\": \"Sunday Afternoon\",\n        \"body\": \"Wanna catch a movie later?\"\n      },\n      {\n        \"id\": \"53d8390588971f081c0012ee\",\n        \"from_id\": \"53d7c9d188971f0824001269\",\n        \"to_ids\": [\n          \"53d8372e88971f0824001463\",\n          \"53d8377388971f0824001465\"\n        ],\n        \"thread_id\": \"53d8390588971f081c0012ee\",\n        \"subthread_id\": \"53d8390588971f081c0012ed\",\n        \"status\": \"sent\",\n        \"subject\": \"Sunday Afternoon\",\n        \"body\": \"Howabout going to the Academy of Sciences?\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve messages with the subject \"Sunday Afternoon\".</p>\n\n<pre><code>NSDictionary *params = @{\n    @\"where\": @{\n        @\"subject\" : @\"Sunday Afternoon\"\n    }\n};\n\n[[APSCloud sharedInstance] sendRequest:@\"messagess/query.json\" method:@\"GET\" data:params handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve messages with the subject \"Sunday Afternoon\".</p>\n\n<pre><code>HashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;();\nJSONObject params = new JSONObject(\"{'subject': 'Sunday Afternoon'}\");\ndata.put(\"where\", params);\n\nAPSCloud.getInstance().sendRequest(\"messages/query.json\", \"GET\", data, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(e.getResponseString())\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"REST\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesQuery({\n    where: {'subject' : 'Sunday Afternoon'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.messages.forEach(function (message) {\n            console.log(message);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>You can query any of the standard values for an ACL object, as well as any\ncustom fields that contain simple values, such as String, Number or Boolean\nvalues.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>List of messages objects matching the query.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Performs a custom query of Messages. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "reply",
          "deprecated": false,
          "id": "method-reply",
          "doc": "<p>Replies to all recipients of the given message <code>id</code>. The status of the message\nwill be changed to <code>replied</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/reply.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example replies to a message and checks the response.</p>\n\n<pre><code>Cloud.Messages.reply({\n    message_id: savedMessageId,\n    body: 'Welcome'\n}, function (e) {\n    if (e.success) {\n        var message = e.messages[0];\n        alert('Success:\\n' +\n            'id: ' + message.id + '\\n' +\n            'subject: ' + message.subject + '\\n' +\n            'body: ' + message.body + '\\n' +\n            'updated_at: ' + message.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"body=Academy of sciences sounds great!\" -F \"message_id=4d85418dd0afbe013e000025\" https://api.cloud.appcelerator.com/v1/messages/reply.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"replyMessage\"\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d854389d0afbe013e00002a\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"sent\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"Academy of Sciences sounds great!\",\n        \"created_at\":\"2011-03-20T00:00:09+0000\",\n        \"updated_at\":\"2011-03-20T00:00:09+0000\",\n        \"from\": {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          },\n          {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    // Create dictionary of parameters to be passed with the request\n    NSDictionary <em>data = @{\n        @\"message_id\" : @\"Message_Identifier\",\n        @\"body\"       : @\"Welcome\"\n    };\n    [APSMessages remove:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            NSArray <em>messages = e.response[@\"messages\"];\n            NSDictionary </em>currentMessage = messages[0];\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                    currentMessage[@\"id\"],\n                                    currentMessage[@\"subject\"],\n                                    currentMessage[@\"body\"],\n                                    currentMessage[@\"updated_at\"]];</p>\n\n<pre><code>        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\nfinal Activity currentActivity = this;\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"message_id\", \"4d85418dd0afbe013e000025\");\ndata.put(\"body\", \"reply message!\");\n\ntry {\n    APSMessages.reply(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Replied!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/reply.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesReply({\n    message_id: savedMessageId,\n    body: 'Welcome'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.messages[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "message_id",
              "doc": "<p>ID of the message to reply to.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "body",
              "doc": "<p>Reply message body text.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>An array containing a single message, the sent message.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Replies to all recipients of the given message id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Shows a message in the user's mailbox.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a message and checks the response.</p>\n\n<pre><code>Cloud.Messages.show({\n    message_id: savedMessageId\n}, function (e) {\n    if (e.success) {\n        var message = e.messages[0];\n        alert('Success:\\n' +\n            'id: ' + message.id + '\\n' +\n            'subject: ' + message.subject + '\\n' +\n            'body: ' + message.body + '\\n' +\n            'updated_at: ' + message.updated_at);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/messages/show.json?key=&lt;YOUR API APP KEY&gt;&amp;message_id=&lt;MESSAGE_ID&gt;\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showMessage\",\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d85418dd0afbe013e000025\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"read\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"How about going to the Academy of Sciences?\",\n        \"created_at\":\"2011-03-19T23:51:41+0000\",\n        \"updated_at\":\"2011-03-19T23:54:30+0000\",\n        \"from\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n          },\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"message_id\" : @\"Message_Identifier\",\n};\n[APSMessages show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *messages = e.response[@\"messages\"];\n        NSDictionary *currentMessage = messages[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                currentMessage[@\"id\"],\n                                currentMessage[@\"subject\"],\n                                currentMessage[@\"body\"],\n                                currentMessage[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:\n    APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"message_id\", 'MESSAGE_ID');\n\ntry {\n    APSMessages.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray messages = responseJSON.getJSONArray(\"messages\");\n                    // Do stuff with messages...\n                } catch (JSONException err) {\n                    Log.e(\"APSMessages\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesShow({\n    message_id: savedMessageId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.messages[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "message_id",
              "doc": "<p>ID of the message.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>An array with one message item.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Shows a message in the user's mailbox. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "show_inbox",
          "deprecated": false,
          "id": "method-show_inbox",
          "doc": "<p>Shows messages in the current user's inbox. Messages in the inbox have the\nstatus of <code>unread</code>, <code>read</code>, or <code>replied</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/show/inbox.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of messages in the inbox and checks the response.</p>\n\n<pre><code>Cloud.Messages.showInbox(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.messages.length);\n        for (var i = 0; i &lt; e.messages.length; i++) {\n            var message = e.messages[i];\n            alert('Success:\\n' +\n                'id: ' + message.id + '\\n' +\n                'subject: ' + message.subject + '\\n' +\n                'body: ' + message.body + '\\n' +\n                'updated_at: ' + message.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/messages/show/inbox.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showMessagesInbox\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d85418dd0afbe013e000025\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"read\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"Howabout going to the Academy of Sciences?\",\n        \"created_at\":\"2011-03-19T23:51:41+0000\",\n        \"updated_at\":\"2011-03-19T23:54:30+0000\",\n        \"from\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n          },\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>[APSMessages showInbox:nil withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *messages = e.response[@\"messages\"];\n        for (NSDictionary *currentMessage in messages) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                currentMessage[@\"id\"],\n                                currentMessage[@\"subject\"],\n                                currentMessage[@\"body\"],\n                                currentMessage[@\"updated_at\"]];\n\n            [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                        message:message\n                                       delegate:nil \n                              cancelButtonTitle:@\"OK\" \n                              otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\n\ntry {\n    APSMessages.showInbox(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray messages = e.getResponse().getJSONArray(\"messages\");\n                    if (messages.length() &lt;= 0) {\n                        Log.i(\"APSMessages\", \"No Messages\");\n                    } else {\n                        for (int i = 0; i &lt; messages.length(); i++) {\n                            JSONObject message = messages.getJSONObject(i);\n                            Log.i(\"APSMessages\", message.getString(\"subject\"));\n                        }\n                    }\n                }\n                catch (JSONException err) {\n                    Log.e(\"APSMessages\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_inbox.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesShowInbox(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.messages.forEach(function(message) {\n            console.log(message);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>List of inbox messages.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Shows messages in the current user's inbox. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "show_sent",
          "deprecated": false,
          "id": "method-show_sent",
          "doc": "<p>Shows messages in the current user's sent messages.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/show/sent.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of messages that have been sent and checks the response.</p>\n\n<pre><code>Cloud.Messages.showSent(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.messages.length);\n        for (var i = 0; i &lt; e.messages.length; i++) {\n            var message = e.messages[i];\n            alert('Success:\\n' +\n                'id: ' + message.id + '\\n' +\n                'subject: ' + message.subject + '\\n' +\n                'body: ' + message.body + '\\n' +\n                'updated_at: ' + message.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/messages/show/sent.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showMessagesSent\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d85418dd0afbe013e000027\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"sent\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"Howabout going to the Academy of Sciences?\",\n        \"created_at\":\"2011-03-19T23:51:41+0000\",\n        \"updated_at\":\"2011-03-19T23:51:41+0000\",\n        \"from\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n          },\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>[APSMessages showSent:nil withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *messages = e.response[@\"messages\"];\n        for (NSDictionary *currentMessage in messages) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                currentMessage[@\"id\"],\n                                currentMessage[@\"subject\"],\n                                currentMessage[@\"body\"],\n                                currentMessage[@\"updated_at\"]];\n\n            [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                        message:message\n                                       delegate:nil \n                              cancelButtonTitle:@\"OK\" \n                              otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\n\ntry {\n    APSMessages.showSent(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray messages = e.getResponse().getJSONArray(\"messages\");\n                    if (messages.length() &lt;= 0) {\n                        Log.i(\"APSMessages\", \"No Messages\");\n                    } else {\n                        for (int i = 0; i &lt; messages.length(); i++) {\n                            JSONObject message = messages.getJSONObject(i);\n                            Log.i(\"APSMessages\", message.getString(\"subject\"));\n                        }\n                    }\n                }\n                catch (JSONException err) {\n                    Log.e(\"APSMessages\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_sent.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesShowSent(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.messages.forEach(function(message) {\n            console.log(message);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>List of sent  messages.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Shows messages in the current user's sent messages. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "show_thread",
          "deprecated": false,
          "id": "method-show_thread",
          "doc": "<p>Show messages with the given <code>thread_id</code> from the user's inbox. If the status\nof any of the returned messages is <code>unread</code>, it will be changed to <code>read</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/show/thread.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of messages in a thread and checks the response.</p>\n\n<pre><code>Cloud.Messages.showThread({\n    thread_id: savedThreadId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.messages.length);\n        for (var i = 0; i &lt; e.messages.length; i++) {\n            var message = e.messages[i];\n            alert('Success:\\n' +\n                'id: ' + message.id + '\\n' +\n                'thread id: ' + message.thread_id + '\\n' +\n                'subject: ' + message.subject + '\\n' +\n                'body: ' + message.body + '\\n' +\n                'updated_at: ' + message.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/messages/show/thread.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;thread_id=4d85418dd0afbe013e000025\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showThreadMessages\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":3\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d869af5d0afbe1074000006\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"unread\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"That was a fun Sunday afternoon!\",\n        \"created_at\":\"2011-03-21T00:25:25+0000\",\n        \"updated_at\":\"2011-03-21T00:25:25+0000\",\n        \"from\": {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          },\n          {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          }\n        ]\n      },\n      {\n        \"id\":\"4d854389d0afbe013e000028\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"unread\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"Academy of Sciences sounds great!\",\n        \"created_at\":\"2011-03-20T00:00:09+0000\",\n        \"updated_at\":\"2011-03-20T00:00:09+0000\",\n        \"from\": {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          },\n          {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          }\n        ]\n      },\n      {\n        \"id\":\"4d85418dd0afbe013e000026\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"unread\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"Howabout going to the Academy of Sciences?\",\n        \"created_at\":\"2011-03-19T23:51:41+0000\",\n        \"updated_at\":\"2011-03-19T23:51:41+0000\",\n        \"from\": {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n          },\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:\n    NSDictionary <em>data = @{@\"thread_id\":@\"savedThreadId\"};\n    [APSMessages showThread:data withBlock:^(APSResponse </em>e) {\n        if (e.success){\n            NSArray <em>messages = e.response[@\"messages\"];\n            for (NSDictionary </em>currentMessage in messages) {\n                NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                    currentMessage[@\"id\"],\n                                    currentMessage[@\"subject\"],\n                                    currentMessage[@\"body\"],\n                                    currentMessage[@\"updated_at\"]];</p>\n\n<pre><code>            [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                        message:message\n                                       delegate:nil \n                              cancelButtonTitle:@\"OK\" \n                              otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"thread_id\", \"4d85418dd0afbe013e000025\");\n\ntry {\n    APSMessages.showThread(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray messages = e.getResponse().getJSONArray(\"messages\");\n                    if (messages.length() &lt;= 0) {\n                        Log.i(\"APSMessages\", \"No Messages\");\n                    } else {\n                        for (int i = 0; i &lt; messages.length(); i++) {\n                            JSONObject message = messages.getJSONObject(i);\n                            Log.i(\"APSMessages\", message.getString(\"subject\"));\n                        }\n                    }\n                }\n                catch (JSONException err) {\n                    Log.e(\"APSMessages\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_thread.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesShowThreads({\n    thread_id: savedThreadId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.messages[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "thread_id",
              "doc": "<p>ID of the thread to show messages from.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>List of messages in the thread.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Show messages with the given thread_id from the user's inbox. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "show_threads",
          "deprecated": false,
          "id": "method-show_threads",
          "doc": "<p>Shows the first message in each of the most recent threads in the user's inbox.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "messages/show/threads.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of message threads and checks the response.</p>\n\n<pre><code>Cloud.Messages.showThreads(function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.messages.length);\n        for (var i = 0; i &lt; e.messages.length; i++) {\n            var message = e.messages[i];\n            alert('Success:\\n' +\n                'id: ' + message.id + '\\n' +\n                'thread id: ' + message.thread_id + '\\n' +\n                'subject: ' + message.subject + '\\n' +\n                'body: ' + message.body + '\\n' +\n                'updated_at: ' + message.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/messages/show/threads.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showThreads\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":2\n  },\n  \"response\": {\n    \"messages\": [\n      {\n        \"id\":\"4d869af5d0afbe1074000006\",\n        \"thread_id\":\"4d85418dd0afbe013e000025\",\n        \"status\":\"unread\",\n        \"subject\":\"Sunday Afternoon\",\n        \"body\":\"That was a fun Sunday afternoon!\",\n        \"created_at\":\"2011-03-21T00:25:25+0000\",\n        \"updated_at\":\"2011-03-21T00:25:25+0000\",\n        \"from\": {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          },\n          {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          }\n        ]\n      },\n      {\n        \"id\":\"4d867eb7d0afbe1074000004\",\n        \"thread_id\":\"4d867eb7d0afbe1074000003\",\n        \"status\":\"unread\",\n        \"subject\":\"Appcelerator Cloud Services Relase Date\",\n        \"body\":\"The private beta will be released on March 28\",\n        \"created_at\":\"2011-03-20T22:24:55+0000\",\n        \"updated_at\":\"2011-03-20T22:24:55+0000\",\n        \"from\": {\n            \"id\":\"4d854129d0afbe013e000022\",\n            \"first_name\":\"Wei\",\n            \"last_name\":\"Kong\",\n            \"created_at\":\"2011-03-19T23:50:01+0000\",\n            \"updated_at\":\"2011-03-19T23:50:01+0000\"\n        },\n        \"to\": [\n          {\n            \"id\":\"4d7e6493d0afbe01d8000001\",\n            \"first_name\":\"Michael\",\n            \"last_name\":\"Goff\",\n            \"created_at\":\"2011-03-14T18:55:15+0000\",\n            \"updated_at\":\"2011-03-19T05:05:29+0000\"\n          },\n          {\n            \"id\":\"4d85415ad0afbe013e000023\",\n            \"first_name\":\"George\",\n            \"last_name\":\"Dy\",\n            \"created_at\":\"2011-03-19T23:50:50+0000\",\n            \"updated_at\":\"2011-03-19T23:50:50+0000\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>[APSMessages showThreads:nil withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *messages = e.response[@\"messages\"];\n        for (NSDictionary *currentMessage in messages) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Subject : %@\\nBody : %@\\nUpdated At :%@\",\n                                currentMessage[@\"id\"],\n                                currentMessage[@\"subject\"],\n                                currentMessage[@\"body\"],\n                                currentMessage[@\"updated_at\"]];\n\n            [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                        message:message\n                                       delegate:nil \n                              cancelButtonTitle:@\"OK\" \n                              otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_CLOUD_KEY');\n\ntry {\n    APSMessages.showThreads(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray messages = e.getResponse().getJSONArray(\"messages\");\n                    if (messages.length() &lt;= 0) {\n                        Log.i(\"APSMessages\", \"No Messages\");\n                    } else {\n                        for (int i = 0; i &lt; messages.length(); i++) {\n                            JSONObject message = messages.getJSONObject(i);\n                            Log.i(\"APSMessages\", message.getString(\"subject\"));\n                        }\n                    }\n                }\n                catch (JSONException err) {\n                    Log.e(\"APSMessages\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSMessages\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSLikes\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSMessages\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Messages/show_threads.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.messagesShowThreads(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.messages.forEach(function(message) {\n            console.log(message);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "response": [
            {
              "name": "messages",
              "doc": "<p>List of messages representing the first message in each of the user's\nrecent threads.</p>\n",
              "optional": true,
              "type": "Messages[]",
              "html_type": "Messages[]"
            }
          ],
          "owner": "Messages",
          "shortDoc": "Shows the first message in each of the most recent threads in the user's inbox. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Reviewable",
    "doc": "<p>A set of fields that are added to objects that can be <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">reviewed</a>.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_average",
          "id": "property-ratings_average",
          "doc": "<p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Average rating for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_count",
          "id": "property-ratings_count",
          "doc": "<p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object that include a rating. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_summary",
          "id": "property-ratings_summary",
          "doc": "<p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Hash",
          "owner": "Reviewable",
          "shortDoc": "Breakdown of the number of reviews that specified a given rating value. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews",
          "id": "property-reviews",
          "doc": "<p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Reviews[]",
          "owner": "Reviewable",
          "shortDoc": "List of reviews for this object. ...",
          "html_type": "Reviews[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews_count",
          "id": "property-reviews_count",
          "doc": "<p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        }
      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "private": true,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [
      "Photos",
      "Places",
      "Posts",
      "Reviews"
    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PhotoCollections",
    "doc": "<p>The PhotoCollections object represents a collection of photos. Collections can be nested.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "counts",
          "id": "property-counts",
          "doc": "<p>Object with fields:</p>\n\n<ul>\n<li><code>photos: Number</code>. Number of photos in this collection.</li>\n<li><code>total_photos: Number</code>.  Number of photos in this collection and subcollections.</li>\n<li><code>subcollections: Number</code>. Number of subcollections in this collection.</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "PhotoCollections",
          "shortDoc": "Object with fields:\n\n\nphotos: Number. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "cover_photo",
          "id": "property-cover_photo",
          "doc": "<p>Photo to use as a cover photo for the collection.</p>\n",
          "type": "Photos",
          "owner": "PhotoCollections",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this user object.</p>\n",
          "type": "Date",
          "owner": "PhotoCollections",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated ID for this object.</p>\n",
          "type": "String",
          "owner": "PhotoCollections",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Name of the collection.</p>\n",
          "type": "String",
          "owner": "PhotoCollections",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "parent_collection",
          "id": "property-parent_collection",
          "doc": "<p>Collection object that contains this subcollection.</p>\n",
          "type": "PhotoCollections",
          "owner": "PhotoCollections",
          "html_type": "PhotoCollections",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this user object.</p>\n",
          "type": "Date",
          "owner": "PhotoCollections",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/PhotoCollections.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Owner of this collection.</p>\n",
          "type": "Users",
          "owner": "PhotoCollections",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes PhotoCollections objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all PhotoCollections objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>The <a href=\"#!/api/PhotoCollections-property-cover_photo\" rel=\"PhotoCollections-property-cover_photo\" class=\"docClass\">cover photo</a> associated with any of the matched objects are not not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "collections/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Photo Collection objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"collections/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Photo Collection objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/collections/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Photo Collection objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"collections/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Photo Collection object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Photo Collection objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"collections/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Photo Collection objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsBatchDelete({\n    where: {'favorite_color': 'blue'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for PhotoCollections objects to delete.\nIf not specified, all PhotoCollections objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Deletes PhotoCollections objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of PhotoCollection objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "collections/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of PhotoCollection objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"collections/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/collections/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"collectionsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Photo Collection objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"collections/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Photo Collection objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"collections/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of PhotoCollection objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "PhotoCollections",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Collections contain one or more photos and/or sub-collections. These can be\nused as photo albums for a user. To create a subcollection,\nspecify a <code>parent_collection_id</code> when creating a collection. If the collection has been\ncreated or updated with a <code>cover_photo_id</code>, photo details will be returned\nwith collection information. If a <code>cover_photo_id</code> has not been assigned, the\nfirst photo found in the collection or its sub-collections will be returned as\nthe cover photo.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "collections/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new photo collection and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.create({\n    name: 'Party Pictures'\n}, function (e) {\n    if (e.success) {\n        var collection = e.collections[0];\n        alert('Success:\\n' +\n            'id: ' + collection.id + '\\n' +\n            'name: ' + collection.name + '\\n' +\n            'count: ' + collection.counts.total_photos + '\\n'\n            'updated_at: ' + collection.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=Office Fun\" \"https://api.cloud.appcelerator.com/v1/collections/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"createCollection\",\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"collections\": [\n      {\n        \"name\": \"Office Fun\",\n        \"created_at\": \"2011-06-08T18:32:30+0000\",\n        \"updated_at\": \"2011-06-08T18:32:30+0000\",\n        \"id\": \"4defc03ed0afbe0400000001\",\n        \"user\": {\n          \"created_at\": \"2011-05-26T20:48:07+0000\",\n          \"updated_at\": \"2011-06-04T01:54:39+0000\",\n          \"id\": \"4ddebc87d0afbe5a54000001\",\n          \"last_name\": \"Goff\",\n          \"email\": \"mike@appcelerator.com\",\n          \"first_name\": \"Mike\"\n        },\n        \"counts\": {\n          \"photos\": 0,\n          \"total_photos\": 0,\n          \"sub_collections\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"name\" : @\"Party Pictures\"\n                      };\n[APSPhotoCollections create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *collections = e.response[@\"collections\"];\n        NSDictionary *collection = collections[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nCount: %@\\nUpdated at : %@\\n\",\n                                collection[@\"id\"],\n                                collection[@\"name\"],\n                                collection[@\"count\"],\n                                collection[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"Office Fun\");\n\ntry {\n    APSPhotoCollections.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsBatchDelete({\n    name: 'Party Pictures'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.collections[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name of the collection. The name must be unique across other top-level\ncollections. If this is a sub-collection, the name must be unique across other\nsub-collections of the same parent.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "parent_collection_id",
              "doc": "<p>Parent collection ID. Specify when creating a subcollection.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "cover_photo_id",
              "doc": "<p>ID of the photo to use as a cover photo. The photo does not need to be\nin the collection.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this collection.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this collection.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the collection on behalf of.</p>\n\n<p>The current login user must be an application admin to create a collection on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "collections",
              "doc": "<p>Single-element array containing the newly-created photo collection.</p>\n",
              "optional": true,
              "type": "PhotoCollections[]",
              "html_type": "PhotoCollections[]"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Collections contain one or more photos and/or sub-collections. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Delete an empty collection. An error will be returned if a collection contains\nany photos or subcollections.</p>\n\n<p>An application admin can delete any photo collection. The <a href=\"#!/api/PhotoCollections-property-cover_photo\" rel=\"PhotoCollections-property-cover_photo\" class=\"docClass\">cover_photo</a> associated\nwith the collection is not deleted.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "collections/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a photo collection and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.remove({\n    collection_id: savedPhotoCollectionId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/collections/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;collection_id=4e013938d0afbe3896000009\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"deleteCollection\",\n    \"status\": \"ok\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"collection_id\" : @\"savedPhotoCollectionID\"\n                      };\n[APSPhotoCollections remove:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:@\"Photo Removed\"\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"collection_id\", \"4e013938d0afbe3896000009\");\n\ntry {\n    APSPhotoCollections.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsDelete({\n    collection_id: savedPhotoCollectionId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "collection_id",
              "doc": "<p>ID of the collection to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to delete the collection on behalf of. The user must be the creator of the collection.</p>\n\n<p>The current login user must be an application admin to delete a collection on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Delete an empty collection. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "search",
          "deprecated": true,
          "id": "method-search",
          "doc": "<p>Search for top-level collections owned by the given user. Subcollections cannot\nbe found this way. See <a href=\"#!/api/PhotoCollections-method-show_subcollections\" rel=\"PhotoCollections-method-show_subcollections\" class=\"docClass\">Show Subcollections</a> to view the\nsubcollections of a collection.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "This API is no longer supported."
            }
          },
          "url": "collections/search.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example searches for collections and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.search({\n    user_id: savedUserId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.collections.length);\n        for (var i = 0; i &lt; e.collections.length; i++) {\n            var collection = e.collections[i];\n            alert('Success:\\n' +\n                'id: ' + collection.id + '\\n' +\n                'name: ' + collection.name + '\\n' +\n                'count: ' + collection.counts.total_photos + '\\n'\n                'updated_at: ' + collection.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/collections/search.json?user_id=4e004e4ed0afbe2f1800003c&amp;key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"total_pages\": 1,\n    \"code\": 200,\n    \"method_name\": \"searchCollections\",\n    \"page\": 1,\n    \"total_results\": 1,\n    \"per_page\": 10,\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"collections\": [\n      {\n        \"name\": \"Skydiving\",\n        \"created_at\": \"2011-06-21T07:54:54+0000\",\n        \"updated_at\": \"2011-06-21T07:54:54+0000\",\n        \"id\": \"4e004e4ed0afbe2f1800003f\",\n        \"user\": {\n          \"created_at\": \"2011-06-21T07:54:54+0000\",\n          \"updated_at\": \"2011-06-21T07:54:54+0000\",\n          \"id\": \"4e004e4ed0afbe2f1800003c\",\n          \"last_name\": \"Mike\",\n          \"email\": \"mike@appcelerator.com\",\n          \"first_name\": \"Goff\"\n        },\n        \"counts\": {\n          \"photos\": 0,\n          \"total_photos\": 0,\n          \"subcollections\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"user_id\"    : @\"savedUserID\"\n                      };\n[APSPhotoCollections search:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *collections = e.response[@\"collections\"];\n        for (NSDictionary *collection in collection) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nCount: %@\\nUpdated at : %@\\n\",\n                                  collection[@\"id\"],\n                                  collection[@\"name\"],\n                                  collection[@\"count\"],\n                                  collection[@\"updated_at\"]];\n\n            [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                        message:message\n                                       delegate:nil \n                              cancelButtonTitle:@\"OK\" \n                              otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_id\", \"4e004e4ed0afbe2f1800003c\");\n\ntry {\n    APSPhotoColllections.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray collections = e.getResponse().getJSONArray(\"collections\");\n                    if (collections.length() &lt;= 0) {\n                        Log.i(\"APSPhotoCollections\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; collections.length(); i++) {\n                            JSONObject collection = collections.getJSONObject(i);\n                            Log.i(\"APSPhotoCollections\", collection.getString(\"name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsSearch({\n    user_id: savedUserId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.collections.forEach(function(collection) {\n            console.log(collection);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_id",
              "doc": "<p>ID of the user to find collections for.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "collections",
              "doc": "<p>List of photos in the collection.</p>\n",
              "optional": true,
              "type": "PhotoCollections[]",
              "html_type": "PhotoCollections[]"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Search for top-level collections owned by the given user. ...",
          "html_meta": {
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>This API is no longer supported.</p>\n</p>\n        </div>\n"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Shows information about a collection including the cover photo, owner, parent\ncollection, and counts of its contents. See <a href=\"#!/api/PhotoCollections-method-show_subcollections\" rel=\"PhotoCollections-method-show_subcollections\" class=\"docClass\">Show\nSubcollections</a> and <a href=\"#!/api/PhotoCollections-method-show_photos\" rel=\"PhotoCollections-method-show_photos\" class=\"docClass\">Show Photos</a> to view the contents\nof a collection.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "collections/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a photo collection and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.show({\n    collection_id: savedPhotoCollectionId\n}, function (e) {\n    if (e.success) {\n        var collection = e.collections[0];\n        alert('Success:\\n' +\n            'id: ' + collection.id + '\\n' +\n            'name: ' + collection.name + '\\n' +\n            'count: ' + collection.counts.total_photos + '\\n'\n            'updated_at: ' + collection.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/collections/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;collection_id=4e012ce0d0afbe362a00000a\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"showCollection\",\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"collections\": [\n      {\n        \"name\": \"Subcollection 1\",\n        \"parent_collection\": {\n          \"name\": \"Skydiving\",\n          \"created_at\": \"2011-06-21T23:44:32+0000\",\n          \"updated_at\": \"2011-06-21T23:44:32+0000\",\n          \"id\": \"4e012ce0d0afbe362a000009\",\n          \"user\": {\n            \"created_at\": \"2011-06-21T23:44:10+0000\",\n            \"updated_at\": \"2011-06-21T23:44:31+0000\",\n            \"username\": \"bob\",\n            \"id\": \"4e012ccad0afbe362a000002\",\n            \"last_name\": \"Dude\",\n            \"email\": \"bob@dude.com\",\n            \"first_name\": \"Bob\"\n          },\n          \"counts\": {\n            \"photos\": 0,\n            \"total_photos\": 0,\n            \"subcollections\": 1\n          }\n        },\n        \"created_at\": \"2011-06-21T23:44:32+0000\",\n        \"updated_at\": \"2011-06-21T23:44:32+0000\",\n        \"id\": \"4e012ce0d0afbe362a00000a\",\n        \"user\": {\n          \"created_at\": \"2011-06-21T23:44:10+0000\",\n          \"updated_at\": \"2011-06-21T23:44:31+0000\",\n          \"username\": \"bob\",\n          \"id\": \"4e012ccad0afbe362a000002\",\n          \"last_name\": \"Dude\",\n          \"email\": \"bob@dude.com\",\n          \"first_name\": \"Bob\"\n        },\n        \"counts\": {\n          \"photos\": 0,\n          \"total_photos\": 0,\n          \"subcollections\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"collection_id\" : @\"savedPhotoCollectionID\"\n                      };\n[APSPhotoCollections show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *collections = e.response[@\"collections\"];\n        NSDictionary *collection = collections[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nCount: %@\\nUpdated at : %@\\n\",\n                                collection[@\"id\"],\n                                collection[@\"name\"],\n                                collection[@\"count\"],\n                                collection[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"collection_id\", \"4e012ce0d0afbe362a00000a\");\n\ntry {\n    APSPhotoCollections.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsShow({\n    collection_id: savedPhotoCollectionId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.collections[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "collection_id",
              "doc": "<p>ID of the collection to retrieve photos from.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as the object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "collections",
              "doc": "<p>Single-element array containing the photo collection object.</p>\n",
              "optional": true,
              "type": "PhotoCollections[]",
              "html_type": "PhotoCollections[]"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Shows information about a collection including the cover photo, owner, parent\ncollection, and counts of its contents. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show_photos",
          "deprecated": false,
          "id": "method-show_photos",
          "doc": "<p>Show photos in a collection.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "collections/show/photos.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of photos in a photo collections and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.showPhotos({\n    page: 1,\n    per_page: 20,\n    collection_id: savedCollectionId\n}, function (e) {\n    if (e.success) {\n        if (!e.photos) {\n            alert('Success: No photos');\n        } else {\n            alert('Success:\\n' +\n                'Count: ' + e.photos.length);\n            for (var i = 0; i &lt; e.photos.length; i++) {\n                var photo = e.photos[i];\n                Ti.API.info(\n                    'id: ' + photo.id + '\\n' +\n                    'name: ' + photo.filename + '\\n');\n            }\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/collections/show/photos.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;collection_id=4e004df9d0afbe2f18000010\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"showCollectionPhotos\",\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"created_at\": \"2011-06-21T07:53:29+0000\",\n        \"size\": 584344,\n        \"urls\": {\n          \"medium_640\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_medium_640.jpg\",\n          \"medium_500\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_medium_500.jpg\",\n          \"small_240\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_small_240.jpg\",\n          \"square_75\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_square_75.jpg\",\n          \"large_1024\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_large_1024.jpg\",\n          \"original\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_original.jpg\",\n          \"thumb_100\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_thumb_100.jpg\"\n        },\n        \"content_type\": \"image/jpeg\",\n        \"updated_at\": \"2011-06-21T07:53:36+0000\",\n        \"processed\": true,\n        \"id\": \"4e004df9d0afbe2f18000012\",\n        \"exif\": {\n          \"create_date\": \"2010-06-21T02:19:20+0000\"\n        },\n        \"filename\": \"photo.jpg\",\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\"         : @1,\n                         @\"per_page\"     : @20,\n                         @\"collection_id\": @\"savedCollectionID\"\n                      };\n[APSPhotoCollections showPhotos:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *photos = e.response[@\"photos\"];\n      if ([photos count] == 0) {\n        // handle No photos\n          [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                      message:@\"No Photos\"\n                                     delegate:nil\n                            cancelButtonTitle:@\"OK\"\n                            otherButtonTitles:nil] show];\n          return;\n      }\n\n      for (NSDictionary *photo in photos) {\n          NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                  photo[@\"id\"],\n                                  photo[@\"name\"],\n                                  photo[@\"updated_at\"]];\n          NSLog(@\"%@\", message);\n      }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"collection_id\", \"4e013938d0afbe3896000009\");\n\ntry {\n    APSPhotoCollections.showPhotos(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotoCollections\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; photos.length(); i++) {\n                            JSONObject photo = photos.getJSONObject(i);\n                            Log.i(\"APSPhotoCollections\", photo.getString(\"filename\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + err.toString());\n                }\n\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/photos.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsShowPhotos({\n    collection_id: savedPhotoCollectionId,\n    limit: 10\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.photos.forEach(function(photo) {\n            console.log(photo.filename);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "collection_id",
              "doc": "<p>ID of the collection to retrieve photos from.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as the object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "photos",
              "doc": "<p>List of photos in the collection.</p>\n",
              "optional": true,
              "type": "Photos[]",
              "html_type": "Photos[]"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Show photos in a collection. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show_subcollections",
          "deprecated": false,
          "id": "method-show_subcollections",
          "doc": "<p>Show subcollections of a collection.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "collections/show/subcollections.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of photo subcollections and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.showSubcollections({\n    page: 1,\n    per_page: 20,\n    collection_id: savedCollectionId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.collections.length);\n        for (var i = 0; i &lt; e.collections.length; i++) {\n            var collection = e.collections[i];\n            alert('Success:\\n' +\n                'id: ' + collection.id + '\\n' +\n                'name: ' + collection.name + '\\n' +\n                'count: ' + collection.counts.total_photos + '\\n'\n                'updated_at: ' + collection.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/collections/show/subcollections.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;collection_id=4e004df9d0afbe2f18000010\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"total_pages\": 1,\n    \"code\": 200,\n    \"method_name\": \"showCollectionSubcollections\",\n    \"page\": 1,\n    \"total_results\": 2,\n    \"per_page\": 10,\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"collections\": [\n      {\n        \"name\": \"Subcollection 1\",\n        \"cover_photo\": {\n          \"created_at\": \"2011-06-21T07:53:29+0000\",\n          \"size\": 584344,\n          \"urls\": {\n            \"medium_640\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_medium_640.jpg\",\n            \"medium_500\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_medium_500.jpg\",\n            \"small_240\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_small_240.jpg\",\n            \"square_75\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_square_75.jpg\",\n            \"large_1024\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_large_1024.jpg\",\n            \"original\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_original.jpg\",\n            \"thumb_100\": \"http://storage.appcelerator.com/VK9m9DEwQlkpcUX8YNveg6tU/photos/c9/39/4e004df9d0afbe2f18000013/photo_thumb_100.jpg\"\n          },\n          \"content_type\": \"image/jpeg\",\n          \"updated_at\": \"2011-06-21T07:53:36+0000\",\n          \"processed\": true,\n          \"id\": \"4e004df9d0afbe2f18000012\",\n          \"exif\": {\n            \"create_date\": \"2010-06-21T02:19:20+0000\"\n          },\n          \"filename\": \"photo.jpg\",\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\"\n        },\n        \"created_at\": \"2011-06-21T07:53:29+0000\",\n        \"updated_at\": \"2011-06-21T07:53:29+0000\",\n        \"id\": \"4e004df9d0afbe2f18000011\",\n        \"user\": {\n          \"created_at\": \"2011-06-21T07:53:15+0000\",\n          \"updated_at\": \"2011-06-21T07:53:29+0000\",\n          \"username\": \"bob\",\n          \"id\": \"4e004debd0afbe2f18000009\",\n          \"last_name\": \"Dude\",\n          \"email\": \"bob@dude.com\",\n          \"first_name\": \"Bob\"\n        },\n        \"counts\": {\n          \"photos\": 1,\n          \"total_photos\": 1,\n          \"subcollections\": 0\n        }\n      },\n      {\n        \"name\": \"Subcollection 2\",\n        \"created_at\": \"2011-06-21T07:53:38+0000\",\n        \"updated_at\": \"2011-06-21T07:53:38+0000\",\n        \"id\": \"4e004e02d0afbe2f18000015\",\n        \"user\": {\n          \"created_at\": \"2011-06-21T07:53:15+0000\",\n          \"updated_at\": \"2011-06-21T07:53:29+0000\",\n          \"username\": \"bob\",\n          \"id\": \"4e004debd0afbe2f18000009\",\n          \"last_name\": \"Dude\",\n          \"email\": \"bob@dude.com\",\n          \"first_name\": \"Bob\"\n        },\n        \"counts\": {\n          \"photos\": 0,\n          \"total_photos\": 0,\n          \"subcollections\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\"         : @1,\n                         @\"per_page\"     : @20,\n                         @\"collection_id\": @\"savedCollectionID\"\n                      };\n[APSPhotoCollections showSubcollections:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *collections = e.response[@\"collections\"];\n        for (NSDictionary *collection in collections) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nCount : %@\\nUpdated at : %@\\n\",\n                                    collection[@\"id\"],\n                                    collection[@\"name\"],\n                                    collection[@\"count\"],\n                                    collection[@\"updated_at\"]];\n\n            NSLog(@\"%@\", message);\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"collection_id\", \"4e013938d0afbe3896000009\");\n\ntry {\n    APSPhotoCollections.showSubcollections(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray collections = e.getResponse().getJSONArray(\"collections\");\n                    if (collectionss.length() &lt;= 0) {\n                        Log.i(\"APSPhotoCollections\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; collections.length(); i++) {\n                            JSONObject collection = collections.getJSONObject(i);\n                            Log.i(\"APSPhotoCollections\", collection.getString(\"name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + err.toString());\n                }\n\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/subcollections.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsShowSubcollections({\n    collection_id: savedPhotoCollectionId,\n    limit: 10\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.collections.forEach(function (collection) {\n            console.log(collection);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "collection_id",
              "doc": "<p>ID of the collection to retrieve photos from.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as the object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "collections",
              "doc": "<p>List of subcollections in this collection.</p>\n",
              "optional": true,
              "type": "PhotoCollections[]",
              "html_type": "PhotoCollections[]"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Show subcollections of a collection. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates a photo collection.</p>\n\n<p>An existing collection's cover photo can be added or updated by specifying a\nnew <code>cover_photo_id</code>. The cover photo can be removed by sending an empty\nstring as the value for <code>cover_photo_id</code>.\nApplication Admin can update any Photo Collection.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "collections/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a photo collection and checks the response.</p>\n\n<pre><code>Cloud.PhotoCollections.update({\n    collection_id: savedPhotoCollectionId,\n    cover_photo_id: savedPhotoId\n}, function (e) {\n    if (e.success) {\n        var collection = e.collections[0];\n        alert('Success:\\n' +\n            'id: ' + collection.id + '\\n' +\n            'name: ' + collection.name + '\\n' +\n            'count: ' + collection.counts.total_photos + '\\n'\n            'updated_at: ' + collection.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"cover_photo_id=4deece22d0afbe3ab4000002\" -F \"collection_id=4deb4496d0afbec69e000008\" \"https://api.cloud.appcelerator.com/v1/collections/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"method_name\": \"updateCollection\",\n    \"status\": \"ok\"\n  },\n  \"response\": {\n    \"collections\": [\n      {\n        \"name\": \"Sky Diving\",\n        \"cover_photo\": {\n          \"created_at\": \"2011-06-08T01:19:30+0000\",\n          \"size\": 6178569,\n          \"urls\": {\n            \"medium_640\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_medium_640.jpg\",\n            \"medium_500\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_medium_500.jpg\",\n            \"small_240\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_small_240.jpg\",\n            \"square_75\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_square_75.jpg\",\n            \"large_1024\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_large_1024.jpg\",\n            \"original\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_original.jpg\",\n            \"thumb_100\": \"http://storage.appcelerator.com/ZnkQfIWk1yUZq3m82QE9ZXrbq5jxqLEz/photos/4deece22d0afbe3ab4000002/IMG_0078_thumb_100.jpg\"\n          },\n          \"content_type\": \"image/jpeg\",\n          \"updated_at\": \"2011-06-08T01:20:08+0000\",\n          \"tags\": [\n            \"foo\",\n            \"bar\"\n          ],\n          \"processed\": true,\n          \"id\": \"4deece22d0afbe3ab4000002\",\n          \"exif\": {\n            \"create_date\": \"2010-06-03T02:36:42+0000\"\n          },\n          \"filename\": \"IMG_0078.jpg\",\n          \"md5\": \"8c189ce29ecab9daf9d14fbe679c339d\"\n        },\n        \"created_at\": \"2011-06-05T08:55:50+0000\",\n        \"updated_at\": \"2011-06-08T18:10:36+0000\",\n        \"id\": \"4deb4496d0afbec69e000008\",\n        \"user\": {\n          \"created_at\": \"2011-05-26T20:48:07+0000\",\n          \"updated_at\": \"2011-06-04T01:54:39+0000\",\n          \"id\": \"4ddebc87d0afbe5a54000001\",\n          \"last_name\": \"Goff\",\n          \"email\": \"mike@appcelerator.com\",\n          \"first_name\": \"Mike\"\n        },\n        \"counts\": {\n          \"photos\": 0,\n          \"total_photos\": 1,\n          \"subcollections\": 2\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"collection_id\" : @\"savedPhotoCollectionID\",\n                         @\"cover_photo_id\": @\"savedPhotoID\"\n                      };\n[APSPhotoCollections update:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *collections = e.response[@\"collections\"];\n        NSDictionary *collection = collections[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nCount : %@\\nUpdated at : %@\\n\",\n                                collection[@\"id\"],\n                                collection[@\"name\"],\n                                collection[@\"count\"],\n                                collection[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"collection_id\", \"4deb4496d0afbec69e000008\");\ndata.put(\"cover_photo_id\", \"4deece22d0afbe3ab4000002\");\n\ntry {\n    APSPhotoCollections.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotoCollections\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotoCollections\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotoCollections\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PhotoCollections/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photoCollectionsUpdate({\n    collection_id: savedPhotoCollectionId,\n    cover_photo_id: savedPhotoId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.collections[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "collection_id",
              "doc": "<p>ID of the collection to update.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>New name of the collection. The name must be unique across other top-level\ncollections. If this is a sub-collection, the name must be unique across other\nsub-collections of the same parent.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "cover_photo_id",
              "doc": "<p>ID of the photo to use as a cover photo. The photo does not need to be\nin the collection.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this collection.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this collection.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update the collection on behalf of. The user must be the creator of the collection.</p>\n\n<p>The current login user must be an application admin to update a collection on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "collections",
              "doc": "<p>Single-element array containing the updated collection.</p>\n",
              "optional": true,
              "type": "PhotoCollections[]",
              "html_type": "PhotoCollections[]"
            }
          ],
          "owner": "PhotoCollections",
          "shortDoc": "Updates a photo collection. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Photos",
    "doc": "<p>The Photos API lets you upload, resize and manage photos for your application. The current file store limit is 100MB in the ArrowDB cloud.</p>\n\n<p class=\"note\">\nArrowDB applications no longer create the default photo sizes. Only the original photo size is shown. To create different photo sizes when creating or updating a photo, see <a href=\"#!/guide/photosizes\">Photo Uploading & Resizing</a> guide.\n</p>\n\n",
    "alternateClassNames": [

    ],
    "mixins": [
      "Reviewable"
    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "acls",
          "id": "property-acls",
          "doc": "<p>Single-element array containing the <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> associated with this photo object, if any.</p>\n",
          "type": "String",
          "owner": "Photos",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "collections",
          "id": "property-collections",
          "doc": "<p>Single-element array containing the collection this photo is a part of, if any.</p>\n",
          "type": "PhotoCollections[]",
          "owner": "Photos",
          "html_type": "PhotoCollections[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "content_type",
          "id": "property-content_type",
          "doc": "<p>MIME content-type for this photo.</p>\n",
          "type": "String",
          "owner": "Photos",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this photo object.</p>\n",
          "type": "Date",
          "owner": "Photos",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "Hash",
          "owner": "Photos",
          "shortDoc": "User defined fields. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "filename",
          "id": "property-filename",
          "doc": "<p>Filename of the original photo.</p>\n",
          "type": "String",
          "owner": "Photos",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated ID for this photo.</p>\n",
          "type": "String",
          "owner": "Photos",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "md5",
          "id": "property-md5",
          "doc": "<p>MD5 hash of the original image data.</p>\n",
          "type": "String",
          "owner": "Photos",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "processed",
          "id": "property-processed",
          "doc": "<p>True if this photo has been processed and is available for download.</p>\n",
          "type": "Boolean",
          "owner": "Photos",
          "html_type": "Boolean",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_average",
          "id": "property-ratings_average",
          "doc": "<p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Average rating for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_count",
          "id": "property-ratings_count",
          "doc": "<p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object that include a rating. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_summary",
          "id": "property-ratings_summary",
          "doc": "<p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Hash",
          "owner": "Reviewable",
          "shortDoc": "Breakdown of the number of reviews that specified a given rating value. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews",
          "id": "property-reviews",
          "doc": "<p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Reviews[]",
          "owner": "Reviewable",
          "shortDoc": "List of reviews for this object. ...",
          "html_type": "Reviews[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews_count",
          "id": "property-reviews_count",
          "doc": "<p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "size",
          "id": "property-size",
          "doc": "<p>Original image size in bytes.</p>\n",
          "type": "Number",
          "owner": "Photos",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>List of tags for this photo.</p>\n",
          "type": "String[]",
          "owner": "Photos",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "title",
          "id": "property-title",
          "doc": "<p>Photo title, if specified.</p>\n",
          "type": "String",
          "owner": "Photos",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this photo object.</p>\n",
          "type": "Date",
          "owner": "Photos",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "urls",
          "id": "property-urls",
          "doc": "<p>A hash containing image URLs for the photo at different sizes.</p>\n\n<p>The URLs are only available after the photo has been processed (<code>processed</code> is\n<code>true</code>).</p>\n",
          "type": "Hash",
          "owner": "Photos",
          "shortDoc": "A hash containing image URLs for the photo at different sizes. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/Photos.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>User object for the photo's owner.</p>\n",
          "type": "Users",
          "owner": "Photos",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Photos objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Photos objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "photos/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Photo objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"photos/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Photo objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/photos/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Photo objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"photos/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Photo object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Photo objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"photos/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Photo objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosBatchDelete({\n    where: {'favorite_color': 'blue'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Photos objects to delete.\nIf not specified, all Photos objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Deletes Photos objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Photo objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "photos/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Photo objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"photos/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"photosCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Photo objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"photos/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Photo objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"photos/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Photo objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Create a photo using the given <code>photo</code> binary attachment. A <code>collection_name</code>\nor <code>collection_id</code> is optional. The response includes a <code>processed</code> flag which\nindicates if the photo has been resized and stored reliably in the\nArrowDB storage engine. This will initially be <code>false</code>.\nThe <code>md5</code> field gives the md5 sum of the file which can be used to verify file\nintegrity.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "photos/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.create({\n    photo: Titanium.Filesystem.getFile('photo.jpg')\n}, function (e) {\n    if (e.success) {\n        var photo = e.photos[0];\n        alert('Success:\\n' +\n            'id: ' + photo.id + '\\n' +\n            'filename: ' + photo.filename + '\\n' +\n            'size: ' + photo.size,\n            'updated_at: ' + photo.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt  -F \"file=@photo.jpg\" https://api.cloud.appcelerator.com/v1/photos/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\":\"4d51d4186f70952d4c000006\",\n        \"filename\":\"photo.jpg\",\n        \"size\":584344,\n        \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\":\"2011-02-08T23:39:04+0000\",\n        \"updated_at\":\"2011-02-08T23:39:04+0000\",\n        \"processed\":false\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSError* error = nil;\nNSData *fileData = [NSData dataWithContentsOfFile:@\"profile.png\" options:0 error: &amp;error];\nif (fileData == nil) {\n    // handle error\n    NSLog(@\"Failed to read file, error %@\", error);\n    return;\n}\n\n// Put photo data in a dictionary:\nNSDictionary *data = @{\n    @\"photo\": fileData,\n    @\"collection_name\": @\"profile_photos\"\n};\n\n[APSPhotos create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Uploaded!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSPhotos.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Uploaded!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;'),\n    fs = require('fs');\narrowDBApp.photosCreate({\n    photo: fs.createReadStream('photo.jpg')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.photos[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "photo",
              "doc": "<p>The attached binary file.</p>\n",
              "optional": false,
              "type": "FileUpload",
              "html_type": "FileUpload"
            },
            {
              "name": "title",
              "doc": "<p>Photo title.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "collection_name",
              "doc": "<p>Name of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "collection_id",
              "doc": "<p>ID of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags to associate with this photo.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User-defined fields to add to this photo. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the photo on behalf of.</p>\n\n<p>The current login user must be an application admin to create a photo on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_sizes",
              "doc": "<p>User-defined photo sizes. See <a href=\"#!/guide/photosizes#custom\">Photo Uploading &amp;\nSizes</a>.  Sizes be specified as a JSON object, or using a separate parameter for each\nsize. To specify a photo size called \"preview\" using JSON:</p>\n\n<pre><code>photo_size : { \"preview\" : \"120x120#\" }\n</code></pre>\n\n<p>To pass each size as a separate parameter, do <em>not</em> use the literal parameter name <code>photo_sizes</code>,\nbut add a parameter named <code>photo_sizes[</code><em>sizeName</em><code>]</code> for each custom photo\nsize. The previous example in this format looks like this:</p>\n\n<pre><code>\"photo_size[preview]\" : \"120x120#\"\n</code></pre>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "photo_sync_sizes[]",
              "doc": "<p>Synchronous photo sizes to upload. See <a href=\"#!/guide/photosizes\">Photo Uploading &amp; Resizing</a>.</p>\n\n<p>The literal name for this parameter is <code>photo_sync_sizes[]</code>. This parameter can be specified\nmultiple times, once for each photo size that must be created before the request returns.</p>\n\n<p>For example:</p>\n\n<pre><code>\"photo_sync_sizes[]=preview\"\n</code></pre>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "photos",
              "doc": "<p>Single-element array containing the newly-created photo object.</p>\n",
              "optional": true,
              "type": "Photos[]",
              "html_type": "Photos[]"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Create a photo using the given photo binary attachment. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a photo to which you have update access.</p>\n\n<p>An application admin can delete any photo object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "photos/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.remove({\n    photo_id: savedPhotoId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/photos/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;photo_id=4d8971236f7095514800000a\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deletePhoto\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"photo_id\": @\"4d8971236f7095514800000a\"};\n\n[APSPhotos remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Photo deleted!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo_id\", \"4d8971236f7095514800000a\");\n\ntry {\n    APSPhotos.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Toast.makeText(currentActivity, \"Photo removed!\", Toast.LENGTH_SHORT).show();\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosDelete({\n    photo_id: savedPhotoId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "photo_id",
              "doc": "<p>ID of the photo to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to delete the Photo object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to delete a Photo object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Deletes a photo to which you have update access. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Perform custom query of photos with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In addition to custom fields, here is a list of pre-defined fields\nthat can be queried and sorted:</p>\n\n<ul>\n<li><code>user_id: String</code>. Photo owner's user ID.</li>\n<li><code>title:  String</code>.  Photo title.</li>\n<li><code>tags_array: String</code>. Photo tags.</li>\n<li><code>ratings_average:  Number</code>.  Photo's average rating (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>ratings_count: Number</code>. Photo's total number of ratings (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>reviews_count: Number</code>. Photo's total number of reviews (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>created_at: Date</code>. Timestamp when the photo was created.</li>\n<li><code>updated_at: Date</code>. Timestamp when the photo was updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "photos/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of photos and checks the response.</p>\n\n<pre><code>Cloud.Photos.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        coordinates: {\n            '$nearSphere': [-122.23,37.12],\n            '$maxDistance': 0.00126\n        }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.photos.length);\n        for (var i = 0; i &lt; e.photos.length; i++) {\n            var photo = e.photos[i];\n            alert('id: ' + photo.id + '\\n' +\n                  'name: ' + photo.name + '\\n' +\n                  'filename: ' + photo.filename + '\\n' +\n                  'updated_at: ' + photo.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request -- If your app assigns a geo location to each photo, query photos with tag \"Appcelerator Cloud Services\" near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"tags_array\":\"Appcelerator Cloud Services\",\"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/photos/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryPhotos\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\":\"4d51d4186f70952d4c000006\",\n        \"filename\":\"photo.jpg\",\n        \"title\": \"Appcelerator Cloud Services\",\n        \"size\":584344,\n        \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\":\"2011-02-08T23:39:04+0000\",\n        \"updated_at\":\"2011-02-08T23:39:08+0000\",\n        \"processed\":true,\n        \"content_type\":\"image/jpeg\",\n        \"urls\": {\n          \"square\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_square.jpg\",\n          \"thumb\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_thumb.jpg\",\n          \"small\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_small.jpg\",\n          \"medium_500\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_500.jpg\",\n          \"medium_640\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_640.jpg\",\n          \"large\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_large.jpg\",\n          \"original\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_original.jpg\"\n        },\n        \"custom_fields\": {\n          \"coordinates\": [-122.23, 37.12] }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"where\": @{\n        @\"tags_array\":@\"Appcelerator Cloud Services\"\n    }\n};\n\n[APSPhotos query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu photos\", (unsigned long)((NSArray *)e.response[@\"photos\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n    JSONObject params = new JSONObject(\"{'tags_array': 'Appcelerator Cloud Services','coordinates': {'$nearSphere': [-122.23,37.12], '$maxDistance': 0.126}}\");\n    data.put(\"where\", params);\n\n    APSPhotos.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotos\", \"No results!\");\n                    } else {\n                        for (int i = 0; i &lt; photos.length(); i++) {\n                            JSONObject photo = photos.getJSONObject(i);\n                            Log.i(\"APSPhotos\", photo.getString(\"filename\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotos\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n} catch (JSONException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosQuery({\n    limit: 10,\n    where: {\n        coordinates: {\n            '$nearSphere': [-122.23,37.12],\n            '$maxDistance': 0.00126\n        }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.photos.forEach(function (photo) {\n            console.log(photo);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Photo object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "photos",
              "doc": "<p>List of photos matching the query parameters.</p>\n",
              "optional": true,
              "type": "Photos[]",
              "html_type": "Photos[]"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Perform custom query of photos with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "search",
          "deprecated": true,
          "id": "method-search",
          "doc": "<p>Searches for photos with sorting and paginating.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "This API is no longer supported."
            }
          },
          "url": "photos/search.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example searches for photos and checks the response.</p>\n\n<pre><code>Cloud.Photos.search({\n    user_id: savedUserId\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.photos.length);\n        for (var i = 0; i &lt; e.photos.length; i++) {\n            var photo = e.photos[i];\n            alert('id: ' + photo.id + '\\n' +\n                  'name: ' + photo.name + '\\n' +\n                  'filename: ' + photo.filename + '\\n' +\n                  'updated_at: ' + photo.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/search.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"searchPhotos\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 1\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"506f8146b8811092c3000294\",\n        \"filename\": \"Screen Shot 2012-10-05 at 5.09.38 PM.png\",\n        \"size\": 24915,\n        \"md5\": \"3fd3ac2d17b39ce7bfc42a730b2b5b5c\",\n        \"created_at\": \"2012-10-06T00:54:32+0000\",\n        \"updated_at\": \"2012-10-06T00:54:37+0000\",\n        \"processed\": true,\n        \"user\": {\n          \"id\": \"5012ffd4b881100692000947\",\n          \"first_name\": \"a\",\n          \"last_name\": \"aa\",\n          \"created_at\": \"2012-07-27T20:53:42+0000\",\n          \"updated_at\": \"2012-09-13T21:13:49+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2012-07-27T20:53:40+0000\",\n          \"username\": \"aaa\",\n          \"email\": \"aaa@cocoafish.com\",\n          \"admin\": \"false\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>[APSPhotos search:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu photos\", (unsigned long)((NSArray *)e.response[@\"photos\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSPhotos.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotos\", \"No results!\");\n                    } else {\n                        for (int i = 0; i &lt; photos.length(); i++) {\n                            JSONObject photo = photos.getJSONObject(i);\n                            Log.i(\"APSPhotos\", photo.getString(\"filename\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotos\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosSearch({\n    user_id: savedUserId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.photos.forEach(function (photo) {\n            console.log(photo);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "photos",
              "doc": "<p>List of photos matching the search parameters.</p>\n",
              "optional": true,
              "type": "Photos[]",
              "html_type": "Photos[]"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Searches for photos with sorting and paginating. ...",
          "html_meta": {
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>This API is no longer supported.</p>\n</p>\n        </div>\n"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Returns the information for the identified photo.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "photos/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.show({\n    photo_id: savedPhotoId\n}, function (e) {\n    if (e.success) {\n        var photo = e.photos[0];\n        alert('Success:\\n' +\n            'id: ' + photo.id + '\\n' +\n            'filename: ' + photo.filename + '\\n' +\n            'updated_at: ' + photo.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/photos/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;photo_id=4d8971236f7095514800000a\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showPhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\":\"4d51d4186f70952d4c000006\",\n        \"filename\":\"photo.jpg\",\n        \"size\":584344,\n        \"collection_name\":\"default\",\n        \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\":\"2011-02-08T23:39:04+0000\",\n        \"updated_at\":\"2011-02-08T23:39:08+0000\",\n        \"processed\":true,\n        \"content_type\":\"image/jpeg\",\n        \"urls\": {\n          \"square\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_square.jpg\",\n          \"thumb\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_thumb.jpg\",\n          \"small\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_small.jpg\",\n          \"medium_500\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_500.jpg\",\n          \"medium_640\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_medium_640.jpg\",\n          \"large\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_large.jpg\",\n          \"original\":\"http://storage.appcelerator.com/c3e1d292cb79ba7b9783d6cd45344719/photos/4d51d4186f70952d4c000006/photo_original.jpg\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"photo_id\": @\"4d8971236f7095514800000a\"};\n\n[APSPhotos show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *photos = e.response[@\"photos\"];\n        NSDictionary *photo = photos[0];\n        NSString *message = [NSString stringWithFormat:@\"filename: %@\", photo[@\"filename\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];                        \n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d7e62d6d0afbe04170000a4\");\n\ntry {\n    APSPhotos.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray photos = e.getResponse().getJSONArray(\"photos\");\n                    if (photos.length() &lt;= 0) {\n                        Log.i(\"APSPhotos\", \"No results!\");\n                    } else {\n                        JSONObject photo = photos.getJSONObject(0);\n                        Log.i(\"APSPhotos\", photo.getString(\"filename\"));\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPhotos\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e1) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosShow({\n    photo_id: savedPhotoId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.photos[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "photo_id",
              "doc": "<p>ID of the photo to show.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Photo object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "photos",
              "doc": "<p>Single-element array containing the identified photo.</p>\n",
              "optional": true,
              "type": "Photos[]",
              "html_type": "Photos[]"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Returns the information for the identified photo. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates the photo attachment, the collection that the photo belongs to, or\nother photo properties. When replacing the existing photo attachment with a\nnew one, <code>processing</code> will be set to <code>false</code>. However the existig URLs will\nremain valid until the new photo has been processed and uploaded to the\nAppcelerator Cloud Services storage cloud. At this time, the old URLs will be\nreplaced with the URLs of the newly processed photo.</p>\n\n<p>An application admin can update any Photo object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "photos/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a photo and checks the response.</p>\n\n<pre><code>Cloud.Photos.update({\n    photo_id: savedPhotoId,\n    photo: Titanium.Filesystem.getFile('newphoto.jpg'),\n    tags: 'mountains'\n}, function (e) {\n    if (e.success) {\n        var photo = e.photos[0];\n        alert('Success:\\n' +\n            'id: ' + photo.id + '\\n' +\n            'filename: ' + photo.filename + '\\n' +\n            'updated_at: ' + photo.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt  -X PUT -F \"photo=@photo.jpg\" -F \"photo_id=4d7e62d6d0afbe04170000a4\" https://api.cloud.appcelerator.com/v1/photos/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"updatePhoto\"\n  },\n  \"response\": {\n    \"photos\": [\n      {\n        \"id\": \"4e382fbed0afbe2495000006\",\n        \"filename\": \"photo.jpg\",\n        \"size\": 584344,\n        \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n        \"created_at\": \"2011-08-02T17:11:26+0000\",\n        \"updated_at\": \"2011-08-02T17:11:40+0000\",\n        \"processed\": false,\n        \"content_type\": \"image/jpeg\",\n        \"urls\": {\n          \"square_75\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_square_75.jpg\",\n          \"thumb_100\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_thumb_100.jpg\",\n          \"small_240\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_small_240.jpg\",\n          \"medium_500\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_medium_500.jpg\",\n          \"medium_640\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_medium_640.jpg\",\n          \"large_1024\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_large_1024.jpg\",\n          \"original\": \"http://storage.appcelerator.com/HlSgny4cAWpKU8Mpypr3WGlE/photos/c9/39/4e382fbed0afbe2495000007/photo_original.jpg\"\n        },\n        \"exif\": {\n          \"create_date\": \"2010-06-21T02:19:20+0000\",\n          \"width\": 1600,\n          \"height\": 1067,\n          \"shutter_speed\": \"1/60\",\n          \"make\": \"Canon\",\n          \"model\": \"Canon EOS 5D Mark II\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSError* error = nil;\nNSData *fileData = [NSData dataWithContentsOfFile:@\"profile2.png\" options:0 error:&amp;error];\nif (fileData == nil) {\n    // handle error\n    NSLog(@\"Failed to read file, error %@\", error);\n    return;\n}\n\nNSDictionary *data = @{\n    @\"photo_id\": @\"4d7e62d6d0afbe04170000a4\",\n    @\"photo\": fileData\n};\n\n[APSPhotos update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"photo_id\", \"4d7e62d6d0afbe04170000a4\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSPhotos.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Uploaded!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPhotos\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPhotos\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPhotos\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Photos/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.photosUpdate({\n    photo_id: savedPhotoId,\n    tags: 'mountains'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.photos[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "photo_id",
              "doc": "<p>ID of the photo to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to associate with this object, attached as a binary file.</p>\n",
              "optional": false,
              "type": "FileUpload",
              "html_type": "FileUpload"
            },
            {
              "name": "title",
              "doc": "<p>Photo title.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "collection_name",
              "doc": "<p>Name of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to. Replaces the\nexisting collection, if any.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "collection_id",
              "doc": "<p>ID of the <a href=\"#!/api/PhotoCollections\" rel=\"PhotoCollections\" class=\"docClass\">PhotoCollections</a> to add this photo to. Replaces the existing\ncollection, if any.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags to associate with this photo. Overwrites any\nexisting tags.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User-defined fields to add to this photo. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n\n<p>To delete an ACL, set <code>acl_name</code> or <code>acl_id</code> to the empty string.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this photo object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_sizes",
              "doc": "<p>User-defined photo sizes. See <a href=\"#!/guide/photosizes-section-custom-photo-sizes\">Photo Uploading &amp; Resizings</a>.\nSizes be specified as a JSON object, or using a separate parameter for each\nsize. To specify a photo size called \"preview\" using JSON:</p>\n\n<pre><code>photo_size : { \"preview\" : \"120x120#\" }\n</code></pre>\n\n<p>To pass each size as a separate parameter, do <em>not</em> use the literal parameter name <code>photo_sizes</code>,\nbut add a parameter named <code>photo_sizes[</code><em>sizeName</em><code>]</code> for each custom photo\nsize. The previous example in this format looks like this:</p>\n\n<pre><code>\"photo_size[preview]\" : \"120x120#\"\n</code></pre>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "photo_sync_sizes",
              "doc": "<p>Synchronous photo sizes to upload. See <a href=\"#!/guide/photosizes-section-custom-photo-sizes\">Photo Uploading &amp; Resizings</a>.</p>\n\n<p>The literal name for this parameter is <code>photo_sync_sizes[]</code>. This parameter can be specified\nmultiple times, once for each photo size that must be created before the request returns.</p>\n\n<p>For example:</p>\n\n<pre><code>\"photo_sync_sizes[]=preview\"\n</code></pre>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update the Photo object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to update a Photo object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "photos",
              "doc": "<p>Single-element array containing the updated  photo.</p>\n",
              "optional": true,
              "type": "Photos[]",
              "html_type": "Photos[]"
            }
          ],
          "owner": "Photos",
          "shortDoc": "Updates the photo attachment, the collection that the photo belongs to, or\nother photo properties. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Places",
    "doc": "<p>The Places API provides methods to create and manage places. A place can be specified using a street address or\ngeographic coordinates.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [
      "Reviewable"
    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "acls",
          "id": "property-acls",
          "doc": "<p>Single-element array containing the ACL associated with this object, if any.</p>\n",
          "type": "ACLs[]",
          "owner": "Places",
          "html_type": "ACLs[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "address",
          "id": "property-address",
          "doc": "<p>Address.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "city",
          "id": "property-city",
          "doc": "<p>City.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "country",
          "id": "property-country",
          "doc": "<p>Country.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "String/Hash",
          "owner": "Places",
          "shortDoc": "User defined fields. ...",
          "html_type": "String/Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "latitude",
          "id": "property-latitude",
          "doc": "<p>Latitude.</p>\n",
          "type": "Number",
          "owner": "Places",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "longitude",
          "id": "property-longitude",
          "doc": "<p>Longitude.</p>\n",
          "type": "Number",
          "owner": "Places",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Place name.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "phone_number",
          "id": "property-phone_number",
          "doc": "<p>Phone number.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>Primary photo for this place.</p>\n",
          "type": "Photos",
          "owner": "Places",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "postal_code",
          "id": "property-postal_code",
          "doc": "<p>Postal or ZIP code.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_average",
          "id": "property-ratings_average",
          "doc": "<p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Average rating for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_count",
          "id": "property-ratings_count",
          "doc": "<p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object that include a rating. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_summary",
          "id": "property-ratings_summary",
          "doc": "<p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Hash",
          "owner": "Reviewable",
          "shortDoc": "Breakdown of the number of reviews that specified a given rating value. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews",
          "id": "property-reviews",
          "doc": "<p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Reviews[]",
          "owner": "Reviewable",
          "shortDoc": "List of reviews for this object. ...",
          "html_type": "Reviews[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews_count",
          "id": "property-reviews_count",
          "doc": "<p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "state",
          "id": "property-state",
          "doc": "<p>State.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>List of tags for this object.</p>\n",
          "type": "String[]",
          "owner": "Places",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "twitter",
          "id": "property-twitter",
          "doc": "<p>Twitter ID.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Owner of this place object.</p>\n",
          "type": "Users",
          "owner": "Places",
          "html_type": "Users",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/Places.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "website",
          "id": "property-website",
          "doc": "<p>Website.</p>\n",
          "type": "String",
          "owner": "Places",
          "html_type": "String",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Places objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Places objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>Any <a href=\"#!/api/Places-property-photo\" rel=\"Places-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "places/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Place objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"places/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Place objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/places/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Place objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"places/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Place object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Place objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"places/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Place objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesBatchDelete({\n    where: {'state': 'TX'}\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.places.forEach(function (place) {\n            console.log(place);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Places objects to delete.\nIf not specified, all Places objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Places",
          "shortDoc": "Deletes Places objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Place objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "places/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Places objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"places/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/places/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"placesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Place objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"places/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Place objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"places/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Place objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Places",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a new place object.</p>\n\n<p>To create a place, you must specify at least one of the following:\naddress, city, state, postal_code, country, or geographical coordinates (longitude and latitude).</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "places/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new place and checks the response.</p>\n\n<pre><code>Cloud.Places.create({\n    name: 'Appcelerator HQ',\n    state: 'California',\n    website: 'http://www.appcelerator.com'\n}, function (e) {\n    if (e.success) {\n        var place = e.places[0];\n        alert('Success:\\n' +\n            'id: ' + place.id + '\\n' +\n            'name: ' + place.name + '\\n' +\n            'updated_at: ' + place.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"name=Appcelerator Cloud Services\" -F \"photo=@photo.jpg\" -F \"address=58 South Park Ave.\" -F \"city=San Francisco\" -F \"state=California\" -F \"postal_code=94107-1807\" -F \"country=United States\" -F \"latitude=37.782227\" -F \"longitude=-122.393159\" -F \"twitter=acs\" -F \"website=http://cocoafish.com\" https://api.cloud.appcelerator.com/v1/places/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createPlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n        \"id\":\"4d8910aed0afbe0e4e000006\",\n        \"name\":\"Appcelerator Cloud Services\",\n        \"created_at\":\"2011-03-22T21:12:14+0000\",\n        \"updated_at\":\"2011-03-22T21:12:14+0000\",\n        \"address\":\"58 South Park Ave.\",\n        \"city\":\"San Francisco\",\n        \"state\":\"California\",\n        \"postal_code\":\"94107-1807\",\n        \"country\":\"United States\",\n        \"website\":\"http://www.appcelerator.com\",\n        \"twitter\":\"acs\",\n        \"lat\":37.782227,\n        \"lng\":-122.393159,\n        \"photo\": {\n          \"id\":\"4dcf261cd0afbe1833000002\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-05-15T01:02:20+0000\",\n          \"updated_at\":\"2011-05-15T01:02:20+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"name\"   : @\"Party Pictures\",\n                         @\"state\"  : @\"California\",\n                         @\"website\": @\"http://www.appcelerator.com\"\n                      };\n[APSPlaces create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        NSDictionary *place = places[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                place[@\"id\"],\n                                place[@\"name\"],\n                                place[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal static Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"Appcelerator, Inc.\");\ndata.put(\"address\", \"440 N. Bernardo Avenue\");\ndata.put(\"city\", \"Mountain View\");\ndata.put(\"state\", \"California\");\ndata.put(\"latitude\", \"37.3890223\");\ndata.put(\"longitude\", \"-122.0502723\");\n\ntry {\n    APSPlaces.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created \")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesCreate({\n    name: 'Appcelerator HQ',\n    address: '440 N. Bernardo Avenue',\n    city: 'Mountain View',\n    state: 'California',\n    website: 'http://www.appcelerator.com'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.places[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Place name.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "address",
              "doc": "<p>Address.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "city",
              "doc": "<p>City.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "state",
              "doc": "<p>State.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "postal_code",
              "doc": "<p>Postal or ZIP code.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "country",
              "doc": "<p>Country.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "latitude",
              "doc": "<p>Latitude.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "longitude",
              "doc": "<p>Longitude.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "website",
              "doc": "<p>Website URL.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "twitter",
              "doc": "<p>Twitter ID.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "phone_number",
              "doc": "<p>Phone number.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for this place.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for this place.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this place.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create this place on behalf of.</p>\n\n<p>The current login user must be an application admin to create a place on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "places",
              "doc": "<p>Single-element array containing the newly-created place.</p>\n",
              "optional": true,
              "type": "Places[]",
              "html_type": "Places[]"
            }
          ],
          "owner": "Places",
          "shortDoc": "Creates a new place object. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a place.</p>\n\n<p>Only the user who created the place can delete it.</p>\n\n<p>The <a href=\"#!/api/Places-property-photo\" rel=\"Places-property-photo\" class=\"docClass\">primary photo</a> associated with the object is not deleted.</p>\n\n<p>An application admin can delete any Place object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "places/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a place and checks the response.</p>\n\n<pre><code>Cloud.Places.remove({\n    place_id: savedPlaceId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/places/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d51d4186f70952d4c000006\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deletePlace\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"place_id\"   : @\"savedPlaceID\"\n                      };\n[APSPlaces remove:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:nil\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d8910aed0afbe0e4e000006\");\n\ntry {\n    APSPlaces.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"Removed!\");\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesDelete({\n    place_id: arrowDBPlaceId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!'));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "place_id",
              "doc": "<p>ID of the place to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to delete the Place object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to delete a Place object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Places",
          "shortDoc": "Deletes a place. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs custom query of places with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>The following fields can be used for querying and sorting places:</p>\n\n<ul>\n<li><code>address</code> : String.  Place address.</li>\n<li><code>city</code> : String.  Place city.</li>\n<li><code>state</code> : String. Place state.</li>\n<li><code>country</code> : String.  Country.</li>\n<li><code>user_id</code> : String. ID of the user who created this place.</li>\n<li><code>google_cid</code> : Google Customer ID (CID) associated with this place.</li>\n<li><code>tags_array</code> : String. Search tags.</li>\n<li><code>lnglat</code> : <code>[longitude, latitude]</code>. The Place's default coordinates. You can also store\n custom coordinates in a custom field and query for those coordinates separately\n (see <a href=\"#!/guide/customfields-section-geographic-coordinates-in-custom-fields\">Geographic Coordinates in Custom Fields</a>).</li>\n<li><code>ratings_average:  Number</code>.  Place's average rating (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>ratings_count: Number</code>. Place's total number of ratings (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>reviews_count: Number</code>. Place's total number of reviews (see <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a>).</li>\n<li><code>created_at: Date</code>. Timestamp when the photo was created.</li>\n<li><code>updated_at: Date</code>. Timestamp when the photo was updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "places/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of places and checks the response.</p>\n\n<pre><code>Cloud.Places.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        lnglat: {\n            '$nearSphere': [-122.23,37.12],\n            '$maxDistance': 0.00126\n        }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.places.length);\n        for (var i = 0; i &lt; e.places.length; i++) {\n            var place = e.places[i];\n            alert('id: ' + place.id + '\\n' +\n                  'name: ' + place.name + '\\n' +\n                  'longitude: ' + place.longitude + '\\n' +\n                  'latitude: ' + place.latitude + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that queries places with name \"Appcelerator Cloud Services\" near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"name\":\"Appcelerator Cloud Services\",\"lnglat\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/places/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryPlaces\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"places\": [\n      {\n        \"id\":\"4d2e399b6f70951b6f000013\",\n        \"name\":\"Maya Restaurant\",\n        \"created_at\":\"2011-01-12T23:30:35+0000\",\n        \"updated_at\":\"2011-01-12T23:30:35+0000\",\n        \"address\":\"303 2nd Street\",\n        \"city\":\"San Francisco\",\n        \"state\":\"CA\",\n        \"country\":\"United States\",\n        \"phone\":\"(415) 543-2928\",\n        \"lat\":37.12,\n        \"lng\":-122.23\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\"   : @1,\n                         @\"per_page\"  : @20,\n                         @\"where\": {\n                                    @\"lnglat\": {\n                                        @\"$nearSphere\": @[@-122.23, @37.12],\n                                        @\"$maxDistance\": @0.00126\n                                    }\n                                }\n                      };\n[APSPlaces query:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        for (NSDictionary * place in places) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                    place[@\"id\"],\n                                    place[@\"name\"],\n                                    place[@\"updated_at\"]];\n\n            NSLog(@\"%@\", message);\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nJSONObject params = new JSONObject(\"{'name': 'Appcelerator, Inc.','lnglat':{'$nearSphere': [-122.23,37.12], '$maxDistance': 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSPlaces.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    places = e.getResponse().getJSONArray(\"places\");\n                    final ArrayList&lt;String&gt; objectsList = new ArrayList&lt;String&gt;();\n                    for (int i = 0; i &lt; places.length(); i++) {\n                        Log.i(\"APSPlaces\", places.getJSONObject(i).get(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        Log.i(\"APSPlaces\", \"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSPlaces\", e.toString());\n                }\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesQuery({\n    limit: 10,\n    where: {\n        lnglat: {\n            '$nearSphere': [-122.23,37.12],\n            '$maxDistance': 0.00126\n        }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.places.forEach(function(place) {\n            console.log(place);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Place object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "places",
              "doc": "<p>List of places matching the query criteria.</p>\n",
              "optional": true,
              "type": "Places[]",
              "html_type": "Places[]"
            }
          ],
          "owner": "Places",
          "shortDoc": "Performs custom query of places with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "search",
          "deprecated": true,
          "id": "method-search",
          "doc": "<p>Returns the list of places that have been added to the app, sorted by search\nrelevancy.</p>\n\n<p>Optionally, <code>latitude</code> and <code>longitude</code> can be given to return the list of\nplaces starting from a particular location. To bound the results within a\ncertain radius (in km) from the starting coordinates, add the <code>distance</code>\nparameter. <code>q</code> can be given to search by place name.</p>\n\n<p>If you have provided a starting latitude and longitude for place search, each\nresult will return a distance to the starting point in km.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "Use the {@link Places#query} method instead with the `$text` query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.\n"
            }
          },
          "url": "places/search.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example searches for places and checks the response.</p>\n\n<pre><code>Cloud.Places.search({\n    latitude: lat,\n    longitude: lon\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.places.length);\n        for (var i = 0; i &lt; e.places.length; i++) {\n            var place = e.places[i];\n            alert('id: ' + place.id + '\\n' +\n                  'name: ' + place.name + '\\n' +\n                  'longitude: ' + place.longitude + '\\n' +\n                  'latitude: ' + place.latitude + '\\n' +\n                  'updated_at: ' + place.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/places/search.json?key=&lt;YOUR_APP_KEY&gt;&amp;latitude=37.743722&amp;longitude=-122.393159&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchPlaces\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":2\n  },\n  \"response\": {\n    \"places\": [\n      {\n        \"id\":\"4d2e399b6f70951b6f000013\",\n        \"name\":\"Maya Restaurant\",\n        \"created_at\":\"2011-01-12T23:30:35+0000\",\n        \"updated_at\":\"2011-01-12T23:30:35+0000\",\n        \"address\":\"303 2nd Street\",\n        \"city\":\"San Francisco\",\n        \"state\":\"CA\",\n        \"country\":\"United States\",\n        \"phone\":\"(415) 543-2928\",\n        \"latitude\": 37.743722,\n        \"longitude\": -122.421978,\n        \"distance\": 2.53\n      },\n      {\n        \"id\":\"4d2e45ab6f70951b6f00003d\",\n        \"name\":\"Farolito Taqueria\",\n        \"created_at\":\"2011-01-13T00:22:03+0000\",\n        \"updated_at\":\"2011-01-13T00:22:03+0000\",\n        \"address\":\"2779 Mission Street\",\n        \"city\":\"San Francisco\",\n        \"state\":\"CA\",\n        \"country\":\"United States\",\n        \"phone\":\"(415) 824-7877\",\n        \"latitude\": 37.782227,\n        \"longitude\": -122.393159,\n        \"distance\": 4.28\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"latitude\"   : latitude,\n                         @\"longitude\"  : longitude\n                      };\n[APSPlaces search:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        for (NSDictionary * place in places) {\n            NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                    place[@\"id\"],\n                                    place[@\"name\"],\n                                    place[@\"updated_at\"]];\n\n            NSLog(@\"%@\", message);\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\n// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"latitude\", \"37.3890223\");\ndata.put(\"longitude\", \"-122.0502723\");\n\ntry {\n    APSPlaces.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray places = e.getResponse().getJSONArray(\"places\");\n                    for (int i = 0; i &lt; places.length(); i++) {\n                        Log.i(\"APSPlaces\", places.getJSONObject(i).getString(\"name\"));\n                    }\n                    if (objectsList.size() &lt;= 0) {\n                        objectsList.add(\"No Results!\");\n                    }\n                } catch (JSONException e1) {\n                    Log.e(\"APSPlaces\", e.toString());\n                }\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesSearch({\n    latitude: lat,\n    longitude: lon\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.places.forEach(function(place) {\n            console.log(place);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "latitude",
              "doc": "<p>Latitude to center search on.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "longitude",
              "doc": "<p>Longitude to center search on.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "distance",
              "doc": "<p>Distance in km to search from the identified center point.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "q",
              "doc": "<p>Space-separated list of keywords used to perform full text search on place name and tags.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "places",
              "doc": "<p>List of places matching the search criteria.</p>\n",
              "optional": true,
              "type": "Places[]",
              "html_type": "Places[]"
            }
          ],
          "owner": "Places",
          "shortDoc": "Returns the list of places that have been added to the app, sorted by search\nrelevancy. ...",
          "html_meta": {
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>Use the <a href=\"#!/api/Places-method-query\" rel=\"Places-method-query\" class=\"docClass\">query</a> method instead with the <code>$text</code> query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.</p>\n</p>\n        </div>\n"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Returns information for the identified place.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "places/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a place and checks the response.</p>\n\n<pre><code>Cloud.Places.show({\n    place_id: savedPlaceId\n}, function (e) {\n    if (e.success) {\n        var place = e.places[0];\n        alert('Success:\\n' +\n            'id: ' + place.id + '\\n' +\n            'name: ' + place.name + '\\n' +\n            'updated_at: ' + place.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/places/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;place_id=4d6f13e96f70953608000012\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showPlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n          \"id\":\"4d6f13e96f70953608000012\",\n          \"name\":\"Maya Restaurant\",\n          \"created_at\":\"2011-03-03T04:07:05+0000\",\n          \"updated_at\":\"2011-03-03T04:07:05+0000\",\n          \"address\":\"303 2nd Street\",\n          \"city\":\"San Francisco\",\n          \"state\":\"CA\",\n          \"country\":\"United States\",\n          \"phone\":\"(415) 543-2928\",\n          \"lat\":37.784732,\n          \"lng\":-122.395441\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"place_id\"   : @\"savedPlaceID\"\n                      };\n[APSPlaces show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        NSDictionary *place = places[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                place[@\"id\"],\n                                place[@\"name\"],\n                                place[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\n// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", 4d6f13e96f70953608000012);\n\ntry {\n    APSPlaces.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSPlaces\", e.getResponseString());\n                } catch (APSCloudException e1) {\n                    Log.e(\"APSPlaces\", e.toString());\n                }\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesShow({\n    place_id: savedPlaceId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.places[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "place_id",
              "doc": "<p>ID of the place to show.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the identified object, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Place object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "places",
              "doc": "<p>Single-element array containing the identified place object.</p>\n",
              "optional": true,
              "type": "Places[]",
              "html_type": "Places[]"
            }
          ],
          "owner": "Places",
          "shortDoc": "Returns information for the identified place. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Any of the parameters used to <a href=\"#!/api/Places-method-create\" rel=\"Places-method-create\" class=\"docClass\">Create a Place</a> can\nbe used to update it as well. Only the user that created the place can update\nit.</p>\n\n<p>An application admin can update any place object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "places/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a place and checks the response.</p>\n\n<pre><code>Cloud.Places.update({\n    place_id: savedPlaceId,\n    city: 'Mountain View'\n}, function (e) {\n    if (e.success) {\n        var place = e.places[0];\n        alert('Success:\\n' +\n            'id: ' + place.id + '\\n' +\n            'name: ' + place.name + '\\n' +\n            'updated_at: ' + place.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"address=210 Market Street\" -F \"place_id=4d8910aed0afbe0e4e000006\" https://api.cloud.appcelerator.com/v1/places/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updatePlace\"\n  },\n  \"response\": {\n    \"places\": [\n      {\n          \"id\":\"4d8910aed0afbe0e4e000006\",\n          \"name\":\"Appcelerator Cloud Services\",\n          \"created_at\":\"2011-03-22T21:12:14+0000\",\n          \"updated_at\":\"2011-03-24T18:12:01+0000\",\n          \"address\":\"201 Market St.\",\n          \"city\":\"San Francisco\",\n          \"state\":\"California\",\n          \"country\":\"United States\",\n          \"website\":\"appcelerator.com\",\n          \"twitter\":\"acs\",\n          \"latitude\":37.782227,\n          \"longitude\":-122.393159\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"place_id\" : @\"savedPlaceID\",\n                         @\"city\"     : @\"Mountain View\"\n                      };\n[APSPlaces update:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *places = e.response[@\"places\"];\n        NSDictionary *place = places[0];\n        NSString *message = [NSString stringWithFormat:@\"id : %@\\n Name : %@\\nUpdated at : %@\\n\",\n                                place[@\"id\"],\n                                place[@\"name\"],\n                                place[@\"updated_at\"]];\n\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                    message:message\n                                   delegate:nil \n                          cancelButtonTitle:@\"OK\" \n                          otherButtonTitles:nil] show];\n\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\n// Create dictionary of parameters to be passed with the request\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"place_id\", \"4d8910aed0afbe0e4e000006\");\ndata.put(\"name\", \"Cocoafish, Inc.\");\ndata.put(\"city\", \"Beijing\");\n\ntry {\n    APSPlaces.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPlaces\", e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSPlaces\", e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPlaces\", e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Places/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.placesUpdate({\n    place_id: savedPlaceId,\n    country: 'United States of America'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.places[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "place_id",
              "doc": "<p>ID of the place to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "name",
              "doc": "<p>Place name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "address",
              "doc": "<p>Address.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "city",
              "doc": "<p>City.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "state",
              "doc": "<p>State.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "postal_code",
              "doc": "<p>Postal or ZIP code.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "country",
              "doc": "<p>Country.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "latitude",
              "doc": "<p>Latitude.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "longitude",
              "doc": "<p>Longitude.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "website",
              "doc": "<p>Website URL.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "twitter",
              "doc": "<p>Twitter ID.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "phone_number",
              "doc": "<p>Phone number.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for this place.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for this place.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this place.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this place object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_id",
              "doc": "<p>User ID to assign as the owner of the place object. The current user must have write\naccess to the object in order to update the owner.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update the Place object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to update a Place object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "places",
              "doc": "<p>Single-element array containing the updated object.</p>\n",
              "optional": true,
              "type": "Places[]",
              "html_type": "Places[]"
            }
          ],
          "owner": "Places",
          "shortDoc": "Any of the parameters used to Create a Place can\nbe used to update it as well. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Posts",
    "doc": "<p>A Post represents a wall post or similar social media content.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [
      "Reviewable"
    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "acls",
          "id": "property-acls",
          "doc": "<p>Single-element array containing the object's ACL, if any.</p>\n",
          "type": "ACLs[]",
          "owner": "Posts",
          "html_type": "ACLs[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": false,
          "meta": {
            "[:hide]": false
          },
          "name": "content",
          "id": "property-content",
          "doc": "<p>Text content of the post.</p>\n",
          "type": "String",
          "owner": "Posts",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this object.</p>\n",
          "type": "Date",
          "owner": "Posts",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "String/Hash",
          "owner": "Posts",
          "shortDoc": "User defined fields. ...",
          "html_type": "String/Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "event",
          "id": "property-event",
          "doc": "<p>Event this post belongs to.</p>\n",
          "type": "String",
          "owner": "Posts",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated ID for this object.</p>\n",
          "type": "String",
          "owner": "Posts",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>Primary photo for this post.</p>\n",
          "type": "Photos",
          "owner": "Posts",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_average",
          "id": "property-ratings_average",
          "doc": "<p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Average rating for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_count",
          "id": "property-ratings_count",
          "doc": "<p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object that include a rating. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_summary",
          "id": "property-ratings_summary",
          "doc": "<p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Hash",
          "owner": "Reviewable",
          "shortDoc": "Breakdown of the number of reviews that specified a given rating value. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews",
          "id": "property-reviews",
          "doc": "<p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Reviews[]",
          "owner": "Reviewable",
          "shortDoc": "List of reviews for this object. ...",
          "html_type": "Reviews[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews_count",
          "id": "property-reviews_count",
          "doc": "<p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>List of tags for this object.</p>\n",
          "type": "String[]",
          "owner": "Posts",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "title",
          "id": "property-title",
          "doc": "<p>Title of the post.</p>\n",
          "type": "String",
          "owner": "Posts",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this object.</p>\n",
          "type": "Date",
          "owner": "Posts",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/Posts.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>User who created this post.</p>\n",
          "type": "String",
          "owner": "Posts",
          "html_type": "String",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Posts objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Posts objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>Any <a href=\"#!/api/Posts-property-photo\" rel=\"Posts-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "posts/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Post objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"posts/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Post objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/posts/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Post objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"posts/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Post object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Post objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"posts/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Post objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.postsBatchDelete({\n    where: {\n        'ratings_count': {'$lt': 10}\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Posts objects to delete.\nIf not specified, all Posts objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Posts",
          "shortDoc": "Deletes Posts objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Post objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "posts/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Post objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"posts/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/posts/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"postsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Post objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"posts/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Post objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"posts/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.postsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Post objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Posts",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Create a post, which can be a Facebook-style wall post or Digg-style\nsubmission with content.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "posts/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new post and checks the response.</p>\n\n<pre><code>Cloud.Posts.create({\n    content: 'Man Walks On Moon',\n    title: 'News of the day',\n    photo: Titanium.Filesystem.getFile('photo.jpg')\n}, function (e) {\n    if (e.success) {\n        var post = e.posts[0];\n        alert('Success:\\n' +\n            'id: ' + post.id + '\\n' +\n            'title: ' + post.title + '\\n' +\n            'content: ' + post.content + '\\n' +\n            'updated_at: ' + post.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"photo=@photo.jpg\" -F \"content=Buzz at Appcelerator Cloud Services\" -F \"title=Today's News\" https://api.cloud.appcelerator.com/v1/posts/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"createPost\"\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a252d9ca724676000003\",\n        \"title\": \"Today's News\",\n        \"created_at\": \"2011-07-30T06:18:58+0000\",\n        \"updated_at\": \"2011-07-30T06:18:58+0000\",\n        \"content\": \"Post Body\",\n        \"reviews_count\": 0,\n        \"ratings_average\": 0.0,\n        \"ratings_summary\": {\n        },\n        \"user\": {\n          \"id\": \"4e33a251d9ca724676000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:18:57+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a252d9ca724676000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:18:58+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"processed\": false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"title\": @\"Appcelerator Cloud Services buzz\",\n    @\"content\": @\"More users joined Appcelerator Cloud Services\"\n};\n\n[APSPosts create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Created post!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"title\", \"Today's News\");\ndata.put(\"content\", \"Buzz at Appcelerator Cloud Services\");\n\ntry {\n    APSPosts.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;'),\n    fs = require('fs');\narrowDBApp.postsCreate({\n    content: 'Man Walks On Moon',\n    title: 'News of the day',\n    photo: fs.createReadStream('photo.jpg')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.posts[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "content",
              "doc": "<p>Text content of the post.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "title",
              "doc": "<p>Title of the post.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> this post belongs to.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for this object.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for this object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the object on behalf of.</p>\n\n<p>The current login user must be an application admin to create an object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "posts",
              "doc": "<p>Single-element array containing the newly-created post.</p>\n",
              "optional": true,
              "type": "Posts[]",
              "html_type": "Posts[]"
            }
          ],
          "owner": "Posts",
          "shortDoc": "Create a post, which can be a Facebook-style wall post or Digg-style\nsubmission with content. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes the post with the given <code>id</code>. The original submitter can always delete\na post.</p>\n\n<p>The <a href=\"#!/api/Posts-property-photo\" rel=\"Posts-property-photo\" class=\"docClass\">primary photo</a> associated with the object is not deleted.</p>\n\n<p>An application admin can delete any Post object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "posts/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a post and checks the response.</p>\n\n<pre><code>Cloud.Posts.remove({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/posts/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4d86d26ed0afbe107400000f\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deletePost\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"post_id\":@\"4d86d26ed0afbe107400000f\"\n};\n\n[APSPosts remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Removed!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4d86d26ed0afbe107400000f\");\n\ntry {\n    APSPosts.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.postsDelete({\n    post_id: savedPostId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>ID of the post to delete.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to delete the Post object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to delete a Post object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Posts",
          "shortDoc": "Deletes the post with the given id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs custom query of posts with sorting and pagination. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In addition to custom fields, the following pre-defined fields in posts\nthat can be queried and sorted:</p>\n\n<ul>\n<li><code>user_id</code> : <code>String</code>. Post owner's user ID.</li>\n<li><code>title</code> : <code>String</code>. Post title.</li>\n<li><code>event_id</code> : <code>String</code>. ID of the event posts belong to.</li>\n<li><code>tags_array</code> : <code>String</code>. Post tags.</li>\n<li><code>ratings_average</code> : <code>Number</code>. Post's average rating. See {@Reviews}.</li>\n<li><code>ratings_count</code> : <code>Number</code>. Post's total number of ratings. See {@Reviews}.</li>\n<li><code>reviews_count</code> : <code>Number</code>. Post's total number of reviews. See {@Reviews}.</li>\n<li><code>created_at</code> : <code>Date</code>. Timestamp when the post was created.</li>\n<li><code>updated_at</code> : <code>Date</code>. Timestamp when the post was last updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "posts/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of posts and checks the response.</p>\n\n<pre><code>Cloud.Posts.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        reviews_count: { '$gt': 1.0 }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.posts.length);\n        for (var i = 0; i &lt; e.posts.length; i++) {\n            var post = e.posts[i];\n            alert('id: ' + post.id + '\\n' +\n                'id: ' + post.id + '\\n' +\n                'title: ' + post.title + '\\n' +\n                'content: ' + post.content + '\\n' +\n                'updated_at: ' + post.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request: If your app assigns a geo location to each post, query posts with average rating greater than 7 near latitude 37.12, longitude -122.23 within 5 miles</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"ratings_average\":{\"$gt\":7.0},\"coordinates\":{\"$nearSphere\":[-122.23,37.12], \"$maxDistance\" : 0.00126}}' \"https://api.cloud.appcelerator.com/v1/posts/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"queryPosts\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a252d9ca724676000003\",\n        \"title\": \"Post title\",\n        \"created_at\": \"2011-07-30T06:18:58+0000\",\n        \"updated_at\": \"2011-07-30T06:18:58+0000\",\n        \"content\": \"Post Body\",\n        \"reviews_count\": 10,\n        \"ratings_average\": 7.5,\n        \"ratings_count\" : 10,\n        \"ratings_summary\": {\n            \"10\": 5,\n            \"5\" : 5\n        },\n        \"user\": {\n          \"id\": \"4e33a251d9ca724676000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:18:57+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a252d9ca724676000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:18:58+0000\",\n          \"updated_at\": \"2011-07-30T06:18:58+0000\",\n          \"processed\": true\n        },\n    \"custom_fields\": {\n      \"coordinates\": [-122.23, 37.12] }\n    }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"where\": @{\n        @\"ratings_average\":@{\n            @\"$gt\":@7.0\n        }\n    }\n};\n\n[APSPosts query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu posts\", (unsigned long)((NSArray *)e.response[@\"posts\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n    JSONObject params = new JSONObject(\"{'ratings_average': {'$gt': 7.0}}\");\n    data.put(\"where\", params);\n\n    APSPosts.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray posts = e.getResponse().getJSONArray(\"posts\");\n                    if (posts.length() &lt;= 0) {\n                        Log.i(\"APSPosts\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; posts.length(); i++) {\n                            JSONObject review = posts.getJSONObject(i);\n                            Log.i(\"APSPosts\", posts.getString(\"title\") + \":\" + posts.getString(\"content\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPosts\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + e.toString());\n} catch (JSONException e) {\n    Log.e(\"APSPosts\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.postsQuery({\n    limit: 10,\n    where: {\n        reviews_count: { '$gt': 1.0 }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.posts.forEach(function(post) {\n            console.log(post);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Post object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "posts",
              "doc": "<p>List of posts matching the query parameters.</p>\n",
              "optional": true,
              "type": "Posts[]",
              "html_type": "Posts[]"
            }
          ],
          "owner": "Posts",
          "shortDoc": "Performs custom query of posts with sorting and pagination. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Returns  the post with the given <code>id</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "posts/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a post and checks the response.</p>\n\n<pre><code>Cloud.Posts.show({\n    post_id: savedPostId\n}, function (e) {\n    if (e.success) {\n        var post = e.posts[0];\n        alert('Success:\\n' +\n            'id: ' + post.id + '\\n' +\n            'title: ' + post.title + '\\n' +\n            'content: ' + post.content + '\\n' +\n            'updated_at: ' + post.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/posts/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4e33a5b7d9ca7246ba000003&amp;show_user_like=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"showPosts\"\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a5b7d9ca7246ba000003\",\n        \"title\": \"Post title\",\n        \"created_at\": \"2011-07-30T06:33:27+0000\",\n        \"current_user_liked\": true,                        \n        \"updated_at\": \"2011-07-30T06:33:27+0000\",\n        \"content\": \"Post Body\",\n        \"reviews_count\": 10,\n        \"ratings_average\": 7.5,\n        \"ratings_summary\": {\n                 \"10\": 5,\n                 \"5\" : 5\n        },                        \n        \"user\": {\n          \"id\": \"4e33a5b6d9ca7246ba000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:33:26+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a5b7d9ca7246ba000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:33:27+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"processed\": false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"status_id\": @\"4e33a5b7d9ca7246ba000003\"};\n[APSPosts show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *posts = e.response[@\"posts\"];\n        NSDictionary *post = posts[0];\n        NSString *message = [NSString stringWithFormat:@\"message: %@\", post[@\"content\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a5b7d9ca7246ba000003\");\n\ntry {\n    APSPosts.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Log.i(\"APSPosts\", e.getResponseString());\n                }\n                catch (APSCloudException err) {\n                    Log.e(\"APSPosts\", \"ERROR: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + err.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.postsShow({\n    post_id: savedPostId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.posts[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>Post ID to show.</p>\n\n<p>Either <code>post_id</code> <strong>or</strong> <code>post_ids</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "post_ids",
              "doc": "<p>Comma-separated list of post IDs.</p>\n\n<p>Either <code>post_id</code> <strong>or</strong> <code>post_ids</code> must be specified.</p>\n",
              "optional": true,
              "type": "String[]",
              "html_type": "String[]"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the identified objects, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Post object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "posts",
              "doc": "<p>List of identified posts.</p>\n",
              "optional": true,
              "type": "Posts[]",
              "html_type": "Posts[]"
            }
          ],
          "owner": "Posts",
          "shortDoc": "Returns  the post with the given id. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates the identified post. The original submitter can always update\na post.</p>\n\n<p>An application admin can update any Post object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "posts/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a post and checks the response.</p>\n\n<pre><code>Cloud.Posts.update({\n    post_id: savedPostId,\n    title: 'Lunar Eclipse'\n}, function (e) {\n    if (e.success) {\n        var post = e.posts[0];\n        alert('Success:\\n' +\n            'id: ' + post.id + '\\n' +\n            'title: ' + post.title + '\\n' +\n            'content: ' + post.content + '\\n' +\n            'updated_at: ' + post.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"post_id=4e33a5b7d9ca7246ba000003\" -F \"title=Updated Post Title\" https://api.cloud.appcelerator.com/v1/posts/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"updatePost\"\n  },\n  \"response\": {\n    \"posts\": [\n      {\n        \"id\": \"4e33a5b7d9ca7246ba000003\",\n        \"title\": \"Updated Post Title\",\n        \"created_at\": \"2011-07-30T06:33:27+0000\",\n        \"updated_at\": \"2011-07-30T06:33:27+0000\",\n        \"content\": \"Updated Post Body\",\n        \"reviews_count\": 10,\n        \"ratings_average\": 7.5,\n        \"ratings_summary\": {\n            \"10\": 5,\n            \"5\" : 5\n        },\n        \"user\": {\n          \"id\": \"4e33a5b6d9ca7246ba000002\",\n          \"first_name\": \"Bob\",\n          \"last_name\": \"Dude\",\n          \"created_at\": \"2011-07-30T06:33:26+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"username\": \"bob\",\n          \"email\": \"bob@dude.com\"\n        },\n        \"photo\": {\n          \"id\": \"4e33a5b7d9ca7246ba000004\",\n          \"filename\": \"photo.jpg\",\n          \"size\": 584344,\n          \"md5\": \"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\": \"2011-07-30T06:33:27+0000\",\n          \"updated_at\": \"2011-07-30T06:33:27+0000\",\n          \"processed\": false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"post_id\": @\"4e33a5b7d9ca7246ba000003\",\n    @\"title\":@\"Updated Post Title\"\n};\n\n[APSPosts update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a5b7d9ca7246ba000003\");\ndata.put(\"title\", \"Updated Post Title\");\n\ntry {\n    APSPosts.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONObject post = e.getResponse().getJSONArray(\"posts\").getJSONObject(0);\n                    Log.i(\"APSPosts\", posts.getString(\"title\") + \" \" + posts.getString(\"content\"));\n                } catch (JSONException err) {\n                    Log.e(\"APSPosts\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPosts\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPosts\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPosts\", \"ERROR: \" + err.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Posts/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.postsUpdate({\n    post_id: savedPostId,\n    title: 'Lunar Eclipse'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.posts[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>ID of the post to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "content",
              "doc": "<p>Text content of the post.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "title",
              "doc": "<p>Title of the post.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> this post belongs to.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for this object.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for this object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n\n<p>To remove an ACL, set <code>acl_name</code> or <code>acl_id</code> to an empty string.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n\n<p>To remove an ACL, set <code>acl_name</code> or <code>acl_id</code> to an empty string.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update the Post object on behalf of. The user must be the creator of the object.</p>\n\n<p>The current login user must be an application admin to update a Post object on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "posts",
              "doc": "<p>Single-element array containing the updated post.</p>\n",
              "optional": true,
              "type": "Posts[]",
              "html_type": "Posts[]"
            }
          ],
          "owner": "Posts",
          "shortDoc": "Updates the identified post. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PushLogDetails",
    "doc": "<p>The data type for objects returned in the response to a <a href=\"#!/api/Logs-method-querypushlogdetails\" rel=\"Logs-method-querypushlogdetails\" class=\"docClass\">Logs.querypushlogdetails</a> request.\nAny error logged for a specific push notification is contained in the PushLogDetails object's <code>error_message</code> field.\nThe <code>error_message</code> field is only present if an error was logged for that item.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
      "pseudo": true
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "android_types",
          "id": "property-android_types",
          "doc": "<p>List of Android push notification object types, and the number of notifications\ndelivered using each type. Possible key names are the following:</p>\n\n<ul>\n<li>GCM: Google Cloud Messaging service for Android</li>\n</ul>\n\n",
          "type": "Hash[]",
          "owner": "PushLogDetails",
          "shortDoc": "List of Android push notification object types, and the number of notifications\ndelivered using each type. ...",
          "html_type": "Hash[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "app_id",
          "id": "property-app_id",
          "doc": "<p>Application ID.</p>\n",
          "type": "String",
          "owner": "PushLogDetails",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "channel",
          "id": "property-channel",
          "doc": "<p>Name of the channel to which the notification was delivered.</p>\n",
          "type": "String",
          "owner": "PushLogDetails",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Timestamp when the log item was created.</p>\n",
          "type": "Date",
          "owner": "PushLogDetails",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "device_count",
          "id": "property-device_count",
          "doc": "<p>The total number of devices to which the notification was delivered.</p>\n",
          "type": "Number",
          "owner": "PushLogDetails",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "error_message",
          "id": "property-error_message",
          "doc": "<p>The error, if any, associated with the push notification. For a list of possible errors,\nsee <a href=\"#!/guide/troubleshooting-section-push-notification-error-messages\">Push Notification Error Message</a>.</p>\n",
          "type": "String",
          "owner": "PushLogDetails",
          "shortDoc": "The error, if any, associated with the push notification. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Identifes the push notification log item.</p>\n",
          "type": "String",
          "owner": "PushLogDetails",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "locked_at",
          "id": "property-locked_at",
          "doc": "<p>Timestamp when the log item was locked.</p>\n",
          "type": "Date",
          "owner": "PushLogDetails",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "pem_sent_at",
          "id": "property-pem_sent_at",
          "doc": "<p>Timestamp when log item was inserted by Platform event system.</p>\n",
          "type": "Date",
          "owner": "PushLogDetails",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "push_id",
          "id": "property-push_id",
          "doc": "<p>ID of push notification log item that was queried.</p>\n",
          "type": "String",
          "owner": "PushLogDetails",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "send_status",
          "id": "property-send_status",
          "doc": "<p>A number that indicates the notification's status, and can be one of the\nfollowing values:</p>\n\n<ul>\n<li>0 - Sending</li>\n<li>1 - Success</li>\n<li>2 - Fail</li>\n<li>3 - Over Due</li>\n</ul>\n\n",
          "type": "Number",
          "owner": "PushLogDetails",
          "shortDoc": "A number that indicates the notification's status, and can be one of the\nfollowing values:\n\n\n0 - Sending\n1 - Success\n...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "types",
          "id": "property-types",
          "doc": "<p>A single-element Array containing an object with possible field names \"android\"\nand \"ios\". The value of each field indicates the number of Android and iOS devices, respectively,\nto which the push notification was delivered.</p>\n",
          "type": "Hash[]",
          "owner": "PushLogDetails",
          "shortDoc": "A single-element Array containing an object with possible field names \"android\"\nand \"ios\". ...",
          "html_type": "Hash[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogDetails/PushLogDetails.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Timestamp when log item was updated.</p>\n",
          "type": "Date",
          "owner": "PushLogDetails",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "html_meta": {
      "pseudo": [
        "<p class='private'><strong>NOTE</strong> ",
        "This is an abstract type. Any object meeting this description can be used ",
        "where this type is used.</p>"
      ]
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PushLogs",
    "doc": "<p>The data type for objects returned by <a href=\"#!/api/Logs-method-querypushlogs\" rel=\"Logs-method-querypushlogs\" class=\"docClass\">Logs.querypushlogs</a>. To get details about a specific\nnotifiction log item, call <a href=\"#!/api/Logs-method-querypushlogdetails\" rel=\"Logs-method-querypushlogdetails\" class=\"docClass\">Logs.querypushlogdetails</a> passing it the value of\n<a href=\"#!/api/PushLogs-property-_id\" rel=\"PushLogs-property-_id\" class=\"docClass\">PushLogs._id</a>.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
      "pseudo": true
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "_id",
          "id": "property-_id",
          "doc": "<p>Log item ID.</p>\n",
          "type": "String",
          "owner": "PushLogs",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "app_id",
          "id": "property-app_id",
          "doc": "<p>Application ID.</p>\n",
          "type": "String",
          "owner": "PushLogs",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "channel",
          "id": "property-channel",
          "doc": "<p>Name of the channel to which the push notification was delivered.</p>\n",
          "type": "String",
          "owner": "PushLogs",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Date that push notification was created.</p>\n",
          "type": "Date",
          "owner": "PushLogs",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "payload",
          "id": "property-payload",
          "doc": "<p>Notification payload.</p>\n",
          "type": "String",
          "owner": "PushLogs",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "push_schedule_id",
          "id": "property-push_schedule_id",
          "doc": "<p>ID of the <a href=\"#!/api/PushSchedules\" rel=\"PushSchedules\" class=\"docClass\">PushSchedules</a> used to create the push notification (only present if the push notification\nwas created by a PushSchedule).</p>\n",
          "type": "String",
          "owner": "PushLogs",
          "shortDoc": "ID of the PushSchedules used to create the push notification (only present if the push notification\nwas created by a ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "scheduled_at",
          "id": "property-scheduled_at",
          "doc": "<p>Date that push notification was scheduled (only present if the push notification\nwas created by a schedule.)</p>\n",
          "type": "Date",
          "owner": "PushLogs",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "to_ids",
          "id": "property-to_ids",
          "doc": "<p>Array of User IDs that push notification was delivered to.</p>\n",
          "type": "Array",
          "owner": "PushLogs",
          "html_type": "Array",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushLogs/PushLogs.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Date that push notification was updated.</p>\n",
          "type": "Date",
          "owner": "PushLogs",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "html_meta": {
      "pseudo": [
        "<p class='private'><strong>NOTE</strong> ",
        "This is an abstract type. Any object meeting this description can be used ",
        "where this type is used.</p>"
      ]
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PushNotifications",
    "doc": "<p>The Push Notifications API lets you send push notifications to your users who are on iOS and\nAndroid Devices. You can also send a system push notification to all users from the Admin\nConsole.</p>\n\n<p>Please refer to the Push Notifications sections of the <a href=\"#!/guide/android\">Android SDK guide</a>\nor the <a href=\"#!/guide/ios\">iOS SDK guide</a> to set up your app for push notifications to\nAndroid or iOS.</p>\n\n<p>To setup Titanium applications, refer to the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Push_Notifications\">Push Notification guide</a>.</p>\n\n<p>The Push Notifications API provides two mechanisms to register and send push notifications.  One\nrelies on the user session, which requires the user to be logged in to receive push notifications.\nThe other method uses devices tokens, which does not require the user to be logged in to\nreceive notifications.  If you are using the Titanium API, push notifications with device tokens\nrequire Titanium SDK 3.1.2 and later.</p>\n\n<h3>Android Notes</h3>\n\n<h4>Device Support</h4>\n\n<p>GCM supports devices that run Android 2.2 and later, and requires that the Google Play Store\napplication be installed. For pre-4.0 devices, the user is required to set up their Google account.</p>\n\n<h4>Optional Payload Fields</h4>\n\n<p>On Android, you can specify the following optional fields in the <code>payload</code> parameter of the\n<a href=\"#!/api/PushNotifications-method-notify_tokens\" rel=\"PushNotifications-method-notify_tokens\" class=\"docClass\">notify_tokens</a> or <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">notify</a> method:</p>\n\n<ul>\n<li><code>icon</code> (String): Filename minus the extension of the\nicon to display in the notification center. Place the file in <code>/res/drawable</code>\nfor Android applications or <code>/Resources</code> for Titanium applications.\nUses the app's icon by default.</li>\n<li><code>title</code> (String): Title of the notification.</li>\n<li><code>vibrate</code> (Boolean): If true, the device vibrates for one second.</li>\n</ul>\n\n\n<h3>Badges</h3>\n\n<p>When sending a push notification, you can specify a badge value, which is usually used to indicate the\nnumber of unread messages or other content waiting to be addressed by the user in your application.</p>\n\n<p>On Android, the badge number is displayed in the notification center, while on iOS, the badge\nnumber is displayed with the application icon.</p>\n\n<p>When setting the value of the badge, you can either directly set the badge number, or\nincrement and decrement the current value of the badge. Set the <code>badge</code> field in the <code>payload</code>\nparameter of the <a href=\"#!/api/PushNotifications-method-notify_tokens\" rel=\"PushNotifications-method-notify_tokens\" class=\"docClass\">notify_tokens</a> or <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">notify</a>\nmethod to specify a value for the badge.</p>\n\n<p>Prefix the number with either the <code>+</code> or <code>-</code> symbol to increment or decrement the current value,\nrespectively.  Omit the prefix to directly set the value.</p>\n\n<p>For example, the value <code>+2</code> increments the current badge value by two, the value <code>-1</code>,\ndecrements the badge value by one, and the value <code>12</code> sets the badge value to twelve.</p>\n\n<p>Use the following methods to set the internally stored value of the badge and not update the\ndisplayed value in the application:</p>\n\n<ul>\n<li><a href=\"#!/api/PushNotifications-method-set_badge\" rel=\"PushNotifications-method-set_badge\" class=\"docClass\">set_badge</a>: set, increment or decrement the value of the badge</li>\n<li><a href=\"#!/api/PushNotifications-method-reset_badge_put\">reset_badge</a>: set the value of the badge to zero</li>\n</ul>\n\n\n<p>To update the displayed value in the application, you need to send a push notification with the\n<code>badge</code> field defined.</p>\n\n<h3>Push Notifications with Device Tokens</h3>\n\n<p>The methods with the <code>_token</code> suffix rely on the device's token to subscribe, receive, send or\nunsubscribe from push notifications:</p>\n\n<ul>\n<li><a href=\"#!/api/PushNotifications-method-subscribe_token\" rel=\"PushNotifications-method-subscribe_token\" class=\"docClass\">subscribe_token</a></li>\n<li><a href=\"#!/api/PushNotifications-method-notify_tokens\" rel=\"PushNotifications-method-notify_tokens\" class=\"docClass\">notify_tokens</a></li>\n<li><a href=\"#!/api/PushNotifications-method-unsubscribe_token\" rel=\"PushNotifications-method-unsubscribe_token\" class=\"docClass\">unsubscribe_token</a></li>\n</ul>\n\n\n<p>To retrieve your device token using the Android or iOS SDK API, refer to the\nPush Notifications sections of the <a href=\"#!/guide/android\">Android SDK guide</a>\nor the <a href=\"#!/guide/ios\">iOS SDK guide</a>.</p>\n\n<p>To retrieve your device token using the Titanium SDK API:</p>\n\n<ul>\n<li><p>For Android, use the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Modules.CloudPush\">Modules.CloudPush</a>\nmodule.</p></li>\n<li><p>For iOS, use the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Titanium.Network-method-registerForPushNotifications\">Titanium.Network.registerForPushNotifications</a>\nmethod.</p></li>\n</ul>\n\n\n<h3>Push Notifications with User Sessions</h3>\n\n<p>The following methods require the user to be logged in to subscribe, receive or unsubscribe from\npush notifications:</p>\n\n<ul>\n<li><a href=\"#!/api/PushNotifications-method-subscribe\" rel=\"PushNotifications-method-subscribe\" class=\"docClass\">subscribe</a></li>\n<li><a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">notify</a></li>\n<li><a href=\"#!/api/PushNotifications-method-unsubscribe\" rel=\"PushNotifications-method-unsubscribe\" class=\"docClass\">unsubscribe</a></li>\n</ul>\n\n\n<p>To send push notifications, the <code>notify.json</code> method uses the user's ID.</p>\n\n<p>You can also use the <a href=\"#!/api/Users-method-logout\" rel=\"Users-method-logout\" class=\"docClass\">Users.logout</a> method to unsubscribe from all push notifications by\nspecifying the <code>device_id</code> parameter.</p>\n\n<h3>Scheduling Push Notifications</h3>\n\n<p>You can send push notifications to users at specific times, over a span of time; or at daily,\nweekly, or monthly intervals.</p>\n\n<p>For more information, refer to the <a href=\"#!/api/PushSchedules\" rel=\"PushSchedules\" class=\"docClass\">PushSchedules</a> API.</p>\n\n<h3>Location-Based Push Notifications</h3>\n\n<p>You can send push notifications to users based on their location.  To use location-based push\nnotifications, the ArrowDB server needs to know the location of the device.  To update the device's\nlocation, you need to periodically call the <a href=\"#!/api/PushNotifications-method-subscription_update\" rel=\"PushNotifications-method-subscription_update\" class=\"docClass\">subscription_update</a> method and specify\nthe <code>loc</code> parameter to update the device's location.</p>\n\n<p>To send a location-based push notification, use either the <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">notify</a> or\n<a href=\"#!/api/PushNotifications-method-notify_tokens\" rel=\"PushNotifications-method-notify_tokens\" class=\"docClass\">notify_tokens</a> method and specify a location query with the <code>where</code>\nparameter.  For example, the following cURL command, sends a push notification to any device within\n10 miles of Mountain View, CA, USA:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST --data-urlencode 'payload=Come visit our brand new Mountain View location!' \"https://api.cloud.appcelerator.com/v1/push_notification/notify.json?key=&lt;API_KEY&gt;\" --data-urlencode 'where={\"loc\":{\"$geoWithin\":{\"$centerSphere\":[[-122.0507049560547,37.38685989379883] , 0.00252589 ]}}}'\n</code></pre>\n\n<p>You can use the <a href=\"#!/api/GeoFences\" rel=\"GeoFences\" class=\"docClass\">GeoFences</a> API to have the device periodically check the ArrowDB server for\ndata based on location instead of having the server push it to the device.</p>\n\n<h3>Querying Push Notification Subscriptions</h3>\n\n<p>Regular (non-admin) application users can use the <a href=\"#!/api/PushNotifications-method-query\" rel=\"PushNotifications-method-query\" class=\"docClass\">query</a> method to query their own\npush notification subscriptions. For application admins, the same method queries all subscriptions for all users,\nby default. An app admin can also query an arbitrary user's subscriptions by specifying the user's ID\nas the value of the <a href=\"#!/api/PushNotifications-method-query\" rel=\"PushNotifications-method-query\" class=\"docClass\">query</a> method's <code>su_id</code> parameter.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushNotifications.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushNotifications.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [
        {
          "tagname": "method",
          "name": "channels_query",
          "deprecated": false,
          "id": "method-channels_query",
          "doc": "<p>Returns a list of push notification channels the user is subscribed to.</p>\n\n<p>For application admins, if the <code>user_id</code> parameter is not specified, returns all channels\nwith subscribed users.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "push_notification/channels/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0.</p>\n\n<pre><code>Cloud.PushNotifications.queryChannels({\n    user_id: savedUserId\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(\"channel: \" + e.push_channels.join());\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/push_notification/channels/query.json?key=&lt;YOUR APP API KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"queryPushChannels\"\n  },\n  \"response\": {\n    \"push_channels\": [\n      \"friend_request\",\n      \"chat\"\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"user_id\": savedUserId\n};\n\n[APSPushNotifications queryChannels:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu push_channels\", (unsigned long)((NSArray *) e.response[@\"push_channels\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSPushNotifications.queryChannels(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray push_channels = e.getResponse().getJSONArray(\"push_channels\");\n                    if (push_channels.length() &lt;= 0) {\n                        Log.i(\"APSPushNotifications\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; push_channels.length(); i++) {\n                            Log.i(\"APSPushNotifications\", push_channels.getJSONObject(i).toString());\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsQueryChannels({\n    user_id: savedUserId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.push_channels);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_id",
              "doc": "<p>User to retrieve subscribed channels for.</p>\n\n<p>Only application admins can query subscribed channels of a user.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "count",
              "doc": "<p>Set to <code>true</code> to return the total number of push channels in the <code>count</code> field of the\n<code>meta</code> header.  Default is <code>false</code>.</p>\n\n<p>Only valid for applications created with ArrowDB 1.1.8 or greater.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "push_channels",
              "doc": "<p>List of subscribed channels.</p>\n",
              "optional": true,
              "type": "String[]",
              "html_type": "String[]"
            },
            {
              "name": "count",
              "doc": "<p>Total number of push channels.  Returned in the meta header of the response.\nSet the <code>count</code> parameter to <code>true</code> to retrieve the count.</p>\n\n<p>Only valid for applications created with ArrowDB 1.1.8 or greater. Prior to this release,\ncheck the <code>total_results</code> field in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Returns a list of push notification channels the user is subscribed to. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "channels_show",
          "deprecated": false,
          "id": "method-channels_show",
          "doc": "<p>Returns the number of devices subscribed to the specified channel.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "push_notification/channels/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0.</p>\n\n<pre><code>Cloud.PushNotifications.showChannels({\n    name: 'test'\n}, function (e) {\n    if (e.success) {\n        Ti.API.info(\"Android:\" + e.devices.android_counts);\n        Ti.API.info(\"iOS:\" + e.devices.ios_counts);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X GET --data-urlencode \"name=chat\" \"https://api.cloud.appcelerator.com/v1/push_notification/channels/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"showPushChannels\",\n  },\n  \"response\": {\n    \"devices\": {\n      \"ios_counts\": 12,\n      \"android_counts\": 18\n    }\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"name\": @\"test\"\n};\n\n[APSPushNotifications showChannels:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSDictionary *devices = e.response[@\"devices\"];\n        NSString *message = [NSString stringWithFormat:@\"iOS: %@ Android: %@\", devices[@\"ios_counts\"], devices[@\"android_counts\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"name\", \"chat\");\n\ntry {\n    APSPushNotifications.showChannels(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray devices = e.getResponse().getJSONArray(\"devices\");\n                    if (devices.length() &lt;= 0) {\n                        Log.i(\"APSPushNotifications\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; devices.length(); i++) {\n                            Log.i(\"APSPushNotifications\", devices.getJSONObject(i).toString());\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/channels_show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsShowChannels({\n    name: 'test'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Android: ' + result.body.response.device.android_counts);\n        console.log('iOS: ' + result.body.response.device.ios_counts);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name of the push channel.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "devices",
              "doc": "<p>Number of devices subscribed to the channel.</p>\n\n<ul>\n<li><code>android_counts</code>: number of Android devices subscribed to the channel.</li>\n<li><code>ios_counts</code>: number of iOS devices subscribed to the channel.</li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Returns the number of devices subscribed to the specified channel. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of devices subscribed to push notifications.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the number of devices subscribed to push notifications.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"push_notification/count.json\",\n    method : \"GET\"\n}, function(e) {// The callback called when the request completes\n    Ti.API.info(JSON.stringify(e));\n    if (e.success) {\n        alert(\"Subscribed iOS Devices: \" + e.ios +\n            \"\\nSubscribed Android Devices: \" + e.android);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/push_notification/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"push_notificationCount\"\n    \"count\": 10,\n  },\n  \"response\": {\n    \"push_notification_subscriptions\": {\n      \"android\": 4,\n      \"ios\": 6\n    }\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the number of devices subscribed to push notifications.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"push_notification/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the number of devices subscribed to push notifications.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"push_notification/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Android: ' + result.body.response.push_notification_subscriptions.android);\n        console.log('iOS: ' + result.body.response.push_notification_subscriptions.ios);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of devices subscribed to push notifications. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "push_notification_subscriptions",
              "doc": "<p>Only returned if <code>count</code> is greater than zero.</p>\n\n<p>A dictionary with two fields:</p>\n\n<ul>\n<li><code>android</code> (Number): Total number of Android devices subscribed to push notifications.</li>\n<li><code>ios</code> (Number): Total number of iOS devices subscribed to push notifications.</li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "PushNotifications",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "notify",
          "deprecated": false,
          "id": "method-notify",
          "doc": "<p>Sends push notifications to one or more users who are subscribed to a channel.</p>\n\n<p>Specify either <code>friends</code>, <code>to_ids</code> or <code>where</code>.\nOne of these parameters must be used. These parameters cannot be used simultaneously.</p>\n\n<p>Application admins can set the <code>to_ids</code> parameter to <code>everyone</code> to send to all devices\nsubscribed to the identified channel.</p>\n\n<p>The REST version of <code>notify</code> includes the push notification ID in its response.\nSee the REST example below.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "push_notification/notify.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example sends a push notification to a channel and checks the response.</p>\n\n<pre><code>Cloud.PushNotifications.notify({\n    channel: 'friend_request',\n    to_ids: '5354525d5714f565d3001c1e',\n    payload: 'Welcome to push notifications'\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request. The JSON response object includes the ID of the push notification.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"channel=friend_request\" -F \"to_ids=5354525d5714f565d3001c1e\" -F \"payload=test\" https://api.cloud.appcelerator.com/v1/push_notification/notify.json?key=&lt;APP_KEY&gt;&amp;pretty_json=true\n\nExample JSON response:\n\n    {\n      \"meta\": {\n        \"code\": 200,\n        \"status\": \"ok\",\n                    \"method_name\": \"Notify\"\n      },\n      \"response\": {\n        \"push_notification\": {\n          \"id\": \"53690d3fe10fa4582a00e887\",\n          \"payload\": \"test\",\n          \"channel\": \"friend_request\"\n        }\n      }\n    }\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"channel\": @\"friend_request\",\n    @\"to_id\": @\"5354525d5714f565d3001c1e\",\n    @\"payload\": @\"Welcome to push notifications\"\n};\n\n[APSPushNotifications notify:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"channel\", \"friend_request\");\ndata.put(\"to_ids\", \"123456,34567\");\ndata.put(\"payload\", \"Push Notification Test\");\n\ntry {\n    APSPushNotifications.notify(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Notified!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsNotify({\n    channel: 'friend_request',\n    to_ids: IDS_LIST,\n    payload: 'Welcome to push notifications'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Notification sent!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "channel",
              "doc": "<p>Name of the channel. For multiple channels, either comma-separate the list of channels\nor use an array of strings.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": false,
              "type": "String/String[]",
              "html_type": "String/String[]"
            },
            {
              "name": "friends",
              "doc": "<p>If this parameter is specified (regardless of the parameter's value),\npush notifications are sent to any of the user's <a href=\"#!/api/Friends\" rel=\"Friends\" class=\"docClass\">Friends</a> who are\nsubscribed to the identified channel.</p>\n",
              "optional": true,
              "type": "Any",
              "html_type": "Any"
            },
            {
              "name": "to_ids",
              "doc": "<p>Comma-separated list of user IDs to send the notification to users who are subscribed\nto the specified channel. Up to 1000 users can be specified.</p>\n\n<p>You <strong>cannot</strong> use this parameter when using a location query with the <code>where</code> parameter.</p>\n\n<p>Application admins can set this parameter to <code>everyone</code> to send to all devices\nsubscribed to the channel.</p>\n\n<p>If you are using the web interface, you do not need to specify this parameter.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "payload",
              "doc": "<p>Payload to send with the push notification.</p>\n\n<p>For a string, it will be sent as an alert (notification message).</p>\n",
              "optional": false,
              "type": "String/PushPayload",
              "html_type": "String/PushPayload"
            },
            {
              "name": "options",
              "doc": "<p>Additional push options.</p>\n\n<ul>\n<li><em>expire_after_seconds</em> (Number): Expiration time in seconds of when to stop sending the push notification.\nFor example, if the push notification expiration time is for a day and the user's device\nis off for over a day, the user does not receive the push notification since it has expired.</li>\n</ul>\n\n\n<p>For example, to specify a one day expiration period, use <code>options={'expire_after_seconds':86400}</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "where",
              "doc": "<p>A JSON-encoded object that defines either the user or location query used to select the device\nthat will receive the notification. Up to 1000 users can be returned by the query.</p>\n\n<p>If you are using a location query, you <strong>cannot</strong> use the <code>to_ids</code> parameter.</p>\n\n<p>To specify a user query, set the <code>user</code> field to a custom query, for example, the\nfollowing query searches for all users with the first name of Joe:</p>\n\n<pre><code>where={\"user\": {\"first_name\":\"Joe\"}}\n</code></pre>\n\n<p>To specify a location query, set the <code>loc</code> field to a\n<a href=\"http://docs.mongodb.org/manual/reference/operator/query-geospatial/\">MongoDB Geospatial Query</a>.\nThe following query searches for all users within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>where={\"loc\": { \"$nearSphere\" : { \"$geometry\" : { \"type\" : \"Point\" , \"coordinates\" : [-122.2708,37.8044] } , \"$maxDistance\" : 2000 }}}\n</code></pre>\n\n<p>For details about using the <code>where</code> parameter, see the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "push_notification",
              "doc": "<p>Information about the requested push notification:</p>\n\n<ul>\n<li><code>id</code>: The ID of the requested push notification.</li>\n<li><code>payload</code>: The notification payload.</li>\n<li><code>channel</code>: The notification channel.</li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Sends push notifications to one or more users who are subscribed to a channel. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "notify_tokens",
          "deprecated": false,
          "id": "method-notify_tokens",
          "doc": "<p>Sends push notifications to one or more users who are subscribed to a channel.</p>\n\n<p>Application admins can set the <code>to_tokens</code> parameter to <code>everyone</code> to send to all devices\nsubscribed to the identified channel.</p>\n\n<p>If you use the <code>to_tokens</code> parameter, you <strong>cannot</strong> specify a location query using the <code>where</code>\nparameter in the same API call.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/notify_tokens.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example sends a push notification to a channel and checks the response.\nRequires Titanium SDK 3.1.2 and later.</p>\n\n<pre><code>Cloud.PushNotifications.notifyTokens({\n    channel: 'friend_request',\n    to_tokens: TOKEN_LIST,\n    payload: 'Welcome to push notifications'\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -X POST -F \"channel=&lt;channel&gt;\" -F \"to_tokens=&lt;token list&gt;\" -F \"payload=&lt;payload&gt;\" \"https://api.cloud.appcelerator.com/v1/push_notification/notify_tokens.json?key=&lt;key&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"NotifyTokens\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"channel\": @\"friend_request\",\n    @\"to_tokens\": TOKEN_LIST,\n    @\"payload\": @\"Welcome to push notifications\"\n};\n\n[APSPushNotifications notifyTokens:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"channel\", \"friend_request\");\ndata.put(\"to_tokens\", TOKEN_LIST);\ndata.put(\"payload\", \"Push Notification Test\");\n\ntry {\n    APSPushNotifications.notifyTokens(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Notified!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/notify_tokens.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsNotifyTokens({\n    channel: 'friend_request',\n    to_tokens: TOKEN_LIST,\n    payload: 'Welcome to push notifications'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Notification sent!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "channel",
              "doc": "<p>Name of the channel. For multiple channels, either comma-separate the list of channels\nor use an array of strings.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": false,
              "type": "String/String[]",
              "html_type": "String/String[]"
            },
            {
              "name": "to_tokens",
              "doc": "<p>Comma-separated list of device tokens. Sends push notification to the specified\ntokens who are subscribed to the specified channel.</p>\n\n<p>You <strong>cannot</strong> use this parameter with a location query using the <code>where</code> parameter.</p>\n\n<p>Application admins can set this parameter to <code>everyone</code> to send to all devices\nsubscribed to the channel.</p>\n\n<p>If you are using the web interface, you do not need to specify this parameter.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "payload",
              "doc": "<p>Payload to send with the push notification.</p>\n\n<p>For a string, it will be sent as an alert (message notification).</p>\n",
              "optional": false,
              "type": "String/PushPayload",
              "html_type": "String/PushPayload"
            },
            {
              "name": "options",
              "doc": "<p>Additional push options.</p>\n\n<ul>\n<li><em>expire_after_seconds</em> (Number): Expiration time in seconds of when to stop sending the push notification.\nFor example, if the push notification expiration time is for a day and the user's device\nis off for over a day, the user does not receive the push notification since it has expired.</li>\n</ul>\n\n\n<p>For example, to specify a one day expiration period, use <code>options={'expire_after_seconds':86400}</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "where",
              "doc": "<p>A JSON-encoded object that defines either the user or location query used to select the device\nthat will receive the notification. Up to 1000 users can be returned by the query.</p>\n\n<p>If you are using the <code>to_tokens</code> parameter, you <strong>cannot</strong> specify a location query.</p>\n\n<p>To specify a user query, set the <code>user</code> field to a custom query, for example, the\nfollowing query searches for all users with the first name of Joe:</p>\n\n<pre><code>where={\"user\": {\"first_name\":\"Joe\"}}\n</code></pre>\n\n<p>To specify a location query, set the <code>loc</code> field to a\n<a href=\"http://docs.mongodb.org/manual/reference/operator/query-geospatial/\">MongoDB Geospatial Query</a>.\nThe following query searches for all users within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>where={\"loc\": { \"$nearSphere\" : { \"$geometry\" : { \"type\" : \"Point\" , \"coordinates\" : [-122.2708,37.8044] } , \"$maxDistance\" : 2000 }}}\n</code></pre>\n\n<p>For details about using the <code>where</code> parameter,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Sends push notifications to one or more users who are subscribed to a channel. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p><strong>Note:</strong> this API is only available for applications created with ArrowDB 1.1.7 or greater.</p>\n\n<p>Custom query of push notification subscriptions with pagination. For regular (non-admin) application\nusers, this method returns the currently logged-in user's list of push notification subscriptions.\nFor app admins, the method returns a list of subscriptions for all users, or just those\nfor the user specified by as the method's <code>su_id</code> parameter.</p>\n\n<p>You can paginate query results using <code>skip</code> and <code>limit</code> parameters, or <code>page</code> and <code>per_page</code>,\nbut not both in the same query.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0.</p>\n\n<pre><code>Cloud.PushNotifications.query({\n    user_id: userId\n}, function (e) {\n    if (e.success) {\n        e.subscriptions.forEach(function(subscription){\n            Ti.API.info(subscription.channel.join());\n        });\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/push_notification/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;user_id=4f5905b5d2951316a9000020\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"querySubscriptions\",\n    \"page\": 1,\n    \"per_page\": 10,\n    \"total_pages\": 1,\n    \"total_results\": 2\n  },\n  \"response\": {\n    \"subscriptions\": [\n      {\n         \"type\": \"android\",\n         \"badge_number\": 0,\n         \"app_id\": \"591f3b2d625b370092000006\",\n         \"device_token\": \"APA91bG0zVrOR5OFXoCFWjrSJUHGxyRCKk6aVOmvO5Re-XzKp2MKRxLSt53wgtrMJf5nF47Q0SXdp5jqBd-wN-7CxXP_PWdHpzPmJ5bl3_KGiY4EPojApG4\",\n         \"user_id\": \"5923af46625b3700920000e0\",\n         \"channel\": [\n           \"subchan\"\n         ],\n         \"android_type\": \"gcm\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"user_id\": userId\n};\n\n[APSPushNotifications query:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu subscriptions\", (unsigned long)((NSArray *) e.response[@\"subscriptions\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_id\", \"4f5905b5d2951316a9000020\");\n\ntry {\n    APSPushNotifications.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray subscriptions = e.getResponse().getJSONArray(\"subscriptions\");\n                    if (subscriptions.length() &lt;= 0) {\n                        Log.i(\"APSPushNotifications\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; subscriptions.length(); i++) {\n                            Log.i(\"APSPushNotifications\", subscriptions.getJSONObject(i).toString());\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsQuery({\n    user_id: userId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.subscriptions[0].channel);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "su_id",
              "doc": "<p>User ID of the user who has subscribed devices for push notification.\nYou must be an application admin to query another user's subscriptions.</p>\n\n<p>If this parameter is not included, a list of subscriptions for all users is returned.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "channel",
              "doc": "<p>Name of the push notification channel.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "device_token",
              "doc": "<p>Apple or Android Device Token.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Selects the push type.</p>\n\n<p>Set to <code>android</code> for Android devices usingGoogle Cloud Messaging\nor <code>ios</code> for iOS devices using Apple Push Notification Service.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>Instead of using <code>page</code> and <code>per_page</code> for pagination, you can use <code>limit</code> and\n<code>skip</code> to do your own pagination. <code>limit</code> is the maximum number of records to <code>skip</code>.\nThe specified value must be greater than 0 and no greater than 1000, or an HTTP 400\n(Bad Request) error will be returned.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>Number of records to skip. Must be used together with <code>limit</code>. The specified value must not\nbe less than 0 or an HTTP 400 error will be returned.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "subscriptions",
              "doc": "<p>Array of subscription objects, where each subscription object has the\nfollowing properties:</p>\n\n<ul>\n<li><code>channel</code>: <code>Array of Strings</code>. List of subscribed channels.</li>\n<li><code>device_token</code>: <code>String</code>. iOS or Android device token associated with\n  this subscription.</li>\n<li><code>type</code>: <code>String</code>. Device type. Either \"ios\" or \"android\".</li>\n<li><code>app_id</code>: Application ID</li>\n<li><code>user_id</code>: ID of the user whose ACLs should be returned. You must be an application admin to use this parameter.</li>\n<li><code>android_type</code>: List of Android push notification object types, and the number of notifications\ndelivered using each type. Possible key names are the following:\n\n<ul>\n<li><code>gcm</code>: Google Cloud Messaging service for Android</li>\n</ul>\n</li>\n</ul>\n\n",
              "optional": true,
              "type": "Hash[]",
              "html_type": "Hash[]"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Note: this API is only available for applications created with ArrowDB 1.1.7 or greater. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "reset_badge",
          "deprecated": false,
          "id": "method-reset_badge",
          "doc": "<p>Sets the internally stored value of the badge to zero of a specific device.</p>\n\n<p>This method only updates the internally stored value of the badge.  To update the badge value\non the iOS icon or Android notification center, send a push notification with the <code>badge</code> field defined.</p>\n\n<p>If you are an application admin, you may omit the device token.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/reset_badge.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Titanium SDK 3.2.1 and later.</p>\n\n<pre><code>Cloud.PushNotifications.resetBadge({\n    device_token: device_token.value\n}, function (e) {\n    if (e.success) {\n        Ti.API.info('Badge Reset!');\n    }\n    else {\n        Ti.API.error(e);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"device_token=&lt;device_token&gt;\" \"https://api.cloud.appcelerator.com/v1/push_notification/reset_badge.json?key=&lt;API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"resetBadge\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"device_token\": deviceToken\n};\n\n[APSPushNotifications resetBadge:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"device_token\", \"&lt;device_token&gt;\");\n\ntry {\n    APSPushNotifications.resetBadge(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Badge Reset!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/reset_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsResetBadge({\n    device_token: device_token.value\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Badge reset!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "device_token",
              "doc": "<p>Device token. If you are an application admin, you may omit the device token.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Sets the internally stored value of the badge to zero of a specific device. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "set_badge",
          "deprecated": false,
          "id": "method-set_badge",
          "doc": "<p>Sets the value of the internally stored value of the badge.</p>\n\n<p>This method only updates the internally stored value of the badge.  To update the badge value\non the iOS icon or Android notification center, send a push notification with the <code>badge</code> field defined.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/set_badge.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Titanium SDK 3.2.1 and later.</p>\n\n<pre><code>Cloud.PushNotifications.setBadge({\n    device_token: device_token.value,\n    badge_number: badge_number.value\n}, function (e) {\n    if (e.success) {\n        Ti.API.info('Badge Set!');\n    }\n    else {\n        Ti.API.error(e);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"badge_number=12\" \"https://api.cloud.appcelerator.com/v1/push_notification/set_badge.json?key=&lt;API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"setBadge\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"device_token\": deviceToken,\n    @\"badge_number\": @5\n};\n\n[APSPushNotifications setBadge:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"badge_number\", 12);\n\ntry {\n    APSPushNotifications.setBadge(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Badge Set!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n      Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/set_badge.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsSetBadge({\n    device_token: device_token,\n    badge_number: badge_number\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Badge set!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "device_token",
              "doc": "<p>Device token. Required if you are not an application admin.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "badge_number",
              "doc": "<p>Number to set as the badge on the application's icon.\nSpecify postive and negative values with the <code>+</code> and <code>-</code>\nsymbols to increment or decrement the current badge number, respectively.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Sets the value of the internally stored value of the badge. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "subscribe",
          "deprecated": false,
          "id": "method-subscribe",
          "doc": "<p>Subscribes a mobile device to a push notifications channel. Developers can\ncreate different channels for different types of push notifications. For\ninstance, a channel for friend request, a channel for chat, etc. Push\nnotifications currently only work on iOS and Andriod.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "push_notification/subscribe.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example subscribes to a push notification channel and checks the response.</p>\n\n<pre><code>Cloud.PushNotifications.subscribe({\n    channel: 'friend_request',\n    device_token: myPushDeviceToken,\n    type: 'android'\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"type=ios\" -F \"channel=friend_request\" -F \"device_token=f7702d77b34ed94869f664e7a297ccc173bec93a2b815css6asd28461a0358db\" https://api.cloud.appcelerator.com/v1/push_notification/subscribe.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"SubscribeNotification\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"channel\": @\"friend_request\",\n    @\"device_token\": deviceToken,\n    @\"type\": @\"ios\",\n};\n\n[APSPushNotifications subscribe:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"type\", \"android\");\ndata.put(\"channel\", \"friend_request\");\ndata.put(\"device_token:\", \"4e7a297ccc173bec93a2b81\");\n\ntry {\n    APSPushNotifications.subscribe(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Subscribed!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsSubscribe({\n    channel: 'friend_request',\n    device_token: myPushDeviceToken,\n    type: 'android'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Subscribed to friend_request channel!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "channel",
              "doc": "<p>Push notification channel to subscribe to. For multiple channels, comma separate the\nlist of channel names.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "device_token",
              "doc": "<p>Apple or Android Device Token.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Selects the push type.</p>\n\n<p>Set to <code>android</code> for Android devices using Google Cloud Messaging\nor <code>ios</code> for iOS devices using Apple Push Notification Service.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to subscribe on behalf of.</p>\n\n<p>Only application admins can subscribe to push notifications on behalf of other\nusers.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Subscribes a mobile device to a push notifications channel. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "subscribe_token",
          "deprecated": false,
          "id": "method-subscribe_token",
          "doc": "<p>Subscribes a mobile device to a push notifications channel.</p>\n\n<p>Developers can create different channels for different types of push notifications, such as\na friend request, chat, etc.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/subscribe_token.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example subscribes to a push notification channel and checks the response.\nRequires Titanium SDK 3.1.2 and later.</p>\n\n<pre><code>Cloud.PushNotifications.subscribeToken({\n    device_token: DEVICE_TOKEN,\n    channel: 'friend_request',\n    type: 'ios'\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -i -X POST -F \"type=ios\" -F \"device_token=&lt;token&gt;\" -F \"channel=friend_request\" \"http://api.cloud.appcelerator.com/v1/push_notification/subscribe_token.json?key=&lt;app key&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"SubscribeNotificationByToken\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"device_token\": deviceToken,\n    @\"channel\": @\"friend_request\",\n    @\"type\": @\"ios\"\n};\n\n[APSPushNotifications subscribeToken:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"type\", \"android\");\ndata.put(\"channel\", \"friend_request\");\ndata.put(\"device_token\", \"4e7a297ccc173bec93a2b81\");\n\ntry {\n    APSPushNotifications.subscribeToken(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Subscribed!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsSubscribeToken({\n    device_token: DEVICE_TOKEN,\n    channel: 'friend_request',\n    type: 'ios'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Subscribed to friend_request channel!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "device_token",
              "doc": "<p>Android or iOS device token.</p>\n\n<p>For Android, the length is dynamic and is less than 4096 characters.</p>\n\n<p>For iOS, the length is 64 characters.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "channel",
              "doc": "<p>Name of the channel. For multiple channels, comma separate the list of channel names.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Selects the push type.</p>\n\n<p>Set to <code>android</code> for Android devices using Google Cloud Messaging\nor <code>ios</code> for iOS devices using Apple Push Notification Service.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Subscribes a mobile device to a push notifications channel. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "subscription_update",
          "deprecated": false,
          "id": "method-subscription_update",
          "doc": "<p>Updates the device's push channel subscription.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "push_notification/subscription/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>The following example gets the device's current geographic location and updates the user's\nsubscription with the coordinates.</p>\n\n<pre><code>Titanium.Geolocation.getCurrentPosition(function(e) {\n    if (e.error) {\n        Ti.API.error('Error: ' + e.error);\n    } else {\n        var latitude = e.coords.latitude;\n        var longitude = e.coords.longitude;\n        Cloud.PushNotifications.updateSubscription({\n            device_token : pushDeviceToken,\n            loc : [longitude, latitude]\n        }, function(e) {\n            if (e.success) {\n                alert('Subscription Updated.');\n            } else {\n                alert(e);\n            }\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>The following example updates the device's location to Mountain View, CA, USA:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"device_token=&lt;DEVICE_TOKEN&gt;\" -F \"loc=[-122.0507049560547,37.38685989379883]\" \"http://api.cloud.appcelerator.com/v1/push_notification/subscription/update.json?key=&lt;API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example cURL response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"UpdateSubscription\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"device_token\": deviceToken,\n    @\"loc\": @[longitude, latitude]\n};\n\n[APSPushNotifications updateSubscription:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"loc\", [-122.23,37.12]);\ndata.put(\"device_token\", \"&lt;DEVICE_TOKEN&gt;\");\n\ntry {\n    APSPushNotifications.updateSubscription(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Subscription Updated!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/subscription_update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsUpdateSubscription({\n    device_token : pushDeviceToken,\n    loc : [longitude, latitude]\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Location updated!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "device_token",
              "doc": "<p>Apple or Android Device Token.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update the subscription on behalf of. You must be logged in as an application administrator\nto update another user's notification subscription.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "loc",
              "doc": "<p>The device's current location specified as an array with longitude as the first element, and latitude\nas the second element (<code>[longitude,latitude]</code>).</p>\n",
              "optional": true,
              "type": "Number[]",
              "html_type": "Number[]"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Updates the device's push channel subscription. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "unsubscribe",
          "deprecated": false,
          "id": "method-unsubscribe",
          "doc": "<p>Unsubscribes one of the current user's devices from a push notification channel. If channel name is not\nprovided, unsubscribe the device from all channels.</p>\n\n<p>When a user logs out from a device, you can cancel all subscriptions for the\ndevice by passing the device's token to the <a href=\"#!/api/Users-method-logout\" rel=\"Users-method-logout\" class=\"docClass\">Users.logout</a> method.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "push_notification/unsubscribe.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example unsubscribes from a push notification channel and checks the response.</p>\n\n<pre><code>Cloud.PushNotifications.unsubscribe({\n    channel: 'friend_request',\n    device_token: myPushDeviceToken\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/push_notification/unsubscribe.json?key=&lt;YOUR API APP KEY&gt;&amp;channel=friend_request&amp;device_token=f7702d77b34ed94869f664e7a297ccc173bec93a2b815css6asd28461a0358db&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"UnsubscribeNotification\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"channel\": @\"friend_request\",\n    @\"device_token\": deviceToken\n};\n\n[APSPushNotifications unsubscribe:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"channel\", \"friend_request\");\ndata.put(\"device_token\", \"4e7a297ccc173bec93a2b81\");\n\ntry {\n    APSPushNotifications.unsubscribe(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Unsubscribed!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsUnsubscribe({\n    channel: 'friend_request',\n    device_token: myPushDeviceToken\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Unsubscribed from friend_request channel!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "channel",
              "doc": "<p>Name of the push notification channel. For multiple channels, comma separate the list of\nchannel names.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contains a comma (',').</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "device_token",
              "doc": "<p>Apple or Android Device Token.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to unsubscribe from push notifications.</p>\n\n<p>Only application admins can unsubscribe another user from push notifications.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Unsubscribes one of the current user's devices from a push notification channel. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "unsubscribe_token",
          "deprecated": false,
          "id": "method-unsubscribe_token",
          "doc": "<p>Unsubscribes the specified device from a push notification channel.\nIf <code>channel</code> is not defined, unsubscribes the device from all channels.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "push_notification/unsubscribe_token.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example unsubscribes from a push notification channel and checks the response.\nRequires Titanium SDK 3.1.2 and later.</p>\n\n<pre><code>Cloud.PushNotifications.unsubscribeToken({\n    channel: 'friend_request',\n    device_token: myPushDeviceToken\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -X DELETE -F \"channel=&lt;channel&gt;\" -F \"device_token=&lt;token&gt;\" \"https://api.cloud.appcelerator.com/v1/push_notification/unsubscribe_token.json?key=&lt;key&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"UnsubscribeNotificationByToken\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"channel\": @\"friend_request\",\n    @\"device_token\": deviceToken\n};\n\n[APSPushNotifications unsubscribeToken:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"channel\", \"friend_request\");\ndata.put(\"device_token\", \"4e7a297ccc173bec93a2b81\");\n\ntry {\n    APSPushNotifications.unsubscribeToken(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSPushNotifications\", \"Unsubscribed!\");\n            } else {\n                Log.e(\"APSPushNotifications\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushNotifications\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSPushNotifications\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/unsubscribe_token.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushNotificationsUnsubscribeToken({\n    channel: 'friend_request',\n    device_token: myPushDeviceToken\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Unsubscribed from friend_request channel!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "channel",
              "doc": "<p>Name of the push notification channel. For multiple channels, comma separate the list of\nchannel names.</p>\n\n<p>The name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "device_token",
              "doc": "<p>Android or iOS device token.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushNotifications",
          "shortDoc": "Unsubscribes the specified device from a push notification channel. ...",
          "html_meta": {
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PushPayload",
    "doc": "<p>JSON payload to pass to either the <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">PushNotifications.notify</a> or\n<a href=\"#!/api/PushNotifications-method-notify_tokens\" rel=\"PushNotifications-method-notify_tokens\" class=\"docClass\">PushNotifications.notify_tokens</a> method.</p>\n\n<p>In addition to the fields below, you can also add custom fields to pass on to the client\napplication.  Note that all field names defined below are reserved keywords and should not be used as custom\nfield names.</p>\n\n<p>For Android, Google Cloud Messaging (GCM) limits the payload size to 4 KB.  GCM will refuse any\npayload that exceeds the size limit.</p>\n\n<p>For iOS, Apple Push Notificaion Services (APNS) limits the payload size to 2 KB for push notifications sent in HTTP/1.1 format.\nFor push notifications sent in HTTP/2 format the payload size is increased to 4 KB. APNS will refuse any payload that exceeds\nthe size limits.</p>\n\n<p>For example, if you send the following payload:</p>\n\n<pre><code>{\n    \"alert\": \"Sample alert\",\n    \"badge\": \"+2\",\n    \"category\": \"sampleCategory\", \n    \"icon\": \"little_star\",\n    \"sound\": \"door_bell\",\n    \"title\": \"Example\",\n    \"vibrate\": true,\n    \"custom_field_1\": \"Appcelerator Cloud Services Rocks!\",\n    \"custom_field_2\": \"Hi Push\"\n}\n</code></pre>\n\n<p>Then, the client application will:</p>\n\n<ul>\n<li>Display the <code>Sample alert</code> message.</li>\n<li>Increment the current badge value by two.</li>\n<li>Play the <code>door_bell</code> sound.</li>\n<li>If the device is Android, the notification title will be <code>Example</code>, the device will\nvibrate and the <code>little_star</code> icon will be displayed in the notification.</li>\n<li>If the device is running iOS 8 or later, it will display the user notification actions\nassociated with the <code>sampleCategory</code> user notification category.</li>\n</ul>\n\n\n<p>Additionally, the client application will be passed the <code>custom_field_1</code> and <code>custom_field_2</code>\nkeys, which are custom fields that the client application can parse in the delivered JSON object.</p>\n\n<p>The notification payload delivered to the client application is modified and is a bit different\nbetween Android and iOS.</p>\n\n<p>For Android, all Android-valid fields are contained in an <code>android</code> dictionary, while all other\niOS-only and custom fields are top-level keys of the payload.  For example, the original\npayload in the example will be delivered to an Android application as:</p>\n\n<pre><code>{\n    \"android\": {\n        \"title\": \"Example\",\n        \"alert\": \"Sample alert\",\n        \"icon\": \"little_star\",\n        \"badge\": \"+2\",\n        \"sound\": \"door_bell\",\n        \"vibrate\": true,\n    },\n    \"category\": \"sampleCategory\",\n    \"custom_field_1\": \"Appcelerator Cloud Services Rocks!\",\n    \"custom_field_2\": \"Hi Push\"\n}\n</code></pre>\n\n<p>For iOS, all iOS-valid fields are contained in an <code>aps</code> dictionary, while all other\nAndroid-only and custom fields are top-level keys of the payload. For example, the original\npayload in the example will be delivered to an iOS application as:</p>\n\n<pre><code>{\n    \"aps\": {\n        \"alert\": \"Sample alert\",\n        \"badge\": \"+2\",\n        \"category\": \"sampleCategory\",\n        \"sound\": \"door_bell\",\n    },\n    \"title\": \"Example\",\n    \"icon\": \"little_star\",\n    \"vibrate\": true,\n    \"custom_field_1\": \"Appcelerator Cloud Services Rocks!\",\n    \"custom_field_2\": \"Hi Push\"\n}\n</code></pre>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
      "pseudo": true
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "alert",
          "id": "property-alert",
          "doc": "<p>Notification message to be displayed.</p>\n",
          "type": "String",
          "owner": "PushPayload",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "badge",
          "id": "property-badge",
          "doc": "<p>Number to set as the badge on the application's icon.\nSpecify positive and negative numbers with the <code>+</code> and <code>-</code>\nsymbols to increment or decrement the current badge number, respectively.</p>\n",
          "type": "String",
          "owner": "PushPayload",
          "shortDoc": "Number to set as the badge on the application's icon. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "category",
          "id": "property-category",
          "doc": "<p>String identifier of the user notification category to associate with the notification.\n<strong>iOS only.</strong></p>\n\n<p>For Titanium applications, this is the same value as the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Titanium.App.iOS.UserNotificationCategory-property-identifier\">identifer</a>\nproperty of the <code>UserNotificationCategory</code> object.</p>\n",
          "type": "String",
          "owner": "PushPayload",
          "shortDoc": "String identifier of the user notification category to associate with the notification. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "content-available",
          "id": "property-content-available",
          "doc": "<p>Set to <code>1</code> to indicate that there is new content to download for Newsstand apps and background download content.\n<strong>iOS only.</strong></p>\n\n<p>Used to trigger the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/api/Titanium.App.iOS-event-silentpush\"><code>silentpush</code></a>\nevent in Titanium applications. Set the <code>alert</code> field to an empty string to make the\nnotification silent.</p>\n",
          "type": "Number",
          "owner": "PushPayload",
          "shortDoc": "Set to 1 to indicate that there is new content to download for Newsstand apps and background download content. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "icon",
          "id": "property-icon",
          "doc": "<p>Filename minus the extension of the icon to display in the notification center.\n<strong>Android only.</strong></p>\n\n<p>Place the file in <code>/res/drawable</code> for native Android applications or <code>/Resources</code> for Titanium applications.\nUses the app's icon by default.</p>\n\n<p>For image requirements, see the\n<a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Icons_and_Splash_Screens-section-29004897_IconsandSplashScreens-NotificationIcons\">Icons and Splash Screen guide</a>.</p>\n",
          "type": "String",
          "owner": "PushPayload",
          "shortDoc": "Filename minus the extension of the icon to display in the notification center. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "sound",
          "id": "property-sound",
          "doc": "<p>Filename minus the extension of the sound to play.</p>\n\n<ul>\n<li>For native Android applications, place the file in the <code>/assets/sound</code> directory.</li>\n<li>For native iOS applications, place the file in the main bundle.</li>\n<li>For Android applications built with Titanium, place the file in the <code>/Resources/sound</code> directory.</li>\n<li>For iOS applications built with Titanium, place the file in the <code>/Resources</code> directory.</li>\n</ul>\n\n",
          "type": "String",
          "owner": "PushPayload",
          "shortDoc": "Filename minus the extension of the sound to play. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "title",
          "id": "property-title",
          "doc": "<p>Title of the notification. <strong>Android only.</strong></p>\n",
          "type": "String",
          "owner": "PushPayload",
          "shortDoc": "Title of the notification. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushNotifications/PushPayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "vibrate",
          "id": "property-vibrate",
          "doc": "<p>If true, the device vibrates for one second. <strong>Android only.</strong></p>\n",
          "type": "String",
          "owner": "PushPayload",
          "shortDoc": "If true, the device vibrates for one second. ...",
          "html_type": "String",
          "html_meta": {
          }
        }
      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "html_meta": {
      "pseudo": [
        "<p class='private'><strong>NOTE</strong> ",
        "This is an abstract type. Any object meeting this description can be used ",
        "where this type is used.</p>"
      ]
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PushSchedules",
    "doc": "<p class=\"note\">The current user must be an application admin to use the API.</p>\n\n\n<p>The PushSchedules API lets you schedule push notifications to be delivered to your application users\n on a recurring or one-time basis.</p>\n\n<ul>\n<li>You may create up to 100 scheduled push notifications for your application.</li>\n<li>Datetime fields use the ISO 8601 format, for example, <code>YYYY-MM-DDTHH:mm:ss+ZZZZ</code>.</li>\n</ul>\n\n\n<p>For information on setting up push notifications, see <a href=\"#!/api/PushNotifications\" rel=\"PushNotifications\" class=\"docClass\">PushNotifications</a>.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated unique ID for this scheduled push.</p>\n",
          "type": "String",
          "owner": "PushSchedules",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Arbitrary name for the scheduled push notification.</p>\n",
          "type": "String",
          "owner": "PushSchedules",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "push_notification",
          "id": "property-push_notification",
          "doc": "<p>Push notification to send for scheduled pushes.</p>\n\n<ul>\n<li><em>channel</em> (String): Name of the channel to send the push notification to.\nThe name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</li>\n<li><em>payload</em> (Hash): Payload to send to the device. Same format as <a href=\"#!/api/PushNotifications-method-notify\" rel=\"PushNotifications-method-notify\" class=\"docClass\">PushNotifications.notify</a>.</li>\n<li><em>to_ids</em> (Array&lt;String&gt;/String): Array or comma-separated list of IDs to send push notifications to.</li>\n<li><em>options</em> (Hash): Dictionary of additional options\n\n<ul>\n<li><em>expire_after_seconds</em> (Number): Expiration time in seconds of when to stop\nsending the push notification based on the start date. For example, if the push\nnotification is scheduled to be sent in a week and the expiration time is for a\nday. The push expires in eight days and will not be sent if the user's device\nhas been off before the send day and after the end of the expiration period.</li>\n</ul>\n</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "PushSchedules",
          "shortDoc": "Push notification to send for scheduled pushes. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "recurrence",
          "id": "property-recurrence",
          "doc": "<p>Schedules the recurrence of the push notification.</p>\n\n<ul>\n<li><em>interval</em> (String): Either <code>daily</code>, <code>weekly</code> or <code>monthly</code>.</li>\n<li><em>end_time</em> (Date): Datetime to end the push notifications in ISO 8601 format. Must occur after <code>start_time</code>.</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "PushSchedules",
          "shortDoc": "Schedules the recurrence of the push notification. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedules.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "start_time",
          "id": "property-start_time",
          "doc": "<p>Datetime to start the scheduled push notification in ISO 8601 format.</p>\n",
          "type": "Date",
          "owner": "PushSchedules",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a scheduled push notification.  At minimum, you must specify the <code>start_time</code>,\nand <code>payload</code> parameters. A push schedule can optionally define a location query so that\nonly devices in the specified geographic region will receive the push notification.</p>\n\n<p>The current user must be an application admin to use this API.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "push_schedule/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Available for Release 3.2.0 and later.</p>\n\n<pre><code>Cloud.PushSchedules.create({\n    schedule: {\n        name: 'push schedule',\n        start_time: '2015-09-05T10:11',\n        recurrence: {\n            interval: 'weekly',\n            end_time: '2015-09-10T10:11'\n        },\n        push_notification: {\n            payload: 'hello world',\n            channel: 'channelOne'\n        }\n    }\n}, function(e) {\n    if (e.success) {\n        Ti.API.info('Success! \\n id: ' + e.push_schedules[0].id);\n    } else {\n        Ti.API.error('Error: ' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>The following example schedules a weekly push notification to be sent to devices that are located\nwithin 10 miles of Appcelerator corporate headquarters:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -F 'schedule={\"start_time\":\"2016-01-01T00:00\", \"name\":\"test\", \"push_notification\":{\"channel\":\"test\",\"payload\":\"test schedule\"}, \"recurrence\":{\"interval\":\"weekly\", \"end_time\":\"2016-01-08T00:00\"}}' -F 'where={\"loc\":{\"$geoWithin\":{\"$centerSphere\":[[-122.0507049560547,37.38685989379883] , 0.00252589 ]}}}' \"https://api.cloud.appcelerator.com/v1/push_schedules/create.json?key=&lt;APP-KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"createPushSchedule\"\n  },\n  \"response\": {\n    \"push_schedules\": [\n      {\n        \"id\": \"535ac45b5714f50a99002e1e\",\n        \"name\": \"test\",\n        \"start_time\": \"2016-01-01T00:00:00+0000\",\n        \"push_notification\": {\n          \"channel\": \"test\",\n          \"payload\": \"test schedule\",\n          \"geo_condition\": \"{\\\"$geoWithin\\\":{\\\"$centerSphere\\\":[[-122.0507049560547,37.38685989379883],0.00252589]}}\"\n        },\n        \"recurrence\": {\n          \"interval\": \"weekly\",\n          \"end_time\": \"2016-01-08T00:00:00+0000\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"schedule\": @{\n        @\"start_time\": @\"2015-09-10T10:11\",\n        @\"recurrence\": @{\n            @\"interval\": @\"weekly\",\n            @\"end_time\": @\"2015-09-10T10:11\"\n        },\n        @\"push_notification\": @{\n            @\"payload\": @\"hello world\",\n            @\"channel\": @\"channelOne\"\n        }\n    }\n};\n\n[APSPushSchedules create:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\nJSONObject schedule = new JSONObject();\nschedule.put(\"name\", \"push schedule\");\nschedule.put(\"start_time\", \"2015-09-05T10:11\");\n\nJSONObject recurrence = new JSONObject();\nrecurrence.put(\"interval\", \"weekly\");\nrecurrence.put(\"end_time\", \"2015-09-10T10:11\");\n\nJSONObject push_notification = new JSONObject();\npush_notification.put(\"payload\", \"hello world\");\npush_notification.put(\"channel\",\"channelOne\")\n\nschedule.put(\"recurrence\", recurrence);\nschedule.put(\"push_notification\", push_notification);\n\ndata.put(\"schedule\", schedule);\n\ntry {\n    APSPushSchedules.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSPushSchedules\", \"Success!\");\n            } else {\n                Log.e(\"APSPushSchedules\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushSchedules\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n  Log.e(\"APSPushSchedules\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushSchedulesCreate({\n    schedule: {\n        name: 'push schedule',\n        start_time: '2015-09-05T10:11',\n        recurrence: {\n            interval: 'weekly',\n            end_time: '2015-09-10T10:11'\n        },\n        push_notification: {\n            payload: 'hello world',\n            channel: 'channelOne'\n        }\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.push_schedules[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "schedule",
              "doc": "<p>Push notification to schedule.</p>\n",
              "optional": false,
              "type": "PushSchedulePayload",
              "html_type": "PushSchedulePayload"
            },
            {
              "name": "where",
              "doc": "<p>A JSON-encoded object that defines a location query used to select the devices\nthat will receive the scheduled notification. Up to 1000 users can be returned by the query. To specify a location query, set the <code>loc</code> field to a\n<a href=\"http://docs.mongodb.org/manual/reference/operator/query-geospatial/\">MongoDB Geospatial Query</a>.\nThe following query searches for all users within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>where={\n  \"loc\": {\n    \"$nearSphere\" : { \n      \"$geometry\" : { \n        \"type\" : \"Point\" , \n        \"coordinates\" : [-122.2708,37.8044] } , \n        \"$maxDistance\" : 2000 \n      }\n    }\n  }\n</code></pre>\n\n<p>For details about using the <code>where</code> parameter, see the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "push_schedules",
              "doc": "<p>A single-element array containing the newly-created scheduled push object.</p>\n",
              "optional": true,
              "type": "PushSchedules[]",
              "html_type": "PushSchedules[]"
            }
          ],
          "owner": "PushSchedules",
          "shortDoc": "Creates a scheduled push notification. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a scheduled push notification.</p>\n\n<p>The current user must be an application admin to use this API.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "push_schedule/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Available on Release 3.2.0 and later.</p>\n\n<pre><code>Cloud.PushSchedules.remove({\n    ids: savedPushId\n}, function(e){\n    if (e.success) {\n        Ti.API.info(\"Success!\");\n    } else {\n        Ti.API.error('Error: ' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt -X DELETE -F \"ids=&lt;schedule_ids&gt;\" \"https://api.cloud.appcelerator.com/v1/push_schedules/delete.json?key=&lt;APP_API_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"deletePushSchedules\"\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"ids\": savedPushId\n};\n\n[APSPushSchedules remove:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          [[[UIAlertView alloc] initWithTitle:@\"Great\" message:@\"Success!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"ids\", 1);\n\ntry {\n    APSPushSchedules.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n              Log.i(\"APSPushSchedules\", \"Removed!\");\n            } else {\n              Log.e(\"APSPushSchedules\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushSchedules\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n  Log.e(\"APSPushSchedules\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushSchedulesDelete({\n    ids: savedPushId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "ids",
              "doc": "<p>Array of push schedule IDs to delete.</p>\n",
              "optional": true,
              "type": "String[]",
              "html_type": "String[]"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "PushSchedules",
          "shortDoc": "Deletes a scheduled push notification. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Queries the list of scheduled push notifications.</p>\n\n<p>The current logged-in user must be an application admin to use this API.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "push_schedule/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Available on Release 3.2.0 and later.</p>\n\n<pre><code>Cloud.PushSchedules.query({}, function(e) {\n    if (e.success) {\n        Ti.API.info(\"List of scheduled push notifications:\");\n        e.push_schedules.forEach(function(push){\n            Ti.API.info(\"\\t\" + push.name);\n        }\n    } else {\n        Ti.API.error('Error: ' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/push_schedules/query.json?key=&lt;APP_API_KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryPushSchedules\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"push_schedules\": [\n      {\n        \"id\": \"526ae82db93e7206700001e1\",\n        \"name\": \"test\",\n        \"start_time\": \"2013-10-24T00:00:00+0000\",\n        \"push_notification\": {\n          \"channel\": \"test\",\n          \"payload\": \"test schedule\"\n        },\n        \"recurrence\": {\n          \"interval\": \"daily\",\n          \"end_time\": \"2013-10-31T00:00:00+0000\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSPushSchedules query:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu push_schedules\", (unsigned long)((NSArray *) e.response[@\"push_schedules\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSPushSchedules.query(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray schedules = e.getResponse().getJSONArray(\"push_schedules\");\n                    if (schedules.length() &lt;= 0) {\n                        Log.i(\"APSPushSchedules\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; schedules.length(); i++) {\n                            Log.i(\"APSPushSchedules\", schedules.getJSONObject(i).toString());\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSPushSchedules\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSPushSchedules\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSPushSchedules\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n  Log.e(\"APSPushSchedules\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushSchedulesQuery(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.push_schedules.forEach(function(push) {\n            console.log(push.name)\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "name",
              "doc": "<p>Name given to the scheduled push notification.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "push_schedules",
              "doc": "<p>A list of scheduled push notifications matching the query.</p>\n",
              "optional": true,
              "type": "PushSchedules[]",
              "html_type": "PushSchedules[]"
            }
          ],
          "owner": "PushSchedules",
          "shortDoc": "Queries the list of scheduled push notifications. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates a scheduled push notification. All parameters specified in the PushSchedules\n<a href=\"#!/api/PushSchedules-method-create\" rel=\"PushSchedules-method-create\" class=\"docClass\">create</a> method can be updated, with the following exceptions:</p>\n\n<ul>\n<li>The schedule's start time cannot be updated, and the <code>start_time</code> parameter is ignored, if provided.</li>\n<li>When specifying a new <code>end_time</code> parameter, the new date and time must be greater than\nthe current time, and the previously specified <code>end_time</code> value must not have expired.</li>\n</ul>\n\n\n<p>The current user must be an application administrator to invoke the command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "push_schedule/update.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This method is not supported by Titanium.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>The following cURL command updates just the <code>payload</code> of the scheduled push notification.</p>\n\n<pre><code>curl -X PUT -b cookies.txt -c cookies.txt -F \"id=&lt;PUSH_NOTIFICTION_ID&gt;\" -F 'schedule={\"start_time\":\"2016-12-25T00:00\", \"name\":\"test\", \"push_notification\":{\"channel\":\"test\",\"payload\":\"test schedule\"}, \"recurrence\":{\"interval\":\"daily\", \"end_time\":\"2017-03-25T00:00\"}}' \"https://api.cloud.appcelerator.com/v1/push_schedules/update.json?key=g5d7G8agFnzjOJ5kV2qjhIaKp9Hi4EXW&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updatePushSchedule\"\n  },\n  \"response\": {\n    \"push_schedules\": [\n      {\n        \"id\": \"5357f7055714f51855013525\",\n        \"name\": \"test\",\n        \"start_time\": \"2016-12-25T00:00:00+0000\",\n        \"push_notification\": {\n          \"channel\": \"test\",\n          \"payload\": \"test schedule\"\n        },\n        \"recurrence\": {\n          \"interval\": \"daily\",\n          \"end_time\": \"2017-03-25T00:00:00+0000\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Use the [<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/ios/Classes/APSCloud.html#//api/name/sendRequest:method:data:handler:\">APSCloud sendRequest</a>]\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Use the\n<a href=\"http://docs.appcelerator.com/aps-sdk-apidoc/latest/android/com/appcelerator/aps/APSCloud.html#sendRequest%28java.lang.String,java.lang.String,java.util.Map,%20com.appcelerator.aps.APSResponseHandler%29\">APSCloud.sendRequest()</a>\nmethod to invoke this REST API directly.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.pushSchedulesUpdate({\n    id: pushScheduleId,\n    schedule: {\n        'start_time':'2016-12-25T00:00',\n        'name':'test',\n        'push_notification': {'channel':'test','payload':'test schedule'},\n        'recurrence': {'interval':'daily', 'end_time':'2017-03-25T00:00'}\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.push_schedules[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "schedule",
              "doc": "<p>Push notification to schedule.</p>\n",
              "optional": false,
              "type": "PushSchedulePayload",
              "html_type": "PushSchedulePayload"
            },
            {
              "name": "id",
              "doc": "<p>ID of the PushSchedule object returned by <a href=\"#!/api/PushSchedules-method-create\" rel=\"PushSchedules-method-create\" class=\"docClass\">create</a>.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "where",
              "doc": "<p>A JSON-encoded object that defines a location query used to select the devices\nthat will receive the scheduled notification. Up to 1000 users can be returned by the query. To specify a location query, set the <code>loc</code> field to a\n<a href=\"http://docs.mongodb.org/manual/reference/operator/query-geospatial/\">MongoDB Geospatial Query</a>.\nThe following query searches for all users within 2 km of Oakland, CA, USA:</p>\n\n<pre><code>where={\n  \"loc\": {\n    \"$nearSphere\" : { \n      \"$geometry\" : { \n        \"type\" : \"Point\" , \n        \"coordinates\" : [-122.2708,37.8044] } , \n        \"$maxDistance\" : 2000 \n      }\n    }\n  }\n</code></pre>\n\n<p>For an example of using this parameter, see the REST examples in the PushSchedules <a href=\"#!/api/PushSchedules-method-create\" rel=\"PushSchedules-method-create\" class=\"docClass\">create</a> method.\nFor details about using the <code>where</code> parameter, see the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "push_schedules",
              "doc": "<p>A single-element array containing the updated scheduled push object.</p>\n",
              "optional": true,
              "type": "PushSchedules[]",
              "html_type": "PushSchedules[]"
            }
          ],
          "owner": "PushSchedules",
          "shortDoc": "Updates a scheduled push notification. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "PushSchedulePayload",
    "doc": "<p>The data type to pass to either the <a href=\"#!/api/PushSchedules-method-create\" rel=\"PushSchedules-method-create\" class=\"docClass\">PushSchedules.create</a> or\n<a href=\"#!/api/PushSchedules-method-update\" rel=\"PushSchedules-method-update\" class=\"docClass\">PushSchedules.update</a> method.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
      "pseudo": true
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "name",
          "id": "property-name",
          "doc": "<p>Arbitray name to give to the scheduled push notification.</p>\n",
          "type": "String",
          "owner": "PushSchedulePayload",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "linenr": 0
            }
          ],
          "optional": false,
          "meta": {
            "[:hide]": false
          },
          "name": "push_notification",
          "id": "property-push_notification",
          "doc": "<p>Push notification to send.</p>\n\n<ul>\n<li><em>channel</em> (String): Name of the channel to send the push notification to.\nThe name of the push channel cannot start with a hash symbol ('#') or contain a comma (',').</li>\n<li><em>payload</em> (<a href=\"#!/api/PushPayload\" rel=\"PushPayload\" class=\"docClass\">PushPayload</a>): Payload to send to the device. (<strong>required</strong>).</li>\n<li><em>to_ids</em> (Array&lt;String&gt;/String): Array or comma-separated list of IDs to send push notifications to.</li>\n<li><p><em>options</em> (Hash): Dictionary to specify additional options:</p>\n\n<ul>\n<li><em>expire_after_seconds</em> (Number): Expiration time in seconds of when to stop\nsending the push notification based on the start date. For example, if the push\nnotification is scheduled to be sent in a week and the expiration time is for a\nday.  The push expires in eight days and will not be sent if the user's device\nhas been off before the send day and after the end of the expiration period.</li>\n</ul>\n</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "PushSchedulePayload",
          "shortDoc": "Push notification to send. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "recurrence",
          "id": "property-recurrence",
          "doc": "<p>Schedules the recurrence of the push notification.</p>\n\n<ul>\n<li><em>interval</em> (String): Set to either <code>daily</code>, <code>weekly</code> or <code>monthly</code>.</li>\n<li><em>end_time</em> (Date): Datetime to end the push notifications in ISO 8601 format.\nMust occur after <em>start_time</em>.</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "PushSchedulePayload",
          "shortDoc": "Schedules the recurrence of the push notification. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/PushSchedules/PushSchedulePayload.yml",
              "linenr": 0
            }
          ],
          "optional": false,
          "meta": {
            "[:hide]": false
          },
          "name": "start_time",
          "id": "property-start_time",
          "doc": "<p>Datetime to start the push notifications in ISO 8601 format</p>\n",
          "type": "Date",
          "owner": "PushSchedulePayload",
          "html_type": "Date",
          "html_meta": {
          }
        }
      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "html_meta": {
      "pseudo": [
        "<p class='private'><strong>NOTE</strong> ",
        "This is an abstract type. Any object meeting this description can be used ",
        "where this type is used.</p>"
      ]
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Reviews",
    "doc": "<p>The Reviews API lets you associate user reviews and ratings with an ArrowDB object. Currently, reviews\ncan be added to the following ArrowDB object types:</p>\n\n<ul>\n<li><a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a></li>\n<li><a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a></li>\n<li><a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a></li>\n<li><a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a></li>\n<li><a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a></li>\n<li><a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a></li>\n<li><a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a></li>\n<li><a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a></li>\n<li><a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a></li>\n</ul>\n\n\n<p>If an ArrowDB object has one or more reviews associated with it, it returns the total\nnumber of reviews, number of ratings, average rating value, and a summary of ratings when the object is\nqueried or updated:</p>\n\n<pre><code>\"reviews_count\": 2,\n\"ratings_count\": 2,\n\"ratings_average\": 150.0,\n\"ratings_summary\": {\n      \"100\": 1,\n        \"200\": 1\n}\n</code></pre>\n",
    "alternateClassNames": [

    ],
    "mixins": [
      "Reviewable"
    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "checkin",
          "id": "property-checkin",
          "doc": "<p>Checkin object associated with this review.</p>\n",
          "type": "Checkins",
          "owner": "Reviews",
          "html_type": "Checkins",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "content",
          "id": "property-content",
          "doc": "<p>Review or comment text.</p>\n",
          "type": "String",
          "owner": "Reviews",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this review object.</p>\n",
          "type": "Date",
          "owner": "Reviews",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "String/Hash",
          "owner": "Reviews",
          "shortDoc": "User defined fields. ...",
          "html_type": "String/Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_object",
          "id": "property-custom_object",
          "doc": "<p>Custom object associated with this review.</p>\n",
          "type": "CustomObjects",
          "owner": "Reviews",
          "html_type": "CustomObjects",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "event",
          "id": "property-event",
          "doc": "<p>Event object associated with this review.</p>\n",
          "type": "Events",
          "owner": "Reviews",
          "html_type": "Events",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>Photo object associated with this review.</p>\n",
          "type": "Photos",
          "owner": "Reviews",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "place",
          "id": "property-place",
          "doc": "<p>Place object associated with this review.</p>\n",
          "type": "Places",
          "owner": "Reviews",
          "html_type": "Places",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "post",
          "id": "property-post",
          "doc": "<p>Post object associated with this review.</p>\n",
          "type": "Posts",
          "owner": "Reviews",
          "html_type": "Posts",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "rating",
          "id": "property-rating",
          "doc": "<p>Rating associated with review.</p>\n",
          "type": "String",
          "owner": "Reviews",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_average",
          "id": "property-ratings_average",
          "doc": "<p>Average rating for this object.\nOnly present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Average rating for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_count",
          "id": "property-ratings_count",
          "doc": "<p>Total number of reviews for this object that include a rating.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object that include a rating. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "ratings_summary",
          "id": "property-ratings_summary",
          "doc": "<p>Breakdown of the number of reviews that specified a given rating value. For\nexample, if your ratings range from 1-5, the ratings summary might look like this:</p>\n\n<pre><code>ratings_summary: {\n    \"1\" : 1,\n    \"2\" : 0,\n    \"3\" : 5,\n    \"4\" : 50,\n    \"5\" : 12\n}\n</code></pre>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Hash",
          "owner": "Reviewable",
          "shortDoc": "Breakdown of the number of reviews that specified a given rating value. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "review",
          "id": "property-review",
          "doc": "<p>Review object associated with this review.</p>\n",
          "type": "Reviews",
          "owner": "Reviews",
          "html_type": "Reviews",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviewed_object",
          "id": "property-reviewed_object",
          "doc": "<p>Object whose <code>type</code> and <code>id</code> fields identify, respectively, the type (Status or Photo, for example) and\nthe ID of the reviewed object.</p>\n",
          "type": "Hash",
          "owner": "Reviews",
          "shortDoc": "Object whose type and id fields identify, respectively, the type (Status or Photo, for example) and\nthe ID of the rev...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews",
          "id": "property-reviews",
          "doc": "<p>List of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Reviews[]",
          "owner": "Reviewable",
          "shortDoc": "List of reviews for this object. ...",
          "html_type": "Reviews[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/mixins/Reviewable.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "reviews_count",
          "id": "property-reviews_count",
          "doc": "<p>Total number of reviews for this object.</p>\n\n<p>Only present if the object has been reviewed.</p>\n",
          "type": "Number",
          "owner": "Reviewable",
          "shortDoc": "Total number of reviews for this object. ...",
          "html_type": "Number",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "status",
          "id": "property-status",
          "doc": "<p>Status object associated with this review.</p>\n",
          "type": "Statuses",
          "owner": "Reviews",
          "html_type": "Statuses",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>List of tags for this review.</p>\n",
          "type": "String[]",
          "owner": "Reviews",
          "html_type": "String[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this review object.</p>\n",
          "type": "Date",
          "owner": "Reviews",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/Reviews.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>User who created the review.</p>\n",
          "type": "Users",
          "owner": "Reviews",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Reviews objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Reviews objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>The reviewed object (<a href=\"#!/api/Reviews-property-post\" rel=\"Reviews-property-post\" class=\"docClass\">Post</a>, <a href=\"#!/api/Reviews-property-photo\" rel=\"Reviews-property-photo\" class=\"docClass\">Photo</a>, <a href=\"#!/api/Reviews-property-user\" rel=\"Reviews-property-user\" class=\"docClass\">User</a>, <a href=\"#!/api/Reviews-property-event\" rel=\"Reviews-property-event\" class=\"docClass\">Event</a>,\n<a href=\"#!/api/Reviews-property-checkin\" rel=\"Reviews-property-checkin\" class=\"docClass\">Checkin</a>, <a href=\"#!/api/Reviews-property-place\" rel=\"Reviews-property-place\" class=\"docClass\">Place</a>, <a href=\"#!/api/Reviews-property-custom_object\" rel=\"Reviews-property-custom_object\" class=\"docClass\">CustomObject</a>,\n<a href=\"#!/api/Reviews-property-status\" rel=\"Reviews-property-status\" class=\"docClass\">Status</a>, or <a href=\"#!/api/Reviews-property-review\" rel=\"Reviews-property-review\" class=\"docClass\">Review</a>) of each matched object is not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "reviews/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Review objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"reviews/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Review objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/reviews/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Review objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"reviews/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Review object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Review objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"reviews/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Review objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsBatchDelete({\n    where: {\n        'reviews_count': 1\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Reviews objects to delete.\nIf not specified, all Reviews objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Reviews",
          "shortDoc": "Deletes Reviews objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Review objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "reviews/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Review objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"reviews/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/reviews/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"reviewsCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Review objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"reviews/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Review objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"reviews/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Review objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Reviews",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Adds a review with an optional integer rating. You can also use this API to add\ncomments or likes.</p>\n\n<p>Once an object has one or more reviews (comments) attached to it, it will\nreturn a total review count, rating_count, average rating and a breakdown of\neach rating value:</p>\n\n<pre><code>\"reviews_count\": 2,\n\"ratings_count\": 2,\n\"ratings_average\": 150.0,\n\"ratings_summary\": {\n  \"100\": 1,\n  \"200\": 1\n},\n</code></pre>\n\n<p>To create a review, you must specify a target object using one of the <code>&lt;object&gt;_id</code> parameters,\nsuch as <code>photo_id</code> or <code>post_id</code>. Only one <code>&lt;object&gt;_id</code> parameter may be specified in a request.\nTo specify a <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">User</a> to review, use the the <code>user_object_id</code> parameter.</p>\n\n<p>An application admin can create a review on behalf of another user by\nspecifying that user's ID in the <code>user_id</code> method parameter.</p>\n\n<p>A review must include either <code>content</code> or <code>rating</code>. It can also include both.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "reviews/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new review and checks the response.</p>\n\n<pre><code>Cloud.Reviews.create({\n    post_id: savedPostId,\n    rating: 1,\n    content: 'Good'\n}, function (e) {\n    if (e.success) {\n        var review = e.reviews[0];\n        alert('Success:\\n' +\n            'id: ' + review.id + '\\n' +\n            'rating: ' + review.rating + '\\n' +\n            'content: ' + review.content + '\\n' +\n            'updated_at: ' + review.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Creates a new Review for the specified Photos object.</p>\n\n<pre><code> curl -F \"pretty_json=true\" -F \"photo_id=5493ad44dda09576ff000004\" -F \"content=nice hair\" -F \"rating=1\" \"http://&lt;host&gt;/v1/reviews/create.json?key=&lt;KEY&gt;&amp;_session_id=&lt;SESSION_ID\"\n\n {\n   \"meta\": {\n     \"code\": 200,\n     \"status\": \"ok\",\n     \"method_name\": \"createReview\"\n   },\n   \"response\": {\n     \"reviews\": [\n       {\n         \"id\": \"5493addbdda09576ff000011\",\n         \"rating\": 1,\n         \"content\": \"nice hair\",\n         \"created_at\": \"2014-12-19T04:47:23+0000\",\n         \"updated_at\": \"2014-12-19T04:47:23+0000\",\n         \"user_id\": \"54928d9fdda0952c2b000001\",\n         \"reviewed_object\": {\n           \"type\": \"Photo\",\n           \"id\": \"5493ad44dda09576ff000004\"\n         }\n       }\n     ]\n   }\n }\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"post_id\" : savedPostId,\n                         @\"rating\" : @1,\n                         @\"content\" : @\"Good\"\n                      };\n[APSReviews create:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *reviews = e.response[@\"reviews\"];\n      NSDictionary *review = reviews[0];\n      NSString *message =[NSString stringWithFormat:@\"id : %@\\n rating : %@\\n content : %@\\nUpdated at : %@\\n\",\n                              review[@\"id\"],\n                              review[@\"rating\"],\n                              review[@\"content\"],\n                              review[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\ndata.put(\"rating\", \"1\");\ndata.put(\"content\", \"Good\");\n\ntry {\n    APSReviews.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSReviews\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSReviews\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSReviews\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsCreate({\n    post_id: savedPostId,\n    rating: 1,\n    content: 'Good'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.reviews[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>ID of the <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of the <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_object_id",
              "doc": "<p>ID of the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>ID of the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "checkin_id",
              "doc": "<p>ID of the <a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_id",
              "doc": "<p>ID of the <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_object_id",
              "doc": "<p>ID of the <a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "status_id",
              "doc": "<p>ID of the <a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "content",
              "doc": "<p>Review or comment text.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "rating",
              "doc": "<p>Rating to be associated with review. You can use \"1\" to represent one <a href=\"#!/api/Likes\" rel=\"Likes\" class=\"docClass\">Like</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "allow_duplicate",
              "doc": "<p>By default, the same user can only submit one review/comment per object.\nSet this flag to <code>true</code> to allow the user to add multiple  reviews or comments to\nthe same object.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>ID of the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> object to create the review on behalf of.</p>\n\n<p>The currently logged-in user must be an application admin to create a review on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "reviews",
              "doc": "<p>Single-element array containing the newly-created review.</p>\n",
              "optional": true,
              "type": "Reviews[]",
              "html_type": "Reviews[]"
            }
          ],
          "owner": "Reviews",
          "shortDoc": "Adds a review with an optional integer rating. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Delete the review (comment) with the given <code>id</code>. Only the original submitter\ncan delete the review. If the review has a rating attached to\nit, deleting the review will update the average rating and rating summary.</p>\n\n<p>To delete a review, you must specify <strong>both</strong> the ID of the review and the ID of\nthe reviewed object (<a href=\"#!/api/Reviews-property-post\" rel=\"Reviews-property-post\" class=\"docClass\">Post</a>, <a href=\"#!/api/Reviews-property-photo\" rel=\"Reviews-property-photo\" class=\"docClass\">Photo</a>, <a href=\"#!/api/Reviews-property-user\" rel=\"Reviews-property-user\" class=\"docClass\">User</a>, <a href=\"#!/api/Reviews-property-event\" rel=\"Reviews-property-event\" class=\"docClass\">Event</a>,\n<a href=\"#!/api/Reviews-property-checkin\" rel=\"Reviews-property-checkin\" class=\"docClass\">Checkin</a>, <a href=\"#!/api/Reviews-property-place\" rel=\"Reviews-property-place\" class=\"docClass\">Place</a>, <a href=\"#!/api/Reviews-property-custom_object\" rel=\"Reviews-property-custom_object\" class=\"docClass\">CustomObject</a>,\n<a href=\"#!/api/Reviews-property-status\" rel=\"Reviews-property-status\" class=\"docClass\">Status</a>, or <a href=\"#!/api/Reviews-property-review\" rel=\"Reviews-property-review\" class=\"docClass\">Review</a>. The reviewed object is not deleted, however.</p>\n\n<p>An application admin can delete any Review object.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "reviews/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes a review and checks the response.</p>\n\n<pre><code>Cloud.Reviews.remove({\n    post_id: savedPostId,\n    review_id: savedReviewId\n}, function (e) {\n    if (e.success) {\n        alert('Success');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/reviews/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;post_id=4e33a817d9ca724745000003&amp;review_id=4e33a817d9ca724745000006\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"post_id\" : savedPostId,\n                         @\"review_id\" : savedReviewId\n                      };\n[APSReviews remove:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\ndata.put(\"review_id\", \"4e33a817d9ca724745000006\");\n\ntry {\n\n    APSReviews.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n               Log.e(\"APSReviews\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSReviews\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSReviews\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsDelete({\n    post_id: savedPostId,\n    review_id: savedReviewId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "review_id",
              "doc": "<p>Review object to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Reviews",
          "shortDoc": "Delete the review (comment) with the given id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Perform custom query of reviews with sorting and paginating. Currently you can\nnot query or sort data stored inside array or hash in custom fields.</p>\n\n<p>The query must be limited to reviews of a given object (by specifying one of <code>post_id</code>,\n<code>photo_id</code>, etc.) or limited to reviews generated by a given user (by specifying\n<code>owner_id</code>.</p>\n\n<p>In addition to custom fields, the following pre-defined fields can be used to\nquery and sort reviews:</p>\n\n<ul>\n<li><code>user_id</code> : <code>String</code>. Review owner's user ID.</li>\n<li><code>rating</code> : <code>Integer</code>. Rating assigned to this review.</li>\n<li><code>tags_array</code> : <code>String</code>. Tags associated with the review.</li>\n<li><code>created_at</code> : <code>Date</code>. Timestamp when the review was created.</li>\n<li><code>updated_at</code> : <code>Date</code>. Timestamp when the review was last updated.</li>\n</ul>\n\n\n<p>You can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "reviews/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a list of reviews and checks the response.</p>\n\n<pre><code>Cloud.Reviews.query({\n    page: 1,\n    per_page: 20,\n    where: {\n        rating: { '$gt': 5.0 }\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.reviews.length);\n        for (var i = 0; i &lt; e.reviews.length; i++) {\n            var review = e.reviews[i];\n            alert('id: ' + review.id + '\\n' +\n                'rating: ' + review.rating + '\\n' +\n                'content: ' + review.content + '\\n' +\n                'updated_at: ' + review.updated_at);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Queries for reviews with a rating of \"5\" that were created by the user specified by the\n<code>owner_id</code> parameter.</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"rating\":5.0}}' \"https://&lt;HOST&gt;/v1/reviews/query.json?owner_id=54bd6e5e8a1b3c092949f265&amp;key=&lt;KEY&gt;&amp;host=api.cloud.appcelerator.com&amp;pretty_json=true\"\n\n{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"queryReviews\"\n  },\n  \"response\": {\n    \"reviews\": [\n      {\n        \"id\": \"54bd6f08351b7909384bc1c1\",\n        \"rating\": 5,\n        \"created_at\": \"2015-01-19T20:54:32+0000\",\n        \"updated_at\": \"2015-01-19T20:54:32+0000\",\n        \"user_id\": \"54bd6e5e8a1b3c092949f265\",\n        \"reviewed_object\": {\n          \"type\": \"Photo\",\n          \"id\": \"54bd6f012eb3b409394c3a6d\"\n        },\n        \"custom_fields\": {\n        }\n      },\n      {\n        \"id\": \"54bd6ea32eb3b409434d86d5\",\n        \"rating\": 5,\n        \"created_at\": \"2015-01-19T20:52:51+0000\",\n        \"updated_at\": \"2015-01-19T20:52:51+0000\",\n        \"user_id\": \"54bd6e5e8a1b3c092949f265\",\n        \"reviewed_object\": {\n          \"type\": \"Status\",\n          \"id\": \"54bd68a2351b7909404f245d\"\n        },\n        \"custom_fields\": {\n        }\n      },\n      {\n        \"id\": \"54bd68d42eb3b409434d5547\",\n        \"rating\": 5,\n        \"created_at\": \"2015-01-19T20:28:04+0000\",\n        \"updated_at\": \"2015-01-19T20:31:17+0000\",\n        \"user_id\": \"54ab2a07d3a37bd24a053578\",\n        \"reviewed_object\": {\n          \"type\": \"Status\",\n          \"id\": \"a23468a2351b7909404f245d\"\n        },\n        \"custom_fields\": {\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"page\" : @1,\n                         @\"per_page\" : @20,\n                         @\"where\" : @{\n                            @\"$gt\" : @5.0\n                         }\n                      };\n[APSReviews query:data withBlock:^(APSResponse *e) {\n    if (e.success){\n        NSArray *reviews = e.response[@\"reviews\"];\n        for (NSDictionary *review in reviews) {\n          NSString *message =[NSString stringWithFormat:@\"id : %@\\n rating : %@\\n content : %@\\nUpdated at : %@\\n\",\n                                  review[@\"id\"],\n                                  review[@\"rating\"],\n                                  review[@\"content\"],\n                                  review[@\"updated_at\"]];\n\n          [[[UIAlertView alloc] initWithTitle:@\"Success\"\n                                      message:message\n                                     delegate:nil\n                            cancelButtonTitle:@\"OK\"\n                            otherButtonTitles:nil] show];\n        }\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n    JSONObject params = new JSONObject(\"{'rating': {'$gt': 7.0}}\");\n    data.put(\"where\", params);\n\n    APSReviews.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray reviews = e.getResponse().getJSONArray(\"reviews\");\n                    if (reviews.length() &lt;= 0) {\n                        Log.i(\"APSReviews\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; reviews.length(); i++) {\n                            JSONObject review = reviews.getJSONObject(i);\n                            Log.i(\"APSReviews\", review.getString(\"rating\") + \":\" + review.getString(\"content\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSReviews\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSReviews\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSReviews\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSReviews\", \"Exception thrown: \" + e.toString());\n} catch (JSONException e) {\n    Log.e(\"APSReviews\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsQuery({\n    limit: 10,\n    where: {\n        rating: {'$gt': 5.0}\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.reviews.forEach(function(review) {\n            console.log(review);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>Limit query to reviews on the identified Post object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_id",
              "doc": "<p>Limit query to reviews on the identified Photo object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_id",
              "doc": "<p>Limit query to reviews on the identified User object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>Limit query to reviews on the identified Event object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>Limit query to reviews on the identified Place object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "checkin_id",
              "doc": "<p>Limit query to reviews on the identified Checkin object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_id",
              "doc": "<p>Limit query to reviews on the identified Review object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_object_id",
              "doc": "<p>Limit query to reviews on the identified Custom object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "status_id",
              "doc": "<p>Limit query to reviews on the identified Status object.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "owner_id",
              "doc": "<p>Limit query results to reviews submitted by the identified  user.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Review object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "reviews",
              "doc": "<p>List of reviews matching the query parameters.</p>\n",
              "optional": true,
              "type": "Reviews[]",
              "html_type": "Reviews[]"
            }
          ],
          "owner": "Reviews",
          "shortDoc": "Perform custom query of reviews with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Shows the review with the given <code>id</code>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "reviews/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves information about a review and checks the response.</p>\n\n<pre><code>Cloud.Reviews.show({\n    post_id: savedPostId,\n    review_id: savedReviewId\n}, function (e) {\n    if (e.success) {\n        var review = e.reviews[0];\n        alert('Success:\\n' +\n            'id: ' + review.id + '\\n' +\n            'rating: ' + review.rating + '\\n' +\n            'content: ' + review.content + '\\n' +\n            'updated_at: ' + review.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Shows the specified review.</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://&lt;HOST&gt;/v1/reviews/show.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true&amp;review_id=54bd68d42eb3b409434d5547\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showReview\"\n  },\n  \"response\": {\n    \"reviews\": [\n      {\n        \"id\": \"54bd68d42eb3b409434d5547\",\n        \"rating\": 3,\n        \"created_at\": \"2015-01-19T20:28:04+0000\",\n        \"updated_at\": \"2015-01-19T20:31:17+0000\",\n        \"reviewed_object\": {\n          \"type\": \"Status\",\n          \"id\": \"54bd68a2351b7909404f245d\"\n        },\n        \"custom_fields\": {\n        },\n        \"user\": {\n          \"id\": \"54ab2a07d3a37bd24a053578\",\n          \"created_at\": \"2015-01-06T00:19:19+0000\",\n          \"updated_at\": \"2015-01-19T20:21:14+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2015-01-06T00:19:19+0000\",\n          \"username\": \"tim\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"post_id\" : savedPostId,\n                         @\"review_id\" : savedReviewId\n                      };\n[APSReviews show:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *reviews = e.response[@\"reviews\"];\n      NSDictionary *review = reviews[0];\n      NSString *message =[NSString stringWithFormat:@\"id : %@\\n rating : %@\\n content : %@\\nUpdated at : %@\\n\",\n                              review[@\"id\"],\n                              review[@\"rating\"],\n                              review[@\"content\"],\n                              review[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\ndata.put(\"review_id\", \"4e33a9f5d9ca724769000006\");\n\ntry {\n    APSReviews.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSReviews\", e.getResponseString());\n            } else {\n                Log.e(\"APSReviews\", \"ERROR: \" + e.getErrorMessage());\n            }\n         }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSReviews\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSReviews\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsShow({\n    post_id: savedPostId,\n    review_id: savedReviewId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.reviews[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "review_id",
              "doc": "<p>Review object to show.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Review object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "reviews",
              "doc": "<p>Single-element array containing the identified review.</p>\n",
              "optional": true,
              "type": "Reviews[]",
              "html_type": "Reviews[]"
            }
          ],
          "owner": "Reviews",
          "shortDoc": "Shows the review with the given id. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates the review with the given <code>id</code>.</p>\n\n<p>Ordinary users can update reviews they own or have update access to.</p>\n\n<p>An application admin can update a Review on behalf of another user by\nspecifying that user's ID in the <code>user_id</code> method parameter.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "reviews/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates a review and checks the response.</p>\n\n<pre><code>Cloud.Reviews.update({\n    post_id: savedPostId,\n    review_id: savedReviewId,\n    rating: 100,\n    content: 'Very good!'\n}, function (e) {\n    if (e.success) {\n        var review = e.reviews[0];\n        alert('Success:\\n' +\n            'id: ' + review.id + '\\n' +\n            'rating: ' + review.rating + '\\n' +\n            'content: ' + review.content + '\\n' +\n            'updated_at: ' + review.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"status_id=54bd7a9b8a1b3c09334fae75\" -F \"review_id=4e33a9f5d9ca724769000006\" -F \"rating=9\" -F \"content=cool hair\" https://api.cloud.appcelerator.com/v1/reviews/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"updateReview\"\n  },\n  \"response\": {\n    \"reviews\": [\n      {\n        \"id\": \"54bd7aa58a1b3c09294a5cd6\",\n        \"rating\": 9,\n        \"content\": \"cool hair\",\n        \"created_at\": \"2015-01-19T21:44:05+0000\",\n        \"updated_at\": \"2015-01-19T21:49:12+0000\",\n        \"reviewed_object\": {\n          \"type\": \"Status\",\n          \"id\": \"54bd7a9b8a1b3c09334fae75\"\n        },\n        \"custom_fields\": {\n        },\n        \"user\": {\n          \"id\": \"54bd6e5e8a1b3c092949f265\",\n          \"created_at\": \"2015-01-19T20:51:42+0000\",\n          \"updated_at\": \"2015-01-19T20:51:42+0000\",\n          \"external_accounts\": [\n\n          ],\n          \"confirmed_at\": \"2015-01-19T20:51:42+0000\",\n          \"username\": \"abc\",\n          \"admin\": \"false\",\n          \"stats\": {\n            \"photos\": {\n              \"total_count\": 0\n            },\n            \"storage\": {\n              \"used\": 0\n            }\n          },\n          \"friend_counts\": {\n            \"requests\": 0,\n            \"friends\": 0\n          }\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n                         @\"post_id\" : savedPostId,\n                         @\"review_id\" : savedReviewId,\n                         @\"rating\" : @100,\n                         @\"content\" : @\"Very good!\"\n                      };\n[APSReviews update:data withBlock:^(APSResponse *e) {\n    if (e.success){\n      NSArray *reviews = e.response[@\"reviews\"];\n      NSDictionary *review = reviews[0];\n      NSString *message =[NSString stringWithFormat:@\"id : %@\\n rating : %@\\n content : %@\\nUpdated at : %@\\n\",\n                              review[@\"id\"],\n                              review[@\"rating\"],\n                              review[@\"content\"],\n                              review[@\"updated_at\"]];\n\n      [[[UIAlertView alloc] initWithTitle:@\"Success\" \n                                  message:message\n                                 delegate:nil \n                        cancelButtonTitle:@\"OK\" \n                        otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\"\n                                    message:e.errorMessage\n                                   delegate:nil\n                          cancelButtonTitle:@\"OK\"\n                          otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"post_id\", \"4e33a817d9ca724745000003\");\ndata.put(\"review_id\", \"4e33a9f5d9ca724769000006\");\ndata.put(\"rating\", \"1\");\ndata.put(\"content\", \"Good\");\n\ntry {\n    APSReviews.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSReviews\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSReviews\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSReviews\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Reviews/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.reviewsUpdate({\n    post_id: savedPostId,\n    review_id: savedReviewId,\n    rating: 100,\n    content: 'Very good!'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.reviews[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "post_id",
              "doc": "<p>ID of the <a href=\"#!/api/Posts\" rel=\"Posts\" class=\"docClass\">Posts</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of the <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">Photos</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_object_id",
              "doc": "<p>ID of the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>ID of the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "checkin_id",
              "doc": "<p>ID of the <a href=\"#!/api/Checkins\" rel=\"Checkins\" class=\"docClass\">Checkins</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_object_id",
              "doc": "<p>ID of the <a href=\"#!/api/Reviews\" rel=\"Reviews\" class=\"docClass\">Reviews</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_object_id",
              "doc": "<p>ID of the <a href=\"#!/api/CustomObjects\" rel=\"CustomObjects\" class=\"docClass\">CustomObjects</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "status_id",
              "doc": "<p>ID of the <a href=\"#!/api/Statuses\" rel=\"Statuses\" class=\"docClass\">Statuses</a> object to review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "review_id",
              "doc": "<p>ID of the Review object to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "content",
              "doc": "<p>Review or comment text.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "rating",
              "doc": "<p>Rating to be associated with review. You can use \"1\" to represent one <a href=\"#!/api/Likes\" rel=\"Likes\" class=\"docClass\">Like</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>ID of the <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> object to update the review on behalf of. The currently\nlogged-in user must be an application admin to create a review on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "allow_duplicate",
              "doc": "<p>By default, the same user can only submit one review/comment per object.\nSet this flag to <code>true</code> to allow the user to add multiple  reviews or comments to\nthe same object.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this review.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "reviews",
              "doc": "<p>Single-element array containing the updated review.</p>\n",
              "optional": true,
              "type": "Reviews[]",
              "html_type": "Reviews[]"
            }
          ],
          "owner": "Reviews",
          "shortDoc": "Updates the review with the given id. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "SocialIntegrations",
    "doc": "<p>The SocialIntegrations object lets users link their existing ArrowDB accounts to their social network accounts\n(Facebook or Twitter, for example) and login to ArrowDB using their social network account credentials. You\ncan also search for a user's Facebook friends who have installed the same application and linked their Facebook account to ArrowDB.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/SocialIntegrations.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/SocialIntegrations.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [
        {
          "tagname": "method",
          "name": "external_account_link",
          "deprecated": false,
          "id": "method-external_account_link",
          "doc": "<p>Associates an external account with an existing Appcelerator Cloud Services\nuser account. Registered and logged in Appcelerator Cloud Services users can\nlink one or more external accounts to their existing account. Once linked, the\nuser can login using either Appcelerator Cloud Services account or any of the\nlinked external accounts.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "users/external_account_link.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example links an external account and checks the response.</p>\n\n<pre><code>Cloud.SocialIntegrations.externalAccountLink({\n    type: 'facebook',\n    token: Ti.Facebook.accessToken\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"id=12345678\" -F \"type=facebook\" -F \"token=lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\" https://api.cloud.appcelerator.com/v1/users/external_account_link.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"linkExternalAccount\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n          {\n            \"external_id\": \"641643673\",\n            \"external_type\": \"facebook\",\n            \"token\": \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Appcelerator Cloud Services ios SDK comes with Facebook SDK and provides an\neasy way to do facebook link. Follow the <a href=\"https://github.com/facebook/facebook-ios-sdk\">facebook-ios-\nsdk</a> sample app instructions to\nedit your app-info.plist to add a URL type for your Facebook app id. Then add\nthe following method to your AppDelegate.m:</p>\n\n<pre><code>// pre 4.2\n- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url\n{\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n\n// 4.2+\n- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n</code></pre>\n\n<p>Modify the Appcelerator Cloud Services initialization call in your app\ndelegate to pass in the Facebook app id:</p>\n\n<pre><code>[ACSClient initializeWithOauthConsumerKey:oauthConsumerKey consumerSecret:oauthConsumerSecret customAppIds:[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>[ACSClient initializeWithAppKey:ACS_APP_KEY customAppIds:\n[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>To launch the Faceook Connect dialog to link with an existing user account,\nmake sure user is logged in, then call the following:</p>\n\n<pre><code>[[ACSClient defaultACSClient] facebookAuth:[NSArray arrayWithObjects:@\"publish_stream\", @\"email\", @\"offline_access\", nil] delegate:self];\n</code></pre>\n\n<p>If a user is already logged in to your app, it will link the user account with\nthe Facebook account that was just authorized. If no user is logged in to your\napp, it will perform a login to Appcelerator Cloud Services using the facebook\naccount information.</p>\n\n<p>Optionaly, if you would like to receive callbacks when Facebook link or login\nactions are taken, add <code>&lt;CCFBSessionDelegate&gt;</code> to you controller's delegate\nlist. Then implement the following methods:</p>\n\n<pre><code>-(void)fbDidLogin;\n-(void)fbDidNotLogin:(BOOL)cancelled error:(NSError *)error;\n</code></pre>\n\n<p>For other types of external accounts, you will have to use their SDKs to get\nthe uid and token first, then make the link call with the Appcelerator Cloud\nServices.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"type\": @\"facebook\",\n    @\"token\": accessToken\n};\n\n[APSSocialIntegrations externalAccountLink:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Linked %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"109216395704353\");\ndata.put(\"type\", \"facebook\");\ndata.put(\"token\", \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\");\n\ntry {\n    APSSocialIntegrations.externalAccountLink(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                Log.i(\"APSSocialIntegrations\", \"Success!\");\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/linkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.socialIntegrationsExternalAccountLink({\n    type: 'facebook',\n    token: facebookAccessToken\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>External account's user ID. Optional for Facebook; if ID is missing and <code>type</code>\nis <code>facebook</code>, Appcelerator Cloud Services uses the Facebook token to obtain\nthe user ID.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Type of the external account, for example, \"facebook\", \"linkedin\", or\n\"twitter\".</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "token",
              "doc": "<p>Token provided by the external account. Currently only Facebook tokens are\nvalidated  by the Appcelerator Cloud Services server.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>Single-element array containing the updated user record.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "SocialIntegrations",
          "shortDoc": "Associates an external account with an existing Appcelerator Cloud Services\nuser account. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "external_account_login",
          "deprecated": false,
          "id": "method-external_account_login",
          "doc": "<p>Users can login using an external account such as Facebook, Twitter,\nLinkedin, etc without creating an account with Appcelerator Cloud Services\nahead of time. The external account login creates a Appcelerator Cloud\nServices account if it hasn't been created, otherwise, it will login using the\nuser who has the matching external account info.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/external_account_login.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example logs a user in using an external account and checks the response.</p>\n\n<pre><code>Cloud.SocialIntegrations.externalAccountLogin({\n    type: 'facebook',\n    token: Ti.Facebook.accessToken\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"id=109216395704353\" -F type=\"facebook\" -F \"token=lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\" https://api.cloud.appcelerator.com/v1/users/external_account_login.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"externalAccountLogin\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n          {\n            \"external_id\": \"641643673\",\n            \"external_type\": \"facebook\",\n            \"token\": \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i\"\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>Appcelerator Cloud Services ios SDK comes with Facebook SDK and provides an\neasy way to do facebook login. Follow the <a href=\"https://github.com/facebook/facebook-ios-sdk\">facebook-ios-\nsdk</a> sample app instructions to\nedit your app-info.plist to add a URL type for your Facebook app id. Then add\nthe following method to your AppDelegate.m:</p>\n\n<pre><code>// pre 4.2\n- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url\n{\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n\n// 4.2+\n- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {\n    return [[[ACSClient defaultACSClient] getFacebook] handleOpenURL:url];\n}\n</code></pre>\n\n<p>Modify the Appcelerator Cloud Services initialization call in your app\ndelegate to pass in the Facebook app id:</p>\n\n<pre><code>[ACSClient initializeWithOauthConsumerKey:oauthConsumerKey consumerSecret:oauthConsumerSecret customAppIds:[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>[ACSClient initializeWithAppKey:ACS_APP_KEY customAppIds:\n[NSDictionary dictionaryWithObject:facebookAppId forKey:@\"Facebook\"]];\n</code></pre>\n\n<p>To perform a login using facebook connect, make sure user is not logged in to\nAppcelerator Cloud Services, then call the following:</p>\n\n<pre><code>[[ACSClient defaultACSClient] facebookAuth:[NSArray arrayWithObjects:@\"publish_stream\", @\"email\", @\"offline_access\", nil] delegate:self];\n</code></pre>\n\n<p>If a user is already logged in to your app, it will link the user account with\nthe Facebook account that was just authorized. If no user is logged in to your\napp, it will perform a login to Appcelerator Cloud Services using the facebook\naccount information.</p>\n\n<p>Optionaly, if you would like to receive callbacks when Facebook link or login\nactions are taken, add <code>&lt;CCFBSessionDelegate&gt;</code> to you controller's delegate\nlist. Then implement the following methods:</p>\n\n<pre><code>-(void)fbDidLogin;\n-(void)fbDidNotLogin:(BOOL)cancelled error:(NSError *)error;\n</code></pre>\n\n<p>For other types of external accounts, you will have to use their SDKs to get\nthe uid and token first, then make the link call with the Appcelerator Cloud\nServices.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"type\": @\"facebook\",\n    @\"token\": accessToken\n};\n\n[APSSocialIntegrations externalAccountLogin:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Loggedin %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"109216395704353\");\ndata.put(\"type\", \"facebook\");\ndata.put(\"token\", \"lqcs6jedOtdrYfu3CaIVR0GWlCnV1l3JbY1i-gFxNNc.eyJpdiI6Ims2STNfRmMxbXFJamoxWFlUWjFrTkEifQ.RW77c5r7ggvTobyL0INb6qscnpoyrrFrrJ6K_IldoJBxcxLkwus8SsLFAJmwy05nLa71zBEqdkm2wJMIn31iUW2mxd37eQX9JRNrtSWcgRpuRDuzjhB7f0u3J4WJYASRnJkq-8l0hr9jiLIDajkJRg\");\n\ntry {\n    APSSocialIntegrations.externalAccountLogin(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    String userId = e.getResponse().getJSONArray(\"users\").getJSONObject(0).getString(\"id\");\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Logged in! You are now logged in as \" + userId)\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/loginexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.socialIntegrationsExternalAccountLogin({\n    type: 'facebook',\n    token: facebookAccessToken\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>External account's user ID. Optional for Facebook; if ID is missing and <code>type</code>\nis <code>facebook</code>, Appcelerator Cloud Services uses the Facebook token to obtain\nthe user ID.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Type of the external account, for example, \"facebook\", \"linkedin\", or\n\"twitter\".</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "token",
              "doc": "<p>Token provided by the external account. Currently only Facebook tokens are\nvalidated  by the Appcelerator Cloud Services server.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>Single-element array containing the updated user record.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "SocialIntegrations",
          "shortDoc": "Users can login using an external account such as Facebook, Twitter,\nLinkedin, etc without creating an account with A...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "external_account_unlink",
          "deprecated": false,
          "id": "method-external_account_unlink",
          "doc": "<p>Disassociate an external account from a Appcelerator Cloud Services user\naccount.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "users/external_account_unlink.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example unlinks an external Facebook account.</p>\n\n<pre><code>Cloud.SocialIntegrations.externalAccountUnlink({\n    type: 'facebook',\n    id: facebookUserId\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/users/external_account_unlink.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;id=1234567&amp;type=facebook\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"unlinkExternalAccount\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n        ]\n      }\n    ]\n  }\n}\n\nFor Facebook:\n\nNSError *error;\n[[ACSClient defaultACSClient] unlinkFromFacebook:&amp;error;];\n</code></pre>\n\n<p>This is a synchronous call and doesn't have a callback method.</p>\n\n<p>For other types of external account, you need to perform the\nexternal_account_unlink call.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"type\": @\"facebook\",\n    @\"id\": facebookUserId\n};\n\n[APSSocialIntegrations externalAccountUnlink:data withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Unlinked %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"id\", \"109216395704353\");\ndata.put(\"type\", \"facebook\");\n\ntry {\n    APSSocialIntegrations.externalAccountUnlink(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Log.i(\"APSSocialIntegrations\", \"Success!\");\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/unlinkexternal.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.socialIntegrationsExternalAccountUnlink({\n    type: 'facebook',\n    id: facebookUserId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "id",
              "doc": "<p>External account's user ID.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "type",
              "doc": "<p>Type of the external account, for example, \"facebook\", \"linkedin\", or\n\"twitter\".</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>Single-element array containing the updated user record.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "SocialIntegrations",
          "shortDoc": "Disassociate an external account from a Appcelerator Cloud Services user\naccount. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "facebook_search_friends",
          "deprecated": false,
          "id": "method-facebook_search_friends",
          "doc": "<p>Find the current user's Facebook Friends who also registered in the same App.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "social/facebook/search_friends.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example retrieves a list of Facebook friends and checks the response.</p>\n\n<pre><code>Cloud.SocialIntegrations.searchFacebookFriends(function (e){\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/social/facebook/search_friends.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchFacebookFriends\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"4e9afa18356f4e647900002e\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"created_at\": \"2011-10-16T15:36:56+0000\",\n        \"updated_at\": \"2011-10-16T15:54:57+0000\",\n        \"external_accounts\": [\n          {\n            \"external_id\": \"641643673\",\n            \"external_type\": \"facebook\",\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSSocialIntegrations searchFacebookFriends:nil withBlock:^(APSResponse *e) {\n      if (e.success) {\n          NSString *message = [NSString stringWithFormat:@\"Found %lu users\", (unsigned long)((NSArray *) e.response[@\"users\"]).count ];\n          [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      } else {\n          [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n      }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    APSSocialIntegrations.searchFacebookFriends(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    if (users.length() &lt;= 0) {\n                        Log.i(\"APSSocialIntegrations\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject user = users.getJSONObject(i);\n                            Log.i(\"APSSocialIntegrations\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSSocialIntegrations\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSSocialIntegrations\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSSocialIntegrations\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/SocialIntegrations/facebook_friends.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.socialIntegrationsSearchFacebookFriends(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.users.forEach(function(user) {\n            console.log(user.first_name + ' ' + user.last_name);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>List of friends.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "SocialIntegrations",
          "shortDoc": "Find the current user's Facebook Friends who also registered in the same App. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Statuses",
    "doc": "<p>The Statuses object lets your application create and manage Twitter-like status messages.\nIf you are an application admin, you can <a href=\"#!/api/Statuses-method-create\" rel=\"Statuses-method-create\" class=\"docClass\">create</a> or <a href=\"#!/api/Statuses-method-update\" rel=\"Statuses-method-update\" class=\"docClass\">update</a> a\nstatus on behalf of another user by including the <code>su_id</code> field in the request.</p>\n\n<p>A status can optionally be associated with either a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object or an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a>\nobjects, but not both.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "acls",
          "id": "property-acls",
          "doc": "<p>Single-element array containing the <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> associated with this status object, if any.</p>\n",
          "type": "ACLs[]",
          "owner": "Statuses",
          "html_type": "ACLs[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Message creation date.</p>\n",
          "type": "Date",
          "owner": "Statuses",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "event",
          "id": "property-event",
          "doc": "<p>The <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object associated with this status.</p>\n",
          "type": "Events",
          "owner": "Statuses",
          "html_type": "Events",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>Generated unique ID for this status.</p>\n",
          "type": "String",
          "owner": "Statuses",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "message",
          "id": "property-message",
          "doc": "<p>Status message.</p>\n",
          "type": "String",
          "owner": "Statuses",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>The primary <a href=\"#!/api/Photos\" rel=\"Photos\" class=\"docClass\">photo</a> for this status.</p>\n",
          "type": "Photos",
          "owner": "Statuses",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "place",
          "id": "property-place",
          "doc": "<p>The <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object associated with this status.</p>\n",
          "type": "Places",
          "owner": "Statuses",
          "html_type": "Places",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "tags",
          "id": "property-tags",
          "doc": "<p>Comma-separated list of tags associated with this status.</p>\n",
          "type": "String",
          "owner": "Statuses",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Message update date.</p>\n",
          "type": "Date",
          "owner": "Statuses",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/Statuses.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "user",
          "id": "property-user",
          "doc": "<p>Status owner.</p>\n",
          "type": "Users",
          "owner": "Statuses",
          "html_type": "Users",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Statuses objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Statuses objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process. The associated\n<a href=\"#!/api/Statuses-property-event\" rel=\"Statuses-property-event\" class=\"docClass\">Event</a>, <a href=\"#!/api/Statuses-property-photo\" rel=\"Statuses-property-photo\" class=\"docClass\">Photo</a>, or <a href=\"#!/api/Statuses-property-place\" rel=\"Statuses-property-place\" class=\"docClass\">Place</a> of each matched object\nis not deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "statuses/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all Status objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"statuses/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All Status objects have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/statuses/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all Status objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"statuses/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All Status object have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all Status objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"statuses/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All Status objects have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.statusesBatchDelete({\n    where: {\n        'updated_at': {'$lt': '2014-01-01T00:00:00+0000'}\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Statuses objects to delete.\nIf not specified, all Statuses objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Statuses",
          "shortDoc": "Deletes Statuses objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of Status objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "statuses/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of Status objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"statuses/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/statuses/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"statusesCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of Status objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"statuses/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of Status objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"statuses/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.statusesCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of Status objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Statuses",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a status for the currenty logged in user. You can optionally associate a new status with\neither an existing <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object or an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object, but not both.</p>\n\n<p>Application admins can create a status on behalf of another user by including the\n<code>su_id</code> field in the request.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "statuses/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a status and checks the response.</p>\n\n<pre><code>Cloud.Statuses.create({\n    place_id: myPlaceId,\n    message: 'What a great view!',\n    photo: Titanium.Filesystem.getFile('photo.jpg')\n}, function (e) {\n    if (e.success) {\n        var status = e.statuses[0];\n        alert('Success:\\n' +\n            'id: ' + status.id + '\\n' +\n            'place: ' + status.place.name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"message=Having fun at the beach\" -F \"photo=@photo.jpg\" https://api.cloud.appcelerator.com/v1/statuses/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"createStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\":\"4d6e86ed6f70950c89000004\",\n        \"message\":\"Having fun at the beach\",\n        \"created_at\":\"2011-03-02T18:05:33+0000\",\n        \"updated_at\":\"2011-03-02T18:05:33+0000\",\n        \"photo\": {\n            \"id\":\"4dcf261cd0afbe1833000002\",\n            \"filename\":\"photo.jpg\",\n            \"size\":584344,\n            \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\":\"2011-05-15T01:02:20+0000\",\n            \"updated_at\":\"2011-05-15T01:02:20+0000\",\n            \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"message\": @\"Working hard at Appcelerator Cloud Services Office\"\n};\n\n[APSStatuses create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Status posted!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"message\", \"new status!\");\n\ntry {\n    APSStatuses.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Created!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSStatuses\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSStatuses\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;'),\n    fs = require('fs');\narrowDBApp.statusesCreate({\n    place_id: myPlaceId,\n    message: 'What a great view!',\n    photo: fs.createFileStream('photo.jpg')\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.statuses[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "message",
              "doc": "<p>Status message.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>ID of the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object this status is associated with. You can associate the status\neither with a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object or an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object, but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object this status is associated with. You can associate the status\neither with an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object or a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object, but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for this status.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for this status.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this status.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this status.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this status.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create the status on behalf of. You must be logged in as an application admin\nto create a status on behalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "statuses",
              "doc": "<p>Single-element array containing the newly-created status.</p>\n",
              "optional": true,
              "type": "Statuses[]",
              "html_type": "Statuses[]"
            }
          ],
          "owner": "Statuses",
          "shortDoc": "Creates a status for the currenty logged in user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>Deletes a status for the currenty logged in user.\nThe associated <a href=\"#!/api/Statuses-property-event\" rel=\"Statuses-property-event\" class=\"docClass\">Event</a>, <a href=\"#!/api/Statuses-property-photo\" rel=\"Statuses-property-photo\" class=\"docClass\">Photo</a>, or <a href=\"#!/api/Statuses-property-place\" rel=\"Statuses-property-place\" class=\"docClass\">Place</a> is not deleted.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "statuses/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0. This example deletes a status and checks the response.</p>\n\n<pre><code>Cloud.Statuses.delete({\n    status_id: statusID\n}, function (e) {\n    if (e.success) {\n        alert('Success!');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE \"https://api.cloud.appcelerator.com/v1/places/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;status_id=4d51d4186f70952d4c000006\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"deleteStatus\"\n  },\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"status_id\":@\"3453452345deadbeef345\"\n};\n\n[APSStatuses remove:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Removed!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"status_id\", \"3453452345deadbeef345\");\n\ntry {\n    APSStatuses.remove(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Toast.makeText(currentActivity, \"Removed!\", Toast.LENGTH_SHORT);\n            } else {\n                Log.e(\"APSStatuses\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSStatuses\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.statusesDelete({\n    place_id: myPlaceId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "status_id",
              "doc": "<p>ID of the status to delete.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to destroy the status on behalf of.</p>\n\n<p>The current login user must be an application admin to destroy a status on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Statuses",
          "shortDoc": "Deletes a status for the currenty logged in user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Performs a custom query of statuses with sorting and pagination. Currently you\ncan not query or sort data stored inside array or hash in custom fields.</p>\n\n<p>In addition to custom fields, the following pre-defined fields can be used to\nquery and sort statuses:</p>\n\n<ul>\n<li><code>user_id</code> : <code>String</code>.  Status owner's user ID.</li>\n<li><code>event_id</code> : <code>String</code>.  ID for the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> associated with this status.</li>\n<li><code>place_id</code> : <code>String</code>.  ID for the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Place</a> associated with this status.</li>\n<li><code>created_at</code> : <code>Date</code>.  Timestamp when the status was created.</li>\n<li><code>updated_at</code> : <code>Date</code>.  Timestamp when the status was last updated.</li>\n</ul>\n\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "statuses/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about statuses and checks the response.</p>\n\n<pre><code>Cloud.Statuses.query({\n    page: 1,\n    per_page: 20,\n    order: '-updated_at'\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i &lt; e.statuses.length; i++) {\n            var status = e.statuses[i];\n            alert('Success:\\n' +\n               'id: ' + status.id + '\\n' +\n               'message: ' + status.message + '\\n' +\n               'updated_at: ' + status.updated_at);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request that queries statuses created earlier than \"2011-03-02T19:05:33+0000\":</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode  'where={\"rating\":{\"$gt\":7.0},\"created_at\":{\"$lt\":\"2011-03-02T19:05:33+0000\"}}' \"https://api.cloud.appcelerator.com/v1/statuses/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"queryStatuses\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\":\"4d6e86ed6f70950c89000004\",\n        \"message\":\"Having fun at the beach\",\n        \"created_at\":\"2011-03-02T18:05:33+0000\",\n        \"updated_at\":\"2011-03-02T18:05:33+0000\",\n        \"photo\": {\n          \"id\":\"4dcf261cd0afbe1833000002\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-05-15T01:02:20+0000\",\n          \"updated_at\":\"2011-05-15T01:02:20+0000\",\n          \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"where\": @{\n        @\"create_at\":@{\n            @\"$lt\":@\"2011-03-02T19:05:33+0000\"\n        }\n    }\n};\n\n[APSStatuses query:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu statuses\", (unsigned long)((NSArray *)e.response[@\"statuses\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\ntry {\n    HashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\n    JSONObject params = new JSONObject(\"{created_at': {'$lt': '2011-03-02T19:05:33+0000'}}\");\n    data.put(\"where\", params);\n\n    APSStatuses.query(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray statuses = e.getResponse().getJSONArray(\"statuses\");\n                    if (statuses.length(); &lt;= 0) {\n                        Log.i(\"APSStatuses\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; statuses.length(); i++) {\n                            JSONObject status = statuses.getJSONObject(i);\n                            Log.i(\"APSStatuses\", status.getString(\"message\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSStatuses\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSStatuses\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSStatuses\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n} catch (APSCloudException e) {\n    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.statusesQuery({\n    order: '-updated_at',\n    limit: 20\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.statuses.forEach(function(status) {\n            console.log(status.message);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each Status object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in the response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects, such as owners and\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "statuses",
              "doc": "<p>List of statuses matching the query criteria.</p>\n",
              "optional": true,
              "type": "Statuses[]",
              "html_type": "Statuses[]"
            }
          ],
          "owner": "Statuses",
          "shortDoc": "Performs a custom query of statuses with sorting and pagination. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Returns the identified status message.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "statuses/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0. This example retrieves information about a status and checks the response.</p>\n\n<pre><code>Cloud.Statuses.show({\n    place_id: savedStatusId\n}, function (e) {\n    if (e.success) {\n        var status = e.statuses[0];\n        alert('Success:\\n' +\n            'id: ' + status.id + '\\n' +\n            'updated_at: ' + status.updated_at);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/statuses/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;status_id=4d6e88886f70950c89000005\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"showStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\":\"4d6e88886f70950c89000005\",\n        \"message\":\"At the beach!\",\n        \"created_at\":\"2011-03-02T18:12:24+0000\",\n        \"updated_at\":\"2011-03-02T18:12:24+0000\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{@\"status_id\": @\"4d6e88886f70950c89000005\"};\n[APSUsers show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *statuses = e.response[@\"statuses\"];\n        NSDictionary *status = statuses[0];\n        NSString *message = [NSString stringWithFormat:@\"message: %@\", user[@\"message\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"status_id\", \"4d6e88886f70950c89000005\");\n\ntry {\n    APSStatuses.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray status = e.getResponse().getJSONArray(\"statuses\").getJSONObject(0);\n                    Log.i(\"APSStatuses\", status.getString(\"message\"));\n                } catch (JSONException err) {\n                    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n                }\n            } else {\n                Log.e(\"APSStatuses\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSStatuses\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.statusesShow({\n    place_id: savedStatusId\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.statuses[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "status_id",
              "doc": "<p>ID of the status to show.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response JSON.</p>\n\n<p>In order to reduce server API calls from an application, the response JSON may\ninclude not just the objects that are being queried/searched, but also\nsome important data related to the returned objects such as object's owner or\nreferenced objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the Status object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "statuses",
              "doc": "<p>Single-element array containing the identified status.</p>\n",
              "optional": true,
              "type": "Statuses[]",
              "html_type": "Statuses[]"
            }
          ],
          "owner": "Statuses",
          "shortDoc": "Returns the identified status message. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Updates a status for the currenty logged in user. You can optionally associate the updated status\nwith either an existing <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object or an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object, but not both.</p>\n\n<p>Application admins can update another user's status on their behalf by including the\n<code>su_id</code> field in the request.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "statuses/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Requires Release 3.2.0. This example updates a status and checks the response.</p>\n\n<pre><code>Cloud.Statuses.update({\n    status_id: statusId,\n    message: 'What a lovely view!'\n}, function (e) {\n    if (e.success) {\n        var status = e.statuses[0];\n        alert('Success:\\n' +\n            'id: ' + status.id + '\\n' +\n            'message: ' + status.message);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -F \"message=Having a blast at the beach\" -F \"status_id=4d6e86ed6f70950c89000004\" https://api.cloud.appcelerator.com/v1/statuses/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updateStatus\"\n  },\n  \"response\": {\n    \"statuses\": [\n      {\n        \"id\":\"4d6e86ed6f70950c89000004\",\n        \"message\":\"Having a blast at the beach\",\n        \"created_at\":\"2011-03-02T18:05:33+0000\",\n        \"updated_at\":\"2012-04-01T15:01:30+0000\",\n        \"photo\": {\n            \"id\":\"4dcf261cd0afbe1833000002\",\n            \"filename\":\"photo.jpg\",\n            \"size\":584344,\n            \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n            \"created_at\":\"2011-05-15T01:02:20+0000\",\n            \"updated_at\":\"2011-05-15T01:02:20+0000\",\n            \"processed\":false\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"status_id\": @\"4d6e86ed6f70950c89000004\",\n    @\"message\":@\"Hardly working at Appcelerator Cloud Services Office\"\n};\n\n[APSStatuses update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"message\", \"updated status!\");\ndata.put(\"status_id\", \"4d6e86ed6f70950c89000004\");\n\ntry {\n    APSStatuses.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSStatuses\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSStatuses\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSStatuses\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Statuses/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.statusesUpdate({\n    status_id: statusId,\n    message: 'What a lovely view!',\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.statuses[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "status_id",
              "doc": "<p>ID of the status to update.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "message",
              "doc": "<p>Status message.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "place_id",
              "doc": "<p>ID of the <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object this status is associated with. You can associate the status\neither with a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object or an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object, but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "event_id",
              "doc": "<p>ID of the <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object this status is associated with. You can associate the status\neither with an <a href=\"#!/api/Events\" rel=\"Events\" class=\"docClass\">Events</a> object or a <a href=\"#!/api/Places\" rel=\"Places\" class=\"docClass\">Places</a> object, but not both.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for this status.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for this status.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this status.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this status.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this status.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update the status on behalf of.</p>\n\n<p>The current login user must be an application admin to update a status on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "statuses",
              "doc": "<p>Single-element array containing the updated status.</p>\n",
              "optional": true,
              "type": "Statuses[]",
              "html_type": "Statuses[]"
            }
          ],
          "owner": "Statuses",
          "shortDoc": "Updates a status for the currenty logged in user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  },
  {
    "tagname": "class",
    "name": "Users",
    "doc": "<p>Represents a user account.</p>\n\n<p>By default, new user accounts are activated as soon as they are created. You can enable new user\naccount email verification in the <strong>Cloud > Settings &amp; Configuration > Settings</strong> tab in <a href=\"https://dashboard.appcelerator.com\">Appcelerator Dashboard</a>\nor the Settings tab in <a href=\"https://my.appcelerator.com/apps\">My Apps</a>. Once enabled, new users will receive an email\nwith instructions to activate their account. This setting doesn't apply when a new user\nis created by logging in with an external account (see <a href=\"#!/api/SocialIntegrations\" rel=\"SocialIntegrations\" class=\"docClass\">SocialIntegrations</a>).</p>\n\n<p>A new user must specify at least one of the following when creating an account:</p>\n\n<ul>\n<li> username</li>\n<li> email address, first_name <strong>and</strong> last_name.</li>\n</ul>\n\n\n<p><strong>Note:</strong> both the <code>username</code> and <code>email</code> fields are stored as lowercase strings.</p>\n",
    "alternateClassNames": [

    ],
    "mixins": [

    ],
    "meta": {
    },
    "aliases": {
    },
    "files": [
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
        "linenr": 0
      },
      {
        "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
        "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
        "linenr": 0
      }
    ],
    "members": {
      "cfg": [

      ],
      "property": [
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "admin",
          "id": "property-admin",
          "doc": "<p>Set to true if the user is an application admin.</p>\n",
          "type": "Boolean",
          "owner": "Users",
          "html_type": "Boolean",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "created_at",
          "id": "property-created_at",
          "doc": "<p>Creation date for this user object.</p>\n",
          "type": "Date",
          "owner": "Users",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "custom_fields",
          "id": "property-custom_fields",
          "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
          "type": "String/Hash",
          "owner": "Users",
          "shortDoc": "User defined fields. ...",
          "html_type": "String/Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "email",
          "id": "property-email",
          "doc": "<p>User's email address. Stored as a lowercase string.</p>\n\n<p>For security, this field is not shown unless you have admin access.</p>\n",
          "type": "String",
          "owner": "Users",
          "shortDoc": "User's email address. ...",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "external_accounts",
          "id": "property-external_accounts",
          "doc": "<p>List of external accounts associated with this user. Each account is represented\nby a Hash with the following properties:</p>\n\n<ul>\n<li><code>external_id: String</code>. External account ID.</li>\n<li><code>external_type: String</code>. Account type, for example, \"facebook\".</li>\n<li><code>token: String</code>. External account login token.</li>\n</ul>\n\n",
          "type": "Hash[]",
          "owner": "Users",
          "shortDoc": "List of external accounts associated with this user. ...",
          "html_type": "Hash[]",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "first_name",
          "id": "property-first_name",
          "doc": "<p>User's first name.</p>\n",
          "type": "String",
          "owner": "Users",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "friend_counts",
          "id": "property-friend_counts",
          "doc": "<p>Dictionary describing the number of friends the user has.  Possible keys returned are:</p>\n\n<ul>\n<li><code>requests</code>: number of pending friend requests.</li>\n<li><code>friends</code>: number of friends if two-way friendship is enabled.</li>\n<li><code>following</code>: number of friends being followed by the user if one-way friendship is enabled.</li>\n<li><code>follows</code>: number of friends following the user if one-way friendship is enabled.</li>\n</ul>\n\n",
          "type": "Hash",
          "owner": "Users",
          "shortDoc": "Dictionary describing the number of friends the user has. ...",
          "html_type": "Hash",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "id",
          "id": "property-id",
          "doc": "<p>User's ID, generated by ArrowDB.</p>\n",
          "type": "String",
          "owner": "Users",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "last_name",
          "id": "property-last_name",
          "doc": "<p>User's last name</p>\n",
          "type": "String",
          "owner": "Users",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "photo",
          "id": "property-photo",
          "doc": "<p>Primary photo for this user.</p>\n",
          "type": "Photos",
          "owner": "Users",
          "html_type": "Photos",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "role",
          "id": "property-role",
          "doc": "<p>User's role.</p>\n",
          "type": "String",
          "owner": "Users",
          "html_type": "String",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "updated_at",
          "id": "property-updated_at",
          "doc": "<p>Last update time for this user object.</p>\n",
          "type": "Date",
          "owner": "Users",
          "html_type": "Date",
          "html_meta": {
          }
        },
        {
          "tagname": "property",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/Users.yml",
              "linenr": 0
            }
          ],
          "optional": true,
          "meta": {
            "[:hide]": false
          },
          "name": "username",
          "id": "property-username",
          "doc": "<p>User's login name. Stored as a lowercase string.</p>\n",
          "type": "String",
          "owner": "Users",
          "shortDoc": "User's login name. ...",
          "html_type": "String",
          "html_meta": {
          }
        }
      ],
      "method": [
        {
          "tagname": "method",
          "name": "batch_delete",
          "deprecated": false,
          "id": "method-batch_delete",
          "doc": "<p>Deletes Users objects that match the query constraints provided in the <code>where</code> parameter.\nIf no <code>where</code> parameter is provided, all Users objects are deleted.\nNote that an HTTP 200 code (success)\nis returned if the call completed successfully but the query matched no objects.</p>\n\n<p>For performance reasons, the number of objects that can be deleted in a single batch delete\noperation is limited to 100,000.</p>\n\n<p>The matched objects are deleted asynchronously in a separate process.</p>\n\n<p>The <a href=\"#!/api/Users-property-photo\" rel=\"Users-property-photo\" class=\"docClass\">primary photos</a> associated with the matched objects are\nnot deleted.</p>\n\n<p>You must be an application admin to run this command.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": true
          },
          "url": "users/batch_delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to delete all User objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"users/batch_delete.json\",\n    method : \"DELETE\"\n}, function(e) {\n    if (e.success) {\n        alert(\"All users have been deleted.\");\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE -F \"where={\\\"favorite_color\\\":\\\"blue\\\"}\" https://api.cloud.appcelerator.com/v1/users/batch_delete.json?key=&lt;API_KEY&gt;&amp;pretty_json=true                 \n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\": \"ok\",\n    \"code\": 200,\n    \"method_name\": \"batchDelete\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to delete all User objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"users/batch_delete.json\" method:@\"DELETE\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"All users have been deleted.\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to delete all User objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"users/batch_delete.json\", \"DELETE\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            new AlertDialog.Builder(currentActivity)\n            .setTitle(\"Success!\").setMessage(\"All users have been deleted.\")\n            .setPositiveButton(android.R.string.ok, null)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .show();\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/batch_delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersBatchDelete({\n    where: {\n        'first_name': 'Jon'\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "where",
              "doc": "<p>Encoded JSON object that specifies constraint values for Users objects to delete.\nIf not specified, all Users objects are deleted.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            }
          ],
          "owner": "Users",
          "shortDoc": "Deletes Users objects that match the query constraints provided in the where parameter. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>",
            "adminRequired": null
          }
        },
        {
          "tagname": "method",
          "name": "count",
          "deprecated": false,
          "id": "method-count",
          "doc": "<p>Retrieves the total number of User objects.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/count.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>Example request to retrieve the total number of User objects.</p>\n\n<pre><code>Cloud.sendRequest({\n    url : \"users/count.json\",\n    method : \"GET\"\n}, function(e) {\n    if (e.success) {\n        alert(e.meta.count);\n    } else {\n        alert('Error:\\n' + ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/count.json?key=&lt;YOUR_APP_KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"usersCount\",\n    \"count\": 1\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example request to retrieve the total number of User objects.</p>\n\n<pre><code>[[APSCloud sharedInstance] sendRequest:@\"users/count.json\" method:@\"GET\" data:nil handler:^(APSResponse *e){\n    if (e.success) {\n        NSString *msg = [NSString stringWithFormat:@\"Count: %@\", [e.meta valueForKey:@\"count\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.errorMessage delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example request to retrieve the total number of User objects.</p>\n\n<pre><code>APSCloud.getInstance().sendRequest(\"users/count.json\", \"GET\", null, new APSResponseHandler() {\n    public void onResponse(final APSResponse e) {\n        if (e.getSuccess()) {\n            try {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Count: \" + Double.toString(e.getMeta().getDouble(\"count\")))\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } catch (Exception error) {\n                Log.e(\"APSCloud\", \"Exception throw: \" + error.toString());\n            }\n        }\n        else {\n            Log.e(\"APSCloud\", e.getErrorMessage());\n        }\n    }\n\n    @Override\n    public void onException(APSCloudException e) {\n        Log.e(\"APSCloud\", \"Exception throw: \" + e.toString());\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/count.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersCount(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.meta.count);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "response": [
            {
              "name": "count",
              "doc": "<p>Total number of User objects. Returned in the <code>meta</code> header.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            }
          ],
          "owner": "Users",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "create",
          "deprecated": false,
          "id": "method-create",
          "doc": "<p>Creates a new user.</p>\n\n<p>When creating a user, you must specify either:</p>\n\n<ul>\n<li>username</li>\n<li>email address, first name, and last name</li>\n</ul>\n\n\n<p>A user can have both an email address and username specified. However, if username\nis omitted, email address, first name and last name are required.</p>\n\n<p>For regular users (non-admin users), after successully executing this command, you will be logged\nin as the new user and the session ID will be associated with the newly created user.  For\nexample, when user A creates user B, user A is now logged in as user B and user A's session\nID belongs to user B.</p>\n\n<p>For admin users, you will still be logged in as the admin user.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/create.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example creates a new user and checks the response.</p>\n\n<pre><code>Cloud.Users.create({\n    email: 'test@mycompany.com',\n    first_name: 'test_firstname',\n    last_name: 'test_lastname',\n    password: 'test_password',\n    password_confirmation: 'test_password'\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'sessionId: ' + Cloud.sessionId + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X POST --data-urlencode \"email=john.smith@company.com\" --data-urlencode \"role=teacher\" --data-urlencode \"first_name=John\" --data-urlencode \"last_name=Smith\" --data-urlencode \"password=pass\" --data-urlencode \"password_confirmation=pass\" --data-urlencode 'custom_fields={\"age\":28, \"favorite_color\":\"blue\"}' \"https://api.cloud.appcelerator.com/v1/users/create.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"stat\":\"ok\",\n    \"code\":200,\n    \"method\":\"createUser\",\n    \"session_id\": \"abcDe0fGHijklenmU6xrdR9123-0\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4d6e77386f70950c89000001\",\n        \"first_name\":\"John\",\n        \"last_name\":\"Smith\",\n        \"role\": \"teacher\",\n        \"created_at\":\"2011-03-02T16:58:32+0000\",\n        \"updated_at\":\"2011-03-02T16:58:32+0000\",\n        \"facebook_authorized\":false,\n        \"email\":\"john.smith@company.com\",\n        \"photo\": {\n          \"id\":\"4d882896d0afbe0a3600000d\",\n          \"filename\":\"photo.jpg\",\n          \"size\":584344,\n          \"md5\":\"589b8ad43ed20bf8e622d719642bc939\",\n          \"created_at\":\"2011-03-22T04:41:58+0000\",\n          \"updated_at\":\"2011-03-22T04:42:07+0000\",\n          \"processed\":false\n        },\n        \"custom_fields\": {\n          \"age\":28,\n          \"favorite_color\":\"blue\"\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n\n<p>The User object is defined in <code>ACSClient/Models/CCUser.h</code> The Appcelerator\nCloud Services SDK automatically stores a logged in user’s session in memory\nand on disk. So once a user is logged in, you can access the current user info\nanytime by calling:</p>\n\n<pre><code>[[ACSClient defaultACSClient] getCurrentUser]\n</code></pre>\n\n<p>It will work after the app is restarted since the session is persisted on disk\nas well.</p>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"email\": @\"foo@foo.com\",\n    @\"password\": @\"pass\",\n    @\"password_confirmation\": @\"pass\",\n    @\"first_name\": @\"John\",\n    @\"last_name\": @\"Woo\",\n};\n\n[APSUsers create:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *userId = [[[e.response objectForKey:@\"users\"] objectAtIndex:0] objectForKey:@\"id\"];\n        NSString *msg = [NSString stringWithFormat:@\"Created! You are now logged in as %@\", userId];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"test@appcelerator.com\");\ndata.put(\"first_name\", \"test_firstname\");\ndata.put(\"last_name\", \"test_lastname\");\ndata.put(\"password\", \"test_password\");\ndata.put(\"password_confirmation\", \"test_password\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSUsers.create(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    String userId = e.getResponse().getJSONArray(\"users\").getJSONObject(0).getString(\"id\");\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Created! You are now logged in as \" + userId)\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/create.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersCreate({\n    email: 'test@mycompany.com',\n    first_name: 'test_firstname',\n    last_name: 'test_lastname',\n    password: 'test_password',\n    password_confirmation: 'test_password'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n        // If you are manually managing user sessions or cookies,\n        // the method returns both a cookie and session ID.\n        arrowDBApp.sessionCookieString = result.cookieString;\n        sessionID = result.body.meta.session_id;\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "email",
              "doc": "<p>User's email address. Required if <code>username</code> is not specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "username",
              "doc": "<p>User's login name. Required if <code>email</code> is not specified.</p>\n\n<p>If <code>username</code> is not specified, <code>email</code>, <code>first_name</code>, and <code>last_name</code> must be included.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "password",
              "doc": "<p>User's password.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "password_confirmation",
              "doc": "<p>Copy of user's password for confirmation.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "first_name",
              "doc": "<p>User's first name. Required when <code>username</code> is not provided.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "last_name",
              "doc": "<p>User's last name. Required when <code>username</code> is not provided.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to attach as the primary photo for the user.</p>\n\n<p>When you use the <code>photo</code> parameter to attach a new photo, you can use the\n<a href=\"#!/guide/photosizes\">custom resize and sync options</a>.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to attach as the primary photo for the user.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated list of tags for this user.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User defined fields. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String/Hash",
              "html_type": "String/Hash"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to create this user on behalf of.</p>\n\n<p>The current login user must be an application admin to create a user on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "role",
              "doc": "<p>String representation of user role, for example, \"teacher\".</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "template",
              "doc": "<p>Send a congratulation email to notify that the user has been created successfully.</p>\n\n<p>You need to create an email template and pass the template name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "confirmation_template",
              "doc": "<p>If \"New User Email Verification\" is enabled for the application, ArrowDB sends a confirmation email to\nthe user.</p>\n\n<p>If you don't pass the <code>confirmation_template</code> parameter, then ArrowDB sends a default\nconfirmation email.</p>\n\n<p>If you wish to use your custom email body, you can create a email template and pass\nthe template name. Your email template must contain the following URL to allow users\nto be redirected to Appcelerator Cloud Services email verification page:</p>\n\n<pre><code> https://cloud.appcelerator.com/users/confirmation?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>If you have your own website that talks to Appcelerator Cloud Services backend and\nwish to use custom URL, you must provide a URL with the following format:</p>\n\n<pre><code> https://&lt;your_url.com&gt;/&lt;your_method&gt;?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>When a user visits the above URL, you call the ArrowDB <code>users/confirm_user.json</code> method to\nconfirm the user internally from your web server and you must append the query parameter <code>&amp;ct=enterprise</code>\nto the end of the URL:</p>\n\n<pre><code> GET https://api.cloud.appcelerator.com/v1/users/confirm_user.json?confirmation_token={{confirmation_token}}&amp;key=&lt;Your App Key&gt;&amp;ct=enterprise\n</code></pre>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>Single-element array containing user record for the new user.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "Users",
          "shortDoc": "Creates a new user. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "delete",
          "deprecated": false,
          "id": "method-delete",
          "doc": "<p>A user must already be logged in to their account to delete it. Any <a href=\"#!/api/Friends\" rel=\"Friends\" class=\"docClass\">Friends</a>-related\ndata and push notification subscriptions associated with the user are also deleted.</p>\n\n<p>The user's associated <a href=\"#!/api/Users-property-photo\" rel=\"Users-property-photo\" class=\"docClass\">primary photo</a> is not deleted.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "users/delete.json",
          "httpMethod": "DELETE",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example deletes the current user and checks the response.</p>\n\n<pre><code>Cloud.Users.remove(function (e) {\n    if (e.success) {\n        alert('Success: Removed');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X DELETE https://api.cloud.appcelerator.com/v1/users/delete.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n \"meta\": {\n   \"status\":\"ok\",\n   \"code\":200,\n   \"method_name\":\"deleteUser\"\n }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>[APSUsers remove:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Removed!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\ntry {\n    APSUsers.remove(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success!\").setMessage(\"Removed!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/delete.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersDelete(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('BALEETED!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "su_id",
              "doc": "<p>User ID to delete this user on behalf of.</p>\n\n<p>The current login user must be an application admin to delete a user on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "A user must already be logged in to their account to delete it. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "login",
          "deprecated": false,
          "id": "method-login",
          "doc": "<p>Log a user in using their ArrowDB credentials.</p>\n\n<p>To log a user in using an external account, see <a href=\"#!/api/SocialIntegrations-method-external_account_login\" rel=\"SocialIntegrations-method-external_account_login\" class=\"docClass\">External Account Login</a>.</p>\n\n<p>To log a user out, see <a href=\"#!/api/Users-method-logout\" rel=\"Users-method-logout\" class=\"docClass\">logout</a>.</p>\n\n<p>User login sessions expire after they have been unused for three months.\nIf the application saves and uses a persistent reference to the user login session, and the\nuser session expires, any ArrowDB call that requires a user login will return a 404 error.\nYour application needs to handle an invalid user session error, such as prompting the user\nto log in.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/login.json",
          "httpMethod": "POST",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example logs a user in and checks the response.</p>\n\n<pre><code>Cloud.Users.login({\n    login: 'test@mycompany.com',\n    password: 'test_password'\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'sessionId: ' + Cloud.sessionId + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -F \"login=mgoff@appcelerator.com\" -F \"password=food\" https://api.cloud.appcelerator.com/v1/users/login.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"loginUser\",\n    \"session_id\": \"abcDe0fGHijklenmU6xrdR9t0Z-0\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4d6e77386f70950c89000001\",\n        \"first_name\":\"Michael\",\n        \"last_name\":\"Goff\",\n        \"created_at\":\"2011-03-02T16:58:32+0000\",\n        \"updated_at\":\"2011-03-02T17:18:44+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2012-03-05T20:56:14+0000\",\n        \"username\": \"mgoff\",\n        \"role\": \"\",\n        \"email\": \"mgoff@appcelerator.com\",\n        \"admin\": \"true\",\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>NSDictionary *data = @{\n   @\"login\":@\"foo@foo.com\",\n   @\"password\":\"@password\"\n};\n\n[APSUsers login:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *userId = [[[e.response objectForKey:@\"users\"] objectAtIndex:0] objectForKey:@\"id\"];\n        NSString *msg = [NSString stringWithFormat:@\"Logged in! You are now logged in as %@\", userId];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:msg delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"login\", \"test@appcelerator.com\");\ndata.put(\"password\", \"test_password\");\n\ntry {\n    APSUsers.login(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    String userId = e.getResponse().getJSONArray(\"users\").getJSONObject(0).getString(\"id\");\n                    new AlertDialog.Builder(currentActivity)\n                    .setTitle(\"Success!\").setMessage(\"Logged in! You are now logged in as \" + userId)\n                    .setPositiveButton(android.R.string.ok, null)\n                    .setIcon(android.R.drawable.ic_dialog_info)\n                    .show();\n                } catch (JSONException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/login.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersLogin({\n    login: 'test@mycompany.com',\n    password: 'test_password'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n        // If you are manually managing user sessions or cookies,\n        // the method returns both a cookie and session ID.\n        arrowDBApp.sessionCookieString = result.cookieString;\n        sessionID = result.body.meta.session_id;\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "login",
              "doc": "<p>Email address or username of the user to login.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "password",
              "doc": "<p>User's password.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "Log a user in using their ArrowDB credentials. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "logout",
          "deprecated": false,
          "id": "method-logout",
          "doc": "<p>Log out a user.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "users/logout.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example logs out the current user and checks the response.</p>\n\n<pre><code>Cloud.Users.logout(function (e) {\n    if (e.success) {\n        alert('Success: Logged out');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/users/logout.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"logoutUser\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSUsers logout:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Logged out!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\ntry {\n    APSUsers.logout(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                Toast.makeText(currentActivity, \"Logged out!\", Toast.LENGTH_SHORT);\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/logout.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersLogout(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Logged out!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "device_token",
              "doc": "<p>If specified, all push subscriptions associated with this device token are\ncanceled. See the \"Push Notifications\" section in the\n<a href=\"#!/guide/sdks/android\">Android SDK guide</a> for more information.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "Log out a user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "query",
          "deprecated": false,
          "id": "method-query",
          "doc": "<p>Custom query of Users objects with sorting and paginating. You can query on sort\nbased on the data in any of the standard User fields. You can also query and\nsort data based on the values of any custom fields, if the values are simple JSON\nvalues.</p>\n\n<p>For security reasons, when querying for <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a> the <a href=\"#!/api/Users-property-email\" rel=\"Users-property-email\" class=\"docClass\">email</a> field is not returned\nin each Users object unless you have <a href=\"#!/guide/admin_access\">admin access</a>.</p>\n\n<p>Currently you <strong>cannot</strong> sort or query based on data stored inside array or hash\nobjects in custom fields.</p>\n\n<p>In ArrowDB 1.1.5 and later, you can paginate query results using <code>skip</code> and <code>limit</code> parameters, or by including\na <code>where</code> clause to limit the results to objects whose IDs fall within a specified range.\nFor details, see <a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a>.</p>\n\n<p>For details about using the query parameters,\nsee the <a href=\"#!/guide/search_query\">Search and Query guide</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/query.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about specific users and checks the response.</p>\n\n<pre><code>Cloud.Users.query({\n    page: 1,\n    per_page: 10,\n    where: {\n        age: { '$gt': 28 },\n        favorite_color: 'blue',\n        first_name: 'joe'\n    }\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -c cookies.txt -b cookies.txt -X GET --data-urlencode 'where={\"first_name\":\"joe\",\"coordinates\":{\"$nearSphere\":[-122.1,37.1], \"$maxDistance\" : 0.00126}}' --data-urlencode 'order=created_at' \"https://api.cloud.appcelerator.com/v1/users/query.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;count=true\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"queryUsers\",\n    \"count\": 100\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"joe\",\n        \"last_name\": \"smith\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"jsmith\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>[APSUsers query:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu statuses\", (unsigned long)((NSArray *)e.response[@\"statuses\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success!\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String,Object&gt; data = new HashMap&lt;String,Object&gt;;\nJSONObject params = new JSONObject(\"{'first_name': 'joe', 'coordinates': {'$nearSphere': [-122.1,37.1], '$maxDistance': 0.00126}}\");\ndata.put(\"where\", params);\n\ntry {\n    APSUsers.query(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    if (users.length() &lt;= 0) {\n                        Log.i(\"APSUsers\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject user = users.getJSONObject(i);\n                            Log.i(\"APSUsers\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                       Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/query.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersQuery({\n    limit: 10,\n    where: {\n        age: { '$gt': 28 },\n        favorite_color: 'blue',\n        first_name: 'joe'\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.users.forEach(function(user) {\n            console.log(user.first_name + ' ' + user.last_name)\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p class=\"note\">\n<code>page</code> and <code>per_page</code> are no longer supported in query operations.\nApplications should instead use <strong>skip</strong> and <strong>limit</strong>\nquery parameters.\n</p>\n\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "limit",
              "doc": "<p>The number of records to fetch. The value must be greater than 0, and no greater than\n1000, or an HTTP 400 (Bad Request) error will be returned. Default value of <code>limit</code> is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "skip",
              "doc": "<p>The number of records to skip. The value must be greater than or equal to 0, and no greater\nthan 4999, or an HTTP 400 error will be returned. To skip 5000 records or more\nyou need to perform a range-based query. See\n<a href=\"#!/guide/search_query-section-query-pagination\">Query Pagination</a> for more information.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "where",
              "doc": "<p>Constraint values for fields. <code>where</code> should be encoded JSON.</p>\n\n<p>If <code>where</code> is not specified, <code>query</code> returns all objects.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "order",
              "doc": "<p>Sort results by one or more fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "sel",
              "doc": "<p>Selects the object fields to display. Do not use this parameter with <code>unsel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong>, each User object in the response includes <code>\"current_user_liked: true\"</code>\n if the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "unsel",
              "doc": "<p>Selects the object fields NOT to display. Do not use this parameter with <code>sel</code>.</p>\n",
              "optional": true,
              "type": "Hash",
              "html_type": "Hash"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>List of users matching the query parameters.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "Users",
          "shortDoc": "Custom query of Users objects with sorting and paginating. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "request_reset_password",
          "deprecated": false,
          "id": "method-request_reset_password",
          "doc": "<p>Sends an email to a user containing a link to recover a lost password. You can use the default\nemail template provided by ACS, or specify a <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Managing_Email_Templates-section-37548619_ManagingEmailTemplates-Creatinganemailtemplate\">custom email template</a>\nthat you have created. When using a custom email template, the email must contain a properly\nformatted URL, as explained in the <code>template</code> method parameter documentation below.</p>\n\n<p>You must also have configured your application's <a href=\"http://docs.appcelerator.com/platform/latest/#!/guide/Configuring_Cloud_Services-section-39683049_ConfiguringCloudServices-Email\">email settings</a>\nin Appcelerator Dashboard.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/request_reset_password.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests a password reset for a user and checks the response.</p>\n\n<pre><code>Cloud.Users.requestResetPassword({\n    email: 'email.value',\n    from: 'email@company.com',\n}, function (e) {\n    if (e.success) {\n        alert('Success: Reset Request Sent');\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/request_reset_password.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;email=foo@foo.com\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"RequestResetPassword\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>The following example creates an NSDictionary of parameters to be passed with the request.\nThe object <code>emailField</code> is a UITextField (not shown).</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"email\":@\"foo@foo.com\"\n};\n\n[APSUsers requestResetPassword:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Please check your email!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"foo@foo.com\");\n\ntry {\n    APSUsers.requestResetPassword(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Please check your email!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/reset_password.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersRequestResetPassword({\n    email: 'joeuser@mycompany.com'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Password reset request sent!')\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "email",
              "doc": "<p>Email address. Must match the user's registered email address.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "subject",
              "doc": "<p>The default subject of the password reset email is \"Password reset request for\n{{your app name}}\". If you wish to have your custom email subject, you can\nprovide it by setting the subject parameter</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "template",
              "doc": "<p>If you wish to use your custom email body. You can create a email template and\npass the template name. The email must contain a properly formatted link to the password\nreset URL on appcelerator.com, or a link on your own site, as follows:</p>\n\n<p><p></p>\n\n<p>To link directly to the password page, your email template must contain a link to the following\nURL:</p>\n\n<pre><code>https://platform.appcelerator.com/#/users/reset_password/{{key}}/{{reset_password_token}}\n</code></pre>\n\n<p>If you prefer the user to reset their password on your own website, rather than on appcelerator.com,\nyou must provide a URL with the following format:</p>\n\n<pre><code>https://[your_url.com]/[your_method]?key={{key}}&amp;reset_password_token={{reset_password_token}}\n</code></pre>\n\n<p>This page must cache the value of the <code>reset_password_token</code> parameter and present a form\nthat allows the user to enter a new password and password confirmation.\nWhen the user submits the form, the app server must make the following call to Appcelerator Cloud Services API to reset the\npassword, passing the original password reset token, the user's new password, and the password confirmation:</p>\n\n<pre><code>GET https://api.cloud.appcelerator.com/v1/users/reset_password.json?key=&lt;Your App Key&gt;&amp;reset_password_token={{reset_password_token}}&amp;password={{password}} &amp;password_confirmation={{password_confirmation}}\n</code></pre>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "Sends an email to a user containing a link to recover a lost password. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "resend_confirmation",
          "deprecated": false,
          "id": "method-resend_confirmation",
          "doc": "<p>If you enabled new user account email verification in your App settings, all\nnew users will receive an email containing instructions to activate their\naccount. You can use this API to re-send user verification email.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/resend_confirmation.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>The following example re-sends a verification email to the user's registered email.\nIf the reset request is successful, an alert dialog is displayed asking the user to check their email; otherwise, an error is generated.  Available as a Titanium API since release 3.2.0.</p>\n\n<pre><code>Cloud.Users.resendConfirmation({\n    email: email.value\n}, function (e) {\n    if (e.success) {\n        alert('Please check your email!');\n        email.value = '';\n    }\n    else {\n        error(e);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/resend_confirmation.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;email=foo@foo.com\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"resendConfirmation\"\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{\n    @\"email\": @\"foo@foo.com\"\n};\n\n[APSUsers resendConfirmation:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Please check your email!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"foo@foo.com\");\n\ntry {\n    APSUsers.resendConfirmation(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Please check your email!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/user_verification.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersResendConfirmation({\n    email: 'joeuser@mycompany.com'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Confirmation e-mail sent!');\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "email",
              "doc": "<p>Email must match user's registered email.</p>\n",
              "optional": false,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "confirmation_subject",
              "doc": "<p>The default subject of the email verification is \"Email Verification\nInstructions for {{your app name}}\". If you wish to have your custom email\nsubject, you can provide it by setting the <code>confirmation_subject</code> parameter.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "confirmation_template",
              "doc": "<p>If you wish to use your custom email body. You can create a email template and\npass the template name. Your email template must contain the following URL to\nallow users to be redirected to Appcelerator Cloud Services email verification page:</p>\n\n<pre><code>https://cloud.appcelerator.com/users/confirmation?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>If you have your own website that talks to Appcelerator Cloud Services backend\nand wish to use custom URL, you must provide a URL with the following format:</p>\n\n<pre><code>https://[your_url.com]/[your_method]?key={{key}}&amp;confirmation_token={{confirmation_token}}\n</code></pre>\n\n<p>When a user visits the above URL, you make a call to Appcelerator Cloud\nServices to confirm the user internally from your web server:</p>\n\n<pre><code>GET https://api.cloud.appcelerator.com/v1/users/confirm_user.json?confirmation_token={{confirmation_token}}&amp;key=&lt;Your App Key&gt;\n</code></pre>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "If you enabled new user account email verification in your App settings, all\nnew users will receive an email containi...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "search",
          "deprecated": true,
          "id": "method-search",
          "doc": "<p>Returns the list of users that have been added to the app, sorted by search\nrelevancy.</p>\n\n<p>Optionally, <code>q</code> can be given to perform full text search on user's first name,\nlast name, email address, username and tags. For security reasons, when searching for <a href=\"#!/api/Users\" rel=\"Users\" class=\"docClass\">Users</a>\nthe <a href=\"#!/api/Users-property-email\" rel=\"Users-property-email\" class=\"docClass\">email</a> field is not returned in each Users object unless you have\n<a href=\"#!/guide/admin_access\">admin access</a>.</p>\n\n<p>For advanced custom search, see <a href=\"#!/api/Users-method-query\" rel=\"Users-method-query\" class=\"docClass\">query</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false,
            "deprecated": {
              "version": "1.3.0",
              "text": "Use the {@link Users#query} method instead with the `$text` query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.\n"
            }
          },
          "url": "users/search.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about particular users and checks the response.</p>\n\n<pre><code>Cloud.Users.search({\n    q: 'test'\n}, function (e) {\n    if (e.success) {\n        alert('Success:\\n' +\n            'Count: ' + e.users.length);\n        for (var i = 0; i &lt; e.users.length; i++) {\n            var user = e.users[i];\n            alert('id: ' + user.id + '\\n' +\n                'first name: ' + user.first_name + '\\n' +\n                'last name: ' + user.last_name);\n         }\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt https://api.cloud.appcelerator.com/v1/users/search.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"searchUsers\",\n    \"page\":1,\n    \"per_page\":10,\n    \"total_pages\":1,\n    \"total_results\":1\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"Roy\",\n        \"last_name\": \"Harper\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"speedy\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{@\"q\":@\"John\"};\n\n[APSUsers search:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSString *message = [NSString stringWithFormat:@\"Found %lu users\", (unsigned long)((NSArray *)e.response[@\"users\"]).count ];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:e.responseString delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"q\", \"Peter,Paul,Mary\");\n\ntry {\n    APSUsers.search(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n\n            if (e.getSuccess()) {\n                try {\n                    JSONArray users = e.getResponse().getJSONArray(\"users\");\n                    if (users.length() &lt;= 0) {\n                        Log.i(\"APSUsers\", \"No Results!\");\n                    } else {\n                        for (int i = 0; i &lt; users.length(); i++) {\n                            JSONObject user = users.getJSONObject(i);\n                            Log.i(\"APSUsers\", user.getString(\"first_name\") + \" \" + user.getString(\"last_name\"));\n                        }\n                    }\n                } catch (JSONException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/search.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersSearch({\n    q: 'test'\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        result.body.response.users.forEach(function(user) {\n            console.log(user.first_name + ' ' + user.last_name);\n        });\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "page",
              "doc": "<p>Request page number, default is 1.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "per_page",
              "doc": "<p>Number of results per page, default is 10.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "q",
              "doc": "<p>Space-separated list of keywords, used to perform full text search on first name, last name, email address,\nusername and tags fields.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "Returns the list of users that have been added to the app, sorted by search\nrelevancy. ...",
          "html_meta": {
            "deprecated": "        <div class='signature-box deprecated'>\n        <p><strong>deprecated</strong> since 1.3.0 <p>Use the <a href=\"#!/api/Users-method-query\" rel=\"Users-method-query\" class=\"docClass\">query</a> method instead with the <code>$text</code> query operator.\nDatasources created before Arrow Cloud 1.3.0 can continue to use this API.</p>\n</p>\n        </div>\n"
          }
        },
        {
          "tagname": "method",
          "name": "show",
          "deprecated": false,
          "id": "method-show",
          "doc": "<p>Shows public user information. For private information about the currently\nlogged in user, see <a href=\"#!/api/Users-method-show_me\" rel=\"Users-method-show_me\" class=\"docClass\">Show Logged In User Info</a>.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": false,
            "adminRequired": false
          },
          "url": "users/show.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about a user and checks the response.</p>\n\n<pre><code>Cloud.Users.show({\n    user_id: savedUserInfo.id\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt \"https://api.cloud.appcelerator.com/v1/users/show.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true&amp;user_id=4d6e77386f70950c89000001\"\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showUsers\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"Victor\",\n        \"last_name\": \"Stone\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"cyborg\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS APS SDK call:</p>\n\n<pre><code>NSDictionary *data = @{@\"user_id\": @\"4d6e77386f70950c89000001\"};\n[APSUsers show:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *users = e.response[@\"users\"];\n        NSDictionary *user = files[0];\n        NSString *message = [NSString stringWithFormat:@\"username: %@\", user[@\"username\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"user_id\", \"4d6e77386f70950c89000001\");\n\ntry {\n    APSUsers.show(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/show.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersShow({\n    user_id: savedUserInfo.id\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "user_id",
              "doc": "<p>User ID of the user to show. Either <code>user_id</code> or <code>user_ids</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "user_ids",
              "doc": "<p>Comma-separated list of user IDs to show. Either <code>user_id</code> or <code>user_ids</code> must be specified.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.</p>\n\n<p>In order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "show_user_like",
              "doc": "<p>If set to <strong>true</strong> the User object in the response will include <code>\"current_user_liked: true\"</code>\nif the current user has liked the object. If the user has not liked the object, the\n<code>current_user_liked</code> field is not included in the response.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>List of user profiles.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "Users",
          "shortDoc": "Shows public user information. ...",
          "html_meta": {
          }
        },
        {
          "tagname": "method",
          "name": "show_me",
          "deprecated": false,
          "id": "method-show_me",
          "doc": "<p>Shows both public and private user information about the user who is\ncurrently logged in.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "users/show/me.json",
          "httpMethod": "GET",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example requests information about the currently logged in user and checks the response.</p>\n\n<pre><code>Cloud.Users.showMe(function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt  https://api.cloud.appcelerator.com/v1/users/show/me.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"code\": 200,\n    \"status\": \"ok\",\n    \"method_name\": \"showMe\",\n    \"session_id\": \"xxfbb057xxaafaxx7a0xx400\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\": \"53fbb057c3aafa087a000400\",\n        \"first_name\": \"Donna\",\n        \"last_name\": \"Troy\",\n        \"created_at\": \"2014-08-25T21:53:27+0000\",\n        \"updated_at\": \"2014-08-26T18:43:22+0000\",\n        \"external_accounts\": [\n\n        ],\n        \"confirmed_at\": \"2014-08-25T21:53:27+0000\",\n        \"username\": \"wondergirl\",\n        \"admin\": \"false\",\n        \"stats\": {\n          \"photos\": {\n            \"total_count\": 0\n          },\n          \"storage\": {\n            \"used\": 0\n          }\n        },\n        \"friend_counts\": {\n          \"requests\": 1,\n          \"friends\": 0\n        }\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>[APSUsers showMe:nil withBlock:^(APSResponse *e) {\n    if (e.success) {\n        NSArray *users = e.response[@\"users\"];\n        NSDictionary *user = files[0];\n        NSString *message = [NSString stringWithFormat:@\"I am %@ %@\", user[@\"first_name\"], user[@\"last_name\"]];\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\ntry {\n    APSUsers.showMe(null, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                try {\n                    Toast.makeText(currentActivity, e.getResponseString(), Toast.LENGTH_SHORT);\n                } catch (APSCloudException err) {\n                    Log.e(\"APSUsers\", \"Exception thrown: \" + err.toString());\n                }\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/showme.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersShowMe(function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "response_json_depth",
              "doc": "<p>Nested object depth level counts in response json.\nIn order to reduce server API calls from an application, the response json may\ninclude not just the objects that are being queried/searched, but also with\nsome important data related to the returning objects such as object's owner or\nreferencing objects.</p>\n\n<p>Default is 1, valid range is 1 to 8.</p>\n",
              "optional": true,
              "type": "Number",
              "html_type": "Number"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "owner": "Users",
          "shortDoc": "Shows both public and private user information about the user who is\ncurrently logged in. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        },
        {
          "tagname": "method",
          "name": "update",
          "deprecated": false,
          "id": "method-update",
          "doc": "<p>Any of the same parameters as <a href=\"#!/api/Users-method-create\" rel=\"Users-method-create\" class=\"docClass\">create</a> can be\nused to update the current user. If <code>password</code> is updated then\n<code>password_confirmation</code> must be sent as well.</p>\n",
          "files": [
            {
              "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
              "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
              "linenr": 0
            }
          ],
          "meta": {
            "hide": false,
            "loginRequired": true,
            "adminRequired": false
          },
          "url": "users/update.json",
          "httpMethod": "PUT",
          "return": {
            "type": "undefined",
            "html_type": "undefined"
          },
          "examples": [
            {
              "tagname": "example",
              "name": "example-titanium",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "titanium",
              "doc": "<p>This example updates information about the currently logged in user and checks the response.</p>\n\n<pre><code>Cloud.Users.update({\n    email: 'joeuser@mycompany.com',\n    first_name: 'joe',\n    last_name: 'user',\n    custom_fields: {\n        favorite_color: 'blue',\n        age: 25\n    }\n}, function (e) {\n    if (e.success) {\n        var user = e.users[0];\n        alert('Success:\\n' +\n            'id: ' + user.id + '\\n' +\n            'first name: ' + user.first_name + '\\n' +\n            'last name: ' + user.last_name);\n    } else {\n        alert('Error:\\n' +\n            ((e.error &amp;&amp; e.message) || JSON.stringify(e)));\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-rest",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "rest",
              "doc": "<p>Example cURL request:</p>\n\n<pre><code>$ curl -b cookies.txt -c cookies.txt -X PUT -d \"email=mike@appcelerator.com\" https://api.cloud.appcelerator.com/v1/users/update.json?key=&lt;YOUR APP APP KEY&gt;&amp;pretty_json=true\n</code></pre>\n\n<p>Example JSON response:</p>\n\n<pre><code>{\n  \"meta\": {\n    \"status\":\"ok\",\n    \"code\":200,\n    \"method_name\":\"updateUser\"\n  },\n  \"response\": {\n    \"users\": [\n      {\n        \"id\":\"4d7eb865d0afbe2399000001\",\n        \"first_name\":\"Michael\",\n        \"last_name\":\"Goff\",\n        \"created_at\":\"2011-03-15T00:52:53+0000\",\n        \"updated_at\":\"2011-03-24T17:50:28+0000\",\n        \"facebook_authorized\":false,\n        \"email\":\"mike@appcelerator.com\"\n      }\n    ]\n  }\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-ios",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "ios",
              "doc": "<p>Example iOS call:</p>\n\n<pre><code>// Create dictionary of parameters to be passed with the request\nNSDictionary *data = @{\n    @\"first_name\": @\"Joe\"\n};\n\n[APSUsers update:data withBlock:^(APSResponse *e) {\n    if (e.success) {\n        [[[UIAlertView alloc] initWithTitle:@\"Success\" message:@\"Updated!\" delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    } else {\n        [[[UIAlertView alloc] initWithTitle:@\"Error\" message:e.message delegate:nil cancelButtonTitle:@\"OK\" otherButtonTitles:nil] show];\n    }\n}];\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-android",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "android",
              "doc": "<p>Example Android APS SDK call:</p>\n\n<pre><code>APSServiceManager.getInstance().enable(getApplicationContext(), 'APS_APP_KEY');\nfinal Activity currentActivity = this;\n\nHashMap&lt;String, Object&gt; data = new HashMap&lt;String, Object&gt;();\ndata.put(\"email\", \"test@appcelerator.com\");\ndata.put(\"first_name\", \"test_firstname\");\ndata.put(\"last_name\", \"test_lastname\");\ndata.put(\"password\", \"test_password\");\ndata.put(\"password_confirmation\", \"test_password\");\ndata.put(\"photo\", new File(\"/photos/profile.gif\"));\n\ntry {\n    APSUsers.update(data, new APSResponseHandler() {\n\n        @Override\n        public void onResponse(final APSResponse e) {\n            if (e.getSuccess()) {\n                new AlertDialog.Builder(currentActivity)\n                .setTitle(\"Success\").setMessage(\"Updated!\")\n                .setPositiveButton(android.R.string.ok, null)\n                .setIcon(android.R.drawable.ic_dialog_info)\n                .show();\n            } else {\n                Log.e(\"APSUsers\", \"ERROR: \" + e.getErrorMessage());\n            }\n        }\n\n        @Override\n        public void onException(final APSCloudException e) {\n            Log.e(\"APSUsers\", \"Exception throw: \" + e.toString());\n        }\n    });\n} catch (APSCloudException e) {\n    Log.e(\"APSUsers\", \"Exception thrown: \" + e.toString());\n}\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            },
            {
              "tagname": "example",
              "name": "example-nodejs",
              "files": [
                {
                  "filename": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "href": "/Users/bimmel/Documents/Repositories/cloud_docs/apidoc/Users/update.yml",
                  "linenr": 0
                }
              ],
              "platform": "nodejs",
              "doc": "<p>Example Node.js call:</p>\n\n<pre><code>var ArrowDB = require('arrowdb'),\n    arrowDBApp = new ArrowDB('&lt;App Key&gt;');\narrowDBApp.usersUpdate({\n    email: 'joeuser@mycompany.com',\n    first_name: 'joe',\n    last_name: 'user',\n    custom_fields: {\n        favorite_color: 'blue',\n        age: 25\n    }\n}, function(err, result) {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log(result.body.response.users[0]);\n    }\n});\n</code></pre>\n",
              "meta": {
                "[:hide]": false
              }
            }
          ],
          "params": [
            {
              "name": "email",
              "doc": "<p>Email address.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "username",
              "doc": "<p>User name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "password",
              "doc": "<p>Password.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "password_confirmation",
              "doc": "<p>Password.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "first_name",
              "doc": "<p>First name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "last_name",
              "doc": "<p>First name.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "photo",
              "doc": "<p>New photo to assign as the user's primary photo.</p>\n\n<p>When you use <code>photo</code> parameter to attach a new photo, you can use it with\n<a href=\"/docs/photosizes\">custom resize and sync options</a></p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n",
              "optional": true,
              "type": "Photos",
              "html_type": "Photos"
            },
            {
              "name": "photo_id",
              "doc": "<p>ID of an existing photo to use as the user's primary photo.</p>\n\n<p>To remove primary photo, simply set \"photo=\" or \"photo_id=\". If the original\nphoto was created by using <code>photo</code> parameter, the photo will be deleted.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "tags",
              "doc": "<p>Comma separated tags, overwrites the existing tags. For example, \"hiking,swimming\".</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "custom_fields",
              "doc": "<p>User-defined data. See <a href=\"#!/guide/customfields\">Custom Data Fields</a>.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_name",
              "doc": "<p>Name of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "acl_id",
              "doc": "<p>ID of an <a href=\"#!/api/ACLs\" rel=\"ACLs\" class=\"docClass\">ACLs</a> to associate with this object.</p>\n\n<p>An ACL can be specified using <code>acl_name</code> or <code>acl_id</code>. The two parameters are\nmutually exclusive.</p>\n",
              "optional": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "su_id",
              "doc": "<p>User ID to update this user on behalf of.</p>\n\n<p>The current login user must be an application admin to update a user on\nbehalf of another user.</p>\n",
              "optional": true,
              "adminRequired": true,
              "type": "String",
              "html_type": "String"
            },
            {
              "name": "pretty_json",
              "doc": "<p>Determines if the JSON response is formatted for readability (<code>true</code>), or displayed on a\nsingle line (<code>false</code>). Default is <code>false</code>.</p>\n",
              "optional": true,
              "type": "Boolean",
              "html_type": "Boolean"
            }
          ],
          "response": [
            {
              "name": "users",
              "doc": "<p>Single-element array containing the updated user object.</p>\n",
              "optional": true,
              "type": "Users[]",
              "html_type": "Users[]"
            }
          ],
          "owner": "Users",
          "shortDoc": "Any of the same parameters as create can be\nused to update the current user. ...",
          "html_meta": {
            "loginRequired": "<strong>User Login Required: Yes</strong>"
          }
        }
      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "extends": null,
    "singleton": null,
    "private": null,
    "html_meta": {
    },
    "statics": {
      "cfg": [

      ],
      "property": [

      ],
      "method": [

      ],
      "event": [

      ],
      "css_var": [

      ],
      "css_mixin": [

      ]
    },
    "component": false,
    "superclasses": [

    ],
    "subclasses": [

    ],
    "mixedInto": [

    ],
    "parentMixins": [

    ],
    "requires": [

    ],
    "uses": [

    ]
  }
]
